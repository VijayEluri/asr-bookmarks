<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "DTD/xhtml1-strict.dtd">

<html>
<head>
	<title>Paper Title</title>
	<link rel="stylesheet" href="iw3c2.css" />
</head>
<body>
<div class="meta">
	<h1 class="title">Towards Effective Browsing of Large Scale Social Annotations</h1>
	<div class="authors">
		<div class="author">
			<h2 class="author">Rui Li<a href="#_ftn_" name="_ftnref_1" title="" id="_ftnref_1"><sup>*</sup> </a> </h2>
			<h3 class="affiliation">Shanghai Jiao Tong University<br/>Shanghai, China</h3>
			<h2 class="email"><a href="mailto:rli@apex.sjtu.edu.cn">rli@apex.sjtu.edu.cn</a></h2>
		</div>
		<div class="author">
			<h2 class="author">Shenghua Bao<a href="#_ftn_" name="_ftnref_2" title="" id="_ftnref_2"><sup>*</sup> </a></h2>
			<h3 class="affiliation">Shanghai Jiao Tong University<br/>Shanghai, China</h3>
			<h2 class="email"><a href="mailto:shhbao@apex.sjtu.edu.cn">shhbao@apex.sjtu.edu.cn</a></h2>
		</div>
		<div class="author">
			<h2 class="author">Ben Fei</h2>
			<h3 class="affiliation">IBM China Research Lab<br/>Beijing, China</h3>
			<h2 class="email"><a href="mailto:feiben@cn.ibm.com">feiben@cn.ibm.com</a></h2>
		</div>
		<div class="author">
			<h2 class="author">Zhong Su</h2>
			<h3 class="affiliation">IBM China Research Lab<br/>Beijing, China</h3>
			<h2 class="email"><a href="mailto:suzhong@cn.ibm.com">suzhong@cn.ibm.com</a></h2>
		</div>
		<div class="author">
			<h2 class="author">Yong Yu</h2>
			<h3 class="affiliation">Shanghai Jiao Tong University<br/>Shanghai, China</h3>
			<h2 class="email"><a href="mailto:yyu@apex.sjtu.edu.cn">yyu@apex.sjtu.edu.cn</a></h2>
		</div>
	</div>
	<div class="copyright">
		<p class="copyright">
		Copyright is held by the World Wide Web Conference Committee (IW3C2). 
		Distribution of these papers is limited to classroom use, and personal use by others.<br/>
		WWW 2007, May 8-12, 2007, Banff, Alberta, Canada.<br/>
		ACM 978-1-59593-654-7/07/0005.
		</p>
	</div>
	<div class="abstract">
		<h1 class="abstract">ABSTRACT</h1>
		<p class="abstract"> 
This paper is concerned with the problem of browsing social annotations. Today, a lot of services (e.g., Del.icio.us, Filckr) have been provided for helping users to manage and share their favorite URLs and photos based on social annotations. Due to the exponential increasing of the social annotations, more and more users, however, are facing the problem how to effectively find desired resources from large annotation data. Existing methods such as tag cloud and annotation matching work well only on small annotation sets. Thus, an effective approach for browsing large scale annotation sets and the associated resources is in great demand by both ordinary users and service providers. In this paper, we propose a novel algorithm, namely Effective Large Scale Annotation Browser (ELSABer), to browse large-scale social annotation data. ELSABer helps the users browse huge number of annotations in a semantic, hierarchical and efficient way. More specifically, ELSABer has the following features: 1) the semantic relations between annotations are explored for browsing of similar resources; 2) the hierarchical relations between annotations are constructed for browsing in a top-down fashion; 3) the distribution of social annotations is studied for efficient browsing. By incorporating the personal and time information, ELSABer can be further extended for personalized and time-related browsing. A prototype system is implemented and shows promising results.</p>
	</div>
	<div class="categories">
		<h2 class="categories">Categories &amp; Subject Descriptors</h2>
		<p class="categories"> <strong>H.3.3 [Information Search and Retrieval]:</strong> Information filtering </p>
	</div>

	<div class="terms">
		<h2 class="terms">General Terms</h2>
		<p class="terms"> Algorithms, Experimentation, Human Factors </p>
	</div>
	<div class="keywords">
		<h2 class="keywords">Keywords</h2>
		<p class="keywords"> Annotation browsing, Clustering, Evaluation, Social Annotation. </p>
	</div>
</div>
<div class="paperbody">
  <h1>1.	INTRODUCTION </h1>
	<p>
	With the rapid development of new technologies,  both ordinary users and service providers are experiencing the coming wave of the next-generation Web. As a  representative, tagging based websites, such as Del.icio.us<a href="#_ftn1" name="_ftnref1" title="" id="_ftnref1"><sup>1</sup> </a> and Flicker<a href="#_ftn2" name="_ftnref2" title="" id="_ftnref2"><sup>2</sup> </a>,  have achieved a significant success. Their low technical barriers and the easy  use of annotations have attracted lots of Web users. Millions  of annotations are freely and openly assigned to the digital items like web  pages, photo  images and blog posts. Now, annotation is not only a  method for organizing contents to facilitate the users who create it,  but also a navigation mechanism for users to discover interesting resources. It has  become a new interface of Web and has drawn much attention from both  research and industrial communities.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Currently, there are two main  methods of helping users to seek the information through annotations. The first  one is the keyword-based search, which is the most common way for finding  information on the Web. Systems of this type will display all contents associated  with the given annotation. The second one is a method called tag cloud view <a href="#r20">[20]</a>.  It usually displays the social annotations alphabetically with different font  sizes and colors indicating their popularities. Selecting a specific annotation  will generally lead to the keyword search with the selected annotation as input.  Compared with the direct searching method, tag cloud provides a better user  interface for browsing the popular social annotations. However, the drawbacks  of the methods are obvious, especially when the scale of social annotations is quite  large: 
	</p>
	<ul>
		<li>Contents and annotations are  simply matched by the literal representations instead of the semantic meanings.  The synonymy and ambiguity problems exist in these systems. The synonymy  problem arises when different annotations have similar meanings. As a result,  simple matching can not find all the relevant resources. The ambiguity problem arises  when an annotation has several different meanings. It will introduce noise  pages. Both of these problems influence the performance of existing browsing  systems.
		</li>
		<li>
			The returned results are not categorized.  It is difficult for users to browse thousands of returned results to find their  interested resources.
		</li>
	</ul>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;In this paper, we consider the  problem of browsing large scale social annotation data. An effective algorithm,  Effective Large Scale Annotation Browser (ELSABer) is proposed. Compared with  the previous method, it has the following advantages:
	</p>
	<ol>
		<li>
		<strong>Semantic Browsing: </strong>We give the measurement of  semantic similarity among annotations. Each annotation is assigned with a semantic  concept consisting of the semantically related annotations, thus the synonym  problem can be controlled by matching the semantic concept of the selected  annotation. For example, assuming one selects the annotation "book", the resources  annotated by either "book" or "books" will be returned since "books" also appears  in the concept of "book". 
		</li>
		<li>
		<strong>Hierarchical Browsing</strong>: Users can locate their desired  resources more easily if social annotations are organized hierarchically,  especially for large scale annotation sets. When annotations are organized in  this way, the click trace of a user represents his intended target in a  top-down fashion without ambiguity. We observe that the social annotations present  concepts in different semantic levels and we build a hierarchical structure for  social annotations based on this observation. 
		</li>
		<li>
		<strong>Efficient Browsing: </strong>The time cost for browsing increases  with the growth of the size of social annotations. In ELSABer, a sampling method  based on the power low distribution of annotations is applied for efficient browsing.
		</li>
	</ol>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Given the personal information  and the time-related restrictions, ELSABer can be easily enhanced. By incorporating  users' profiles, ELSABer can display the social annotations and contents  according to users' preferences. By further incorporating the time restrictions,  ELSABer can display the popular annotations and contents within a specific time  interval. These two extensions are useful in helping the user to discover the  personal interested resources and the popular resources.
	</p>
<div class="image">
	<p class="image"><img src="figure1.png" width="444" height="236" alt="Figure 1.   Interface of  Social Browsing System" /></p>
	<p class="caption">Figure 1.   Interface of  Social Browsing System</p>
</div>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;A prototype system is implemented  based on ELSABer. Figure 1 gives a snapshot of the system. The page behind is  the initial interface of the system. It contains popular annotations  distributed in different clusters. The size of each annotation indicates its  popularity. The page in the front is the result after a user selects the  annotation "programming". On the right side is a set of pages related to the  current annotation. Each line on the left side is a sub-category of the current  annotation, which consists of several related annotations. Users can click the  tag on the left side to further investigate that category. In this paper, we  use the terms "annotation" and "tag" interchangeably. 
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;The rest of the paper is organized as  follows. Section 2 briefly reviews the studies of social annotation. Section 3  gives an overview of our algorithm. Section 4 describes each component in our  social browsing algorithm. Section 5 discusses how to extend the algorithm in  two ways. Section 6 presents the experimental results. Finally we make a conclusion  in Section 7.
	</p>
<h1>2.	RELATED WORK</h1>
<h2>2.1	Research on Social Annotation</h2>
	<p>
	Recently,  there are lots of studies on social annotations, including blog posts,  interesting demos and academic research papers.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;The early discussion of the social  annotation can be found in [<a href="#r1">1</a>, <a href="#r3">3</a>, <a href="#r4">4</a>, <a href="#r5">5</a>, <a href="#r11">11</a>]. They initiated the idea that sharing  tags can lead to the concept known as "folksonomy". The term first appeared in  an information architecture mailing list <a href="#r12">[12]</a>. Quintarelli <a href="#r5">[5]</a> suggested that  we should take social annotation as an information organizing tool. In <a href="#r1">[1]</a>,  Golder et al. gave the specific analysis of the social annotation data in Del.icio.us  in both the static and dynamic aspects. In <a href="#r3">[3]</a>, the authors gave a good review  of available social bookmark tools.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Research based on social  annotation has been done in various areas such as semantic web <a href="#r6">[6]</a>, social  network <a href="#r9">[9]</a>, and enterprise search <a href="#r8">[8]</a>. In <a href="#r9">[9]</a> Mika proposed a bipartite model of  ontology with a social dimension and found that the semantic relationships  among tags are based on their co-occurrence with users or resources. In <a href="#r6">[6]</a>, Wu <em>et al.</em> used a probabilistic  generative model to obtain the emergent semantics hidden behind the  co-occurrence of three types of data (tags, users and resources). They also  proposed a framework for semantic search based on their emergent semantic  model. In <a href="#r8">[8]</a>, Dmitriev suggested that folksonomies were not limited  to the blog sphere but also benefited enterprise search. An annotation tool was  implemented within an enterprise environment and improved the search  efficiency. In <a href="#r7">[7]</a>, the authors analyzed the effectiveness of tags for  classifying blog entries and argued that there is a topical hierarchy among  tags. However, the hierarchy, which is a  static rigid binary tree lack of semantic control, is not suitable for the social  browsing problem. 
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;All the  above research is different from ours. Their work is about discovering and  utilizing the features of social annotations instead of focusing on how to  browse annotations themselves. 
	</p>
<h2>2.2	Social  Browsing and Navigation</h2>
	<p>
	There  are a few studies on visualizing and browsing the social annotations. Dubinko  <a href="#r10">[10]</a> proposed and solved the problem of visualizing the evolution of tags  within Flickr online image sharing service. They gave an efficient algorithm  for processing the large data in real time. Their work focuses on discovering  the hot images and tags in a pre-defined time interval. It is not a proper  solution for users to browse all annotations. In <a href="#r21">[21]</a>, Begelman applied the clustering algorithm  on the social annotations to improve users' browsing experience. Their  algorithm can not handle the synonymy and ambiguity problems. Our work is  different from theirs. We proposed the browsing framework with three features,  including the solution for a semantic browsing.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Some demos for visualizing tags are  also available on Web. Grafolicious <a href="#r22">[22]</a> produces graphs illustrating when and  how many times a URL has been bookmarked in Del.icio.us. HubLog <a href="#r23">[23]</a> gives a  graph of related tags connected with the given tags. Although these demos gave  a vivid picture of social annotations in different aspects, their goals are not  to help users to browse annotations effectively.
	</p>

<h1>3.	ELSABER OVERVIEW</h1>
	<p>
	In this  section, we give an overview of the ELSABer algorithm as shown in Algorithm 1.  The algorithm is generally designed for any social annotation environment,  e.g., Del.icio.us, Flickr. In this paper, we use Del.icio.us annotations for  analysis and evaluation.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;From step 1-1 to 1-2,  the algorithm initializes the first view of annotations. <em>N<sub>T</sub></em>, <em>N<sub>U</sub></em>, <em>N<sub>C</sub></em>, and <em>N<sub>CT</sub></em> denote the number of  tags, URLs, clusters and tags in each cluster. In our experiment, these  parameters are set to 2000, 2000, 20, and 5, respectively, which means the top 100  tags distributed in 20 clusters on 2000 most frequent tags and URLs are  presented to the users as the default browsing interface. These popular tags, which  are associated with a large number of resources, are selected as the roots in  hierarchical browsing. When users select a tag as the entrance to annotation browsing,  the algorithm outputs its related resources and a set of annotations as  sub-tags. Users can iteratively select any annotation from the displayed sub-tags  for further exploration. The iterative process consists of four components as follows:
	</p>
	<ul>
		<li>
		Tag selection (from 2-1 to 2-3): to  provide a semantic browsing, the algorithm takes the selected tag as a semantic  concept which consists of several highly related tags. The users' path from the  root to the current annotation forms a set of concepts and specifies the users'  interests. The URLs and tags related with the concept set will be selected.
		</li>
		<li>
		URL and tag sampling (step 3):  this is an optional step. We introduce a sample mechanism to sample tags and  URLs which match the specified concept set. The application of sampling assures  that the algorithm is always running on a data set with controlled size.
		</li>
		<li>
		Sub-Tag Generation (step 4-1): we  develop a set of features and rules to find the sub-tags of the current tag. The  resources of the current tag can be further classified into concepts of these  sub-tags.
		</li>
		<li>
		Similarity based Clustering (step  4-2): a social clustering algorithm is introduced to find a proper number of  clusters from the generated sub-tags in the previous step. Then the sub-tags in  each cluster are presented to the user.
		</li>
	</ul>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Then the user can click one of  these presented sub-tags to further seek his desired resources.
	</p>
<div class="image">
	<p class="image"><img src="algorithm1.png" width="410" height="444" alt="Algorithm 1" /></p>
</div>

<h1>4.	BROWSING SOCIAL ANNOTATIONS</h1>
	<p>
	In this  section, we will give a detailed description of each component in ELSABer.  Before the discussion, we first give a formal representation of annotation data.
	</p>
<h2>4.1	Data setup and representation</h2>
	<p>
	Del.icio.us  provides a popular tool for organizing bookmarks. A description online <a href="#r2">[2]</a>  states it as:
	</p>
	<p>
  &nbsp;&nbsp;&nbsp;&nbsp;&quot;<em>A social bookmark manager. It allows you to easily add sites you like  to your personal collection of links, to categorize those sites with keywords,  and to share your collection not only between your own browsers and machines,  but also with others</em>&quot;.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;In Del.icio.us, an annotation  activity typically consists of four elements: an annotator, a URL, a tag, and a  tagging time. We define an annotation as a quadruple: 
	</p>

	<div style="text-align:center">
		(User, URL, Tag, Time).
	</div>

	<p>
  &nbsp;&nbsp;&nbsp;&nbsp; We  disregard the roles of User and Time, and view the annotation data as points in  a high dimensional space called the tagging space. The annotation data can be  represented as an <em>m</em>&times;<em>n </em>matrix <em>C</em>, where <em>m</em> and<em> n </em>is the total number of tags and URLs,  respectively. Let <em>C<sub>ij</sub></em> denote  the number of <em>users</em> who annotate the <em>j</em>th URL with the <em>i</em>th tag. Let <em>M </em>bethe<em> m</em>&times;<em>n </em>association matrix and<em> M<sub>ij</sub></em> denote the association degree  between the <em>i</em>th tag and the <em>j</em>th URL. A simple method is to let  <em>M<sub>ij</sub> </em>equal to <em>C<sub>ij</sub></em>.In our experiment, we borrow the idea of <em>TFIDF</em> from the  IR field and calculate the association weight as follows:   </p>
    <div class="image">
	<p class="image"><img src="equation1.png" width="469" height="58" alt="Equation 1" /></p>
</div>

	<p>
	where |<em>URL</em>(<em>t<sub>i</sub></em>)|  represents the number of URLs annotated by <em>t<sub>i</sub></em>. 
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Given the matrix <em>M</em>, the tag can be represented as a row  vector <em>T<sub>i</sub></em> (<em>U</em><sub>1</sub>,<em>U</em><sub>2</sub>,.. <em>U<sub>n</sub></em>)  of <em>M</em>. Similarly, the URL can be  represented as a column vector<em> U<sub>i</sub></em> (<em>t</em><sub>1</sub>,<em>t</em><sub>2</sub>,...,<em>t<sub>m</sub></em>)  of <em>M</em>. 
	</p>
<h2>4.2	Semantic Browsing</h2>
<h3>4.2.1	Annotation Similarity Estimation</h3>
	<p>
	People  annotate web pages mainly for organizing web pages with different contents, so  annotations are usually abstracts of the contents of these web pages. Abstracts  of the same web page are usually similar. Below, we give the first observation  of social annotations: 
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;<strong>Observation 1</strong>: <em>similar tags will annotate similar URLs and similar URLs will be  annotated by similar tags in the social annotation environment. </em>
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Based on observation 1, the semantics of a tag can be reflected by  resources which it tagged. The semantic relation is derived from their  co-occurrences. As shown in Figure 2,  <em>T</em><sub>1</sub> and <em>T</em><sub>2</sub>  are similar tags since they share similar URLs <em>U</em><sub>3</sub> and <em>U</em><sub>4</sub>. <em>T</em><sub>1</sub> and <em>T</em><sub>3</sub> are less relative. Figure 2  also illustrates that the similar tags also annotate the different URLs.	</p>
    <div class="image">
	<p class="image"><img src="figure2.png" width="390" height="146" alt="Figure 2.   Illustration  of  Similar Annotations" /></p>
	<p class="caption">Figure 2.     Similar Annotations</p>
</div>
	<p>
	For measuring the semantic  relationship between tags, we propose a symmetric measurement as follows: 
	</p>
<div class="image">
	<p class="image"><img src="equation2.png" width="468" height="37" alt="Equation 2" /></p>
</div>
	<p>
	where<em> T<sub>i</sub></em> and <em>T<sub>j</sub></em> are tag vectors corresponding to tags <em>t<sub>i</sub> </em>and <em>t<sub>j</sub>,</em> respectively. The tag vector <em>T<sub>i</sub></em> is determined by the URLs which are annotated by the  tag. So it may vary according the change of the related URLs.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Some linguistic features are also  used for calculating<em> Sim(t<sub>i</sub>, t<sub>j</sub>). </em>When tags are freely assigned to the relative URL, tags are used in various  forms, such as the plural form and gerundial form. For example, "Programs",  "Programming" and "Program" all exist in the annotation data. Additional weight  is added to <em>Sim(t<sub>i</sub>,t<sub>j</sub>)</em> if two terms share the same etyma after porter stemming. Besides, if the two terms  share the etyma after eliminating the external punctuations, a lighter additional  weight is added to the <em>Sim(t<sub>i</sub>,t<sub>j</sub>)</em> score. The two weights are set to 0.1 and 0.08, respectively.
	</p>
    <h3>4.2.2	Generating the Semantic Concept</h3>
	<p>
	In the  social browsing setting, the user tries to find his desired resources by  selecting the tag with the closest meaning to his intended information. Therefore,  when the user selects "film", those pages tagged by "movies" are also of his  interest. In order to provide the user with the complete resources of his  interest, we find tags and URLs related to the semantic concept of a tag  instead of finding tags and URLs by matching the tag literally. Following, we  give the method of generating semantic concepts.
	</p>
	<p>
   &nbsp;&nbsp;&nbsp;&nbsp;Given the selected tag <em>ti</em>, we choose a set of tags most  related to <em>ti</em>, as the synonymic  tagset<em> ST<sub>i</sub></em> ={<em> t<sub>j</sub></em> | <em>t<sub>j</sub></em> is similar to<em> t<sub>i</sub></em> }<em>.</em> In this paper, the candidate tags <em>ST<sub>i</sub></em> is generated using the following rules: 
   </p>
	<ol>
		<li><em>t<sub>j</sub> </em>should be among the <em>N</em> most similar tags related to<em> t<sub>i</sub></em></li>
		<li>The similarity should be larger than a threshold <em>&theta;</em>.</li>
	</ol>
	<p>
	where <em>N</em> and <em>&theta; </em>in the rules are set to 4 and 0.7, respectively. Then, a semantic  concept <em>C<sub>i</sub></em> for<em> ti </em>is represented by the following  set: 
	</p>
<div class="image">
	<p class="image"><img src="equation3.png" width="471" height="36" alt="Equation 3" /></p>
</div>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Note that, once a user has  clicked <em>L</em> times and forms a click  trace of <em>t</em><sub>1</sub>,<em> t</em><sub>2</sub>,...,<em>t<sub>L</sub></em>, we have a sequence of <em>L</em> concepts: <em>C</em><sub>1</sub>,<em> C</em><sub>2</sub>,...,<em>C<sub>L</sub></em>. Let <em>S<sub>C</sub>=</em> {<em>C</em><sub>1</sub>,<em> C</em><sub>2</sub>,..., <em>C<sub>L</sub></em>}.  The related URLs in step <em>L</em> can be  defined as follows:
	</p>
<div class="image">
	<p class="image"><img src="equation4.png" width="468" height="37" alt="Equation 4" /></p>
</div>

	<p>
	where <em>u</em> is a candidate URL and <em>T</em>(<em>u</em>)  means the set of annotations given to URL <em>u.</em>
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Given a set of related URLs, the related tags can be defined as all the  tags given to <em>ReURL</em>(<em>S<sub>C</sub></em>).
   </p>
   
<div class="image">
	<p class="image"><img src="equation5.png" width="468" height="32" alt="Equation 5" /></p>
</div>
<div class="image">
	<p class="image"><img src="figure3.png" width="400" height="224" alt="Figure 3.   Matching with Concept Set" /></p>
	<p class="caption">Figure 3.   Matching with Concept Set</p>
</div>
 
	<p>Figure 3  illustrates the idea above. The concept set contains two concepts: one consists  of "WebDev" and "Web-dev" while the other contains tag "JSP" only. "WebDev" and  "Web-Dev" are highly related tags which satisfy the above rules. <em>U</em><sub>1</sub>, <em>U</em><sub>3</sub> are the URLs matching the current concept set since <em>U</em><sub>1</sub> is annotated by "WebDev"  and "JSP"while <em>U</em><sub>2</sub> is annotated by "Web-Dev" and "JSP". Related tags  like "CSS", "AJAX",  "2.0" are obtained from the matched  URLs. The sub tagging space is formed by these related tags and URLs.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Note that, by tracking the user's  selections, the problem of tag ambiguity can be solved, because previous  selected concepts play as domain limitations, which can disambiguate meanings  of tags in different domain. For example, <em>U</em><sub>4</sub>  will not be selected, since it does not match the limitation "Web-Dev". 
	</p>
<h2>4.3	Hierarchical Browsing </h2>
<h3>4.3.1	Hierarchical Structure</h3>
	<p>
	Quintarelli  <a href="#r5">[5]</a> and Mathes <a href="#r4">[4]</a> both argue that the tagging space is a flat space and a  hierarchical representation of topics does not reflect the associative nature  of social annotations. But in <a href="#r1">[1]</a>, Golder states that the different expertise  and purpose of tagging participants may result in tags at various levels of  abstraction to describe a resource. For example, a photo can be tagged at the  "basic level" by "cat", at a super ordinate level by "animal" or at various  subordinate levels below the basic level by "Persian cat" or "Felis silvestris cats  longhair Persian". Our observation is that:
	</p>
	<p>
    &nbsp;&nbsp;&nbsp;&nbsp;<strong>Observation 2</strong>: <em>there is not a neat tree  structure like taxonomy or human built ontology with rigid hierarchies and  pre-defined categories with clear boundaries for social tags, but the tags used  in social annotation do locate in different semantic levels in the social  annotation space.</em>
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;By our observation there are many  combined words like "programming/java" and "Design/CSS", which may reflect the  needs for hierarchical annotation in Del.icio.us. Several single word tags which  are used to annotate the URL by the same user also reflect that the hierarchy  exists in the social annotation. For example, there are URLs tagged by "java, jdbc"  and "music, jazz". So it's feasible to explore the hierarchical structure of social  annotations for hierarchical browsing. The structure has the following  features:
	</p>
	<ul>
		<li>There are multiple ways to the  target resource. To find pages about jsp we can make the clicks of  "programming", "java" and "jsp" in order or we can follow the path from  "design", "web" to "jsp".
		</li>
		<li>The categories are not rigid. One  URL can be associated with several categories, since different people have  different views about the same thing. </li>
		<li>
		The hierarchical structure is  dynamic with the increasing of social annotation data. If resources associated  with a leaf tag increase, the leaf tag will extend several children nodes.
		</li>
	</ul>
<div class="image">
	<p class="image"><img src="figure4.png" width="390" height="188" alt="Figure 4.   Hierarchical structure" /></p>
	<p class="caption">Figure 4.   Hierarchical structure</p>
</div>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Figure 4 illustrates the features  described above. There are two hierarchical structures, rooted "programming"  and "Design", respectively. The annotations like "WebDev" and "JSP" are shared  in both trees. Users can reach the "jsp" tag from either "programming" or  "Design". 
	</p>
<h3>4.3.2	Sub-Tag Generation</h3>
	<p>For each  selected tag, a set of related tags are obtained from previous steps.  Obviously, not all the tags are proper to be the child node of the current tag  to expand the tree structure. Related tags are mainly of the following types:
	</p>
	<ol>
		<li>
		Father Tags: These tags are in  a higher semantic level, which have more general meanings than the current tag/node.</li>
		<li>
		Sub Tags: These tags are in a  lower semantic level. A tag of this type describes the content of the related  URL more specifically, or is a sub-category of the current node. These tags are  likely to be good candidates for expanding our social browsing tree structure. 
		</li>
		<li>
		Other Tags: Tags of this type  describe different resources related with the current tag, but they are neither  more general nor more specific than the current tag, so they are useless for hierarchical  browsing. 
		</li>
	</ol>
	&nbsp;&nbsp;&nbsp;&nbsp;Several features are explored to  identify whether a tag is a sub-tag of the current tag/node. In the following, <em>t<sub>i</sub></em> denotes the candidate  sub-tag and <em>t<sub>j</sub></em> denotes the  current tag.
	<ol>
		<li>
		<strong>Coverage of Tags</strong>: Tags in different semantic  levels have different content coverage. A tag in a high semantic level covers  more resources than its sub-tags. For example, there are more URLs associated  with "Web" than "Google" and more with "Google" than "Googletips". The coverage  relation between two tags is defined as:
		 
<div class="image">
	<p class="image"><img src="equation6.png" width="472" height="69" alt="Equation 6" /></p>
</div>
	<p>
	where <em>U(t<sub>i</sub>)</em> denotes  the number of URLs tagged with <em>t<sub>i</sub></em>.  Figure 5 illustrates the capacity of this feature. Here, the current tag is "Google"  and the Coverage values of 40 of its related tags are calculated and compared.  The types of these tags are manually labeled. The figure shows that tags at a  super ordinate level such as "Web" and "computer" have much higher Coverage  values than other tags.
	</p>
<div class="image">
	<p class="image"><img src="figure5.png" width="391" height="213" alt="Figure 5.   Identify sub tags using coverage" /></p>
	<p class="caption">Figure 5.   Identify sub-tags using coverage</p>
</div>
		</li>
		<li>
		<strong>Intersection Rate</strong>: This feature, denoted by IR, is  defined as follows: 		
<div class="image">
	<p class="image"><img src="equation7.png" width="469" height="56" alt="Equation 7" /></p>
</div>
	<p>
	It is  the ratio of the number of <em>t<sub>i</sub></em> and <em>t<sub>j</sub></em>'s common URLs to  the number of <em>t<sub>i</sub></em>'s URLs. If  the intersection URL set is the main part of all the URLs of <em>t<sub>i</sub></em>, but a small part of<em> t<sub>j</sub></em>, we can infer that <em>t<sub>i</sub></em> is a sub-tag of <em>t<sub>j</sub></em>. For example, most URLs  tagged by "gmaps" are also tagged by "Google", but a small number of URLs  tagged by "Google" are tagged by "gmaps", so we infer that "gmaps" is a sub-tag  of "Google".
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Note that we should pay attention  to the size of <em>U</em>(<em>t<sub>i</sub></em>), if <em>U</em>(<em>t<sub>i</sub></em>) is as small as 1 or 2,  the <em>IR<sub>ij</sub> </em>above will give  the tag <em>t<sub>i</sub> </em>a high score  and take it as a sub-tag with high confidence. But the tag is likely to be  meaningless tag or noisy tag. We use equation 8 for solving this problem; we  set a threshold on the size of <em>U(t<sub>i</sub>)</em>,.  We also introduce a parameter &lambda; for smoothing the results. In the experiment, both the threshold and &lambda; are set to 5. 
	</p>
    <div class="image">
	<p class="image"><img src="equation8.png" width="465" height="64" alt="Equation 8" /></p>
</div>

	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Figure 6 shows the capacity  of this feature. The current tag and the data set are same as those in Figure  5. We can see from Figure 6 that tags at subordinate levels like "gmaps" and "earth"  have much higher IR values than other tags.
	</p>
<div class="image">
	<p class="image"><img src="figure6.png" width="392" height="221" alt="Figure 6.   Identify sub tags using intersection rate " /></p>
	<p class="caption">Figure 6.   Identify sub-tags using intersection rate </p>
</div>
	</li>
		<li><strong>Other Features</strong>:<strong> </strong>We also use some features as the supplementary for identifying the  sub-tag relationship. The third feature is called Inverse-Coverage Rate, which is  defined by Equation 9. And Feature 4, namely <em>IR</em>' is defined by Equation 10. Feature 5, <em>IRR,</em> is set to a set of discrete values of 1, 2 and 3 according to  their rank by <em>IR</em>. If a tag ranks top  30 among all the tags, its <em>IRR</em> value  is set to 1, if it ranks between 30th and 60th, its <em>IRR </em>value is 2, otherwise it will have  an <em>IRR</em> value of 3.

<div class="image">
	<p class="image"><img src="equation9.png" width="471" height="56" alt="Equation 9" /></p>
</div>

<div class="image">
	<p class="image"><img src="equation10.png" width="474" height="51" alt="Equation 10" /></p>
</div>
		</li>
	</ol>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Given the features above, each  related tag is represented as a feature vector. A decision tree can be derived  from the manually labeled data set to predict the sub-tag relations using C4.5.  Figure 7 shows a snippet of the rules we got.
	</p>
<div class="image">
	<p class="image"><img src="figure7.png" width="394" height="221" alt="Figure 7.   Rules for identifying sub tag" /></p>
	<p class="caption">Figure 7.   Rules for identifying sub-tag</p>
</div>

 
<h3>4.3.3	Sub-Annotation Clustering</h3>
	<p>For categorizing  the sub-annotations generated in the last step, we present a clustering  algorithm, which successfully solve the following problems: </p>
	<ol>
		<li>
		<strong>Whether the current tag needs  further expanding: </strong>If the number of related URLs of the current tag is less than a  predefined threshold, there is no need to further expand it. In our experiment,  the threshold is set to 20.<strong> </strong>
		</li>
		<li>
		<strong>How many clusters to expand to: </strong>The number of clusters after  expansion is quite an influential factor to the browsing experience of the  users besides its influence on the quality of the clusters: too few clusters  will cause low cohesion within each cluster and too many clusters will  frustrate the user, and we can not fix the structure of the browsing tree  beforehand, i.e., we can not set the tree to be a binary tree or a K-tree.
		</li>
	</ol>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;In the light of the above  discussion, traditional clustering algorithms like K-means <a href="#r14">[14]</a>, which purely  rely on a predefined cluster number is not proper for our problem. Clustering  algorithms based on graph partition <a href="#r13">[13]</a> will give an optimal partition of the  graph, but complexity of these algorithms prohibits them to be applied in a  real-time browsing problem. Here we propose a dynamic clustering algorithm for the  social browsing problem, as shown in Algorithm 2. It may not be the optimal  solution according to the graph theory, but it is a proper solution for social  browsing. The label of each cluster is also generated during the clustering  process. 
	</p>
    <div class="image">
	<p class="image"><img src="algorithm2.png" width="416" height="259" alt="Algorithm 2" /></p>
</div>

 
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;The algorithm first introduces an  informative rank over the candidate sub-tags based on the following tag  properties: 
	</p>
	<p>
	<strong>Tag Frequency/ Inverted URL Frequency</strong>: This property indicates the  annotation's importance and is defined in the same way as Equation (1). 
	</p>
	<p>
     <strong>Intra-Cluster Similarity</strong>: This property, namely <em>ICS</em> was used to measure whether a tag is  a good representation of a single topic. 
  </p>
<div class="image">
	<p class="image"><img src="equation11.png" width="471" height="55" alt="Equation 11" /></p>
</div>
	<p>
	Where <em>ot</em> denotes the centroid of all the URLs associated with the tag and each URL in  this tagging space can be represented as a vector <em>ui</em>=(<em>t</em>1,<em>t</em>2,...<em>tn</em>) (see section 4.1):
	</p>
<div class="image">
	<p class="image"><img src="equation12.png" width="469" height="53" alt="Equation 12" /></p>
</div>
	<p>where <em>U</em>(<em>t</em>)  represents the number of URLs associated with tag <em>t.</em>
	</p>
	<p>
	<strong>Tag Entropy</strong>:<strong> </strong>This  property, denoted by <em>TE</em>, is used to  calculate the distinctness of a tag <a href="#r15">[15]</a>. A tag which seldom shares URLs with  other tags is more likely to be a cluster. <strong></strong>
	</p>
<div class="image">
	<p class="image"><img src="equation13.png" width="470" height="56" alt="Equation 13" /></p>
</div>
	<p>&nbsp;&nbsp;&nbsp;&nbsp;Finally, the informative score  for tag <em>t</em> is defined as the linear  combination of all the above properties:</p>
<div class="image">
	<p class="image"><img src="equation14.png" width="468" height="37" alt="Equation 14" /></p>
</div>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;We decide the weights <em>w</em><sub>1</sub>, <em>w</em><sub>2</sub> and <em>w</em><sub>3</sub>  by using a linear regression model over the manually labeled data set. In our  experiment, these weights are 0.58, 0.27, and 0.13, respectively.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;After obtaining each tag's informative  score, we select the most informative tag as the label of the first cluster,  and find its similar tags using Equation 2 and its related URLs by calculating  the <em>cosine</em> similarity between these  URLs and the centroid of all the similar tags. Then we remove its similar tags  and related URLs from our dataset. This process terminates when no remaining  tag has enough number of related URLs.
	</p>
<h2>4.4	Efficient Browsing</h2>
<h3>4.4.1	Observations</h3>
	<p>Nowadays  the number of tags and URLs are increasing exponentially with the development  of Web 2.0 and  extensive application of tagging services. Therefore, the efficiency of our algorithm  will be influenced. In this section, we will discuss how to accelerate our  algorithm. First we give the 3rd observation based on our analysis  on Del.icio.us.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;<strong>Observation 3</strong>: <em>Popular tags and URLs play an  important role in our social annotation data. People use popular tags to  annotate URLs and also the popular URLs are annotated by the majority of tags.</em>
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Figure  8 and Figure 9 demonstrate Observation 3 illustratively. X axis represents tags  in the order of their counts and Y axis represents the counts of the tags. Figure  8 illustrates the distribution of the counts of tags which are associated with  a certain URL. We discover that people always use most popular tags to annotate  the URL and unpopular tags are barely applied to annotate. Figure 9 demonstrates  the distribution of the counts of tags associated with the whole Del.icio.us  data. We find out that the popular tags are frequently and extensively used in  the whole Del.icio.us data although there are thousands of tags used. 
	</p>
<h3>4.4.2	Acceleration using Sampling</h3>
	<p>
	The  responding time of our browsing algorithm is the key to the users' experience. For  the sake of efficiency, we borrow the idea of the inverted index from the IR  area to index both the tag vector and the URL vector. However, direct  application of this indexing scheme would still be inefficient because the  tagging space has billons of annotations. To overcome this difficulty, we  introduce a sampling method based on Observation 3 to limit the time complexity  of our algorithm to a proper scale in spite of the huge size of social  annotation data. 
	</p>
 
<div class="image">
	<p class="image"><img src="figure8.png" width="386" height="225" alt="Figure 8 . Tag distribution over URL" /></p>
	<p class="caption">Figure 8 . Tag distribution over URL</p>
</div>
<div class="image">
	<p class="image"><img src="figure9.png" width="358" height="230" alt="Figure 9 . Tag distribution over Tag Counts" /></p>
	<p class="caption">Figure 9 . Tag distribution over Tag Counts</p>
</div>
<div class="image">
	<p class="image"><img src="figure10.png" width="392" height="220" alt="Figure 10. Illustration of Tag-URL coverage" /></p>
	<p class="caption">Figure 10. Illustration of Tag-URL coverage</p>
</div>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;According to Observation 3, we discover that the content of a URL can be reflected by the most popular tags and also the tag semantics can be decided by the most popular URLs. So we can get good results efficiently by running our algorithm in a small sub tagging space consisting of tags and URLs that are most frequently used and annotated, i.e., sampling <em>K</em> most frequently annotated URLs and <em>K</em> most frequently used tags from the dataset to form a sub tagging space for the algorithm. In our experiment, we set <em>K</em> to 2000, so the size of <em>M</em> is 2000 &times; 2000.
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Note that we do not cut off the "long tail" of tagging space, although we use the sampling method. In our algorithm, the more important a tag is, the earlier it will emerge. Based on the discussion above, these important tags cover the majority of URLs, thus should be located at higher semantic level and presented to the user earlier. After the user click one of these tags, related URLs associated with this tag will be discovered, which will bring related tags including both popular and unpopular ones. Therefore we do not lose the connection with the "long tail". After a sequence of click by the user, the intention of the user will be more specific, this causes a decreasing number of related URLs or related tags. When the number is less than 2000, all the tags and URLs will be calculated, which means that the "long tail" is covered and the sampling method is not applied. Figure 11 shows the URL coverage of popular tags in Del.icio.us. Axis X is the <em>ith</em> popular tag, and Axis Y is the URL coverage percentage. It shows 84% of URLs in our data set associate with the top 2000 tags. 

</p>

    <h1>5.	ENHANCED MODELS</h1>
	<p>
	Different  people have different browsing preferences, since users have different  interests. The personalized browsing provides the user with annotations more  closely match his interests by utilizing user preferences. People are also  interested in recent hot topics. The time-related browsing can discover annotations  according to their popularity within a specific time interval. In this section,  we will show that our browsing framework can be easily extended to fit the  requirement of personalized and time-related browsing. 
	</p>
<h2>5.1	Personalized Social Browsing</h2>
	<p>
	Personalized  browsing has been well studied in browsing interface <a href="#r16">[16]</a>, personalized website  browsing <a href="#r17">[17]</a>, personalized webpage recommendation <a href="#r18">[18]</a>, etc. Here, we are to  provide the personalized social annotation browsing. 
	</p>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;In previous personalized systems,  additional effort is usually required to build a user profile which is  generally time consuming, and the generated profiles are sometimes out of date.  In our social annotation environment, the profile of a user can be directly  obtained from Del.icio.us and dynamically modified according to the changes of the  user's interests over time. Assuming that User <em>U<sub>a</sub> </em>is a registered user of Del.icio.us, his profile is  represented as a set of triples: 
	</p>
<div class="image">
	<p class="image"><img src="equation15.png" width="471" height="37" alt="Equation 15" /></p>
</div>

	<p>&nbsp;&nbsp;&nbsp;&nbsp;Given the profile P(<em>U<sub>a</sub></em>), the social annotations  can be classified into three categories as shown in Figure 11:</p>
	<ol>
		<li>User Annotated: This category  contains tags and resources that appear in P(<em>U<sub>a</sub></em>) (The black ones in Figure 11)</li>
		<li>User interested: This category contains  tags and resources that are related to P(<em>U<sub>a</sub></em>).  They are the annotations that the user may be interested in (The gray ones in  Figure 11).</li>
		<li>Not interested: This category  contains tags and resources that have no/few relations with P(<em>U<sub>a</sub></em>). (The blank ones in  Figure 11). </li>
	</ol>
	<p>The user  interested annotations and resources can be found as follows:</p>
<div class="image">
	<p class="image"><img src="equation16.png" width="470" height="76" alt="Equation 16" /></p>
</div>

	<p>
	where <em>UI</em>(<em>R<sub>i</sub></em>|<em>P</em>(<em>U</em>))  denotes the degree of interest between user U and resource <em>R<sub>i</sub></em>, while <em>UI</em>(<em>T<sub>i</sub></em>|(<em>P</em>(<em>U</em>)) denotes the degree  of interest between user U and annotation<em> T<sub>i</sub></em>. <em>R<sub>i</sub></em> denotes  the vector representation of a resource, and <em>T<sub>i</sub></em> denotes the vector representation of <em>A<sub>i</sub></em>.
	</p>
<div class="image">
	<p class="image"><img src="figure11.png" width="390" height="166" alt="Figure 11 User-interested illusion" /></p>
	<p class="caption">Figure 11 User-interested illusion</p>
</div>

	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;Given this quantitative  evaluation of user interests of each annotation and the resource, we extend the  basic social browsing model to the personalized model as follows:
	</p>
	<ol>
		<li>Distinguish the user interested resources from the rest. The user  interested annotations found by Equation 16 may help the user a lot in finding  the unexpected but potentially interesting resources.</li>
		<li>Adjust the sampling and ranking algorithms according to the user's  preference. We can incorporate the user's preference into the ranking algorithm  in section 4.3 as an additional property. Then the informative score is  calculated as </li>
	</ol>
<div class="image">
	<p class="image"><img src="equation17.png" width="473" height="39" alt="Equation 17" /></p>
</div>
<h2>5.2	Time Related Browsing</h2>
	<p>
	As  described in <a href="#r19">[19]</a>, the current Web is a sensor of the real world in some sense.  In most cases, users are often interested in browsing the popular web pages in  recent time. Thus providing time-related browsing would be helpful to most  users. Recall that the annotation data in Del.icio.us can be represented as a  set of quadruples: 
	</p>
	<div style="text-align:center">
   (User, URL, Tag, Time)
	</div>

	<p>
	Where "Time" is the time when "User" tagged  "URL" using tag "Tag". Due to the fact that different users may annotate the  same URL at different times, the times related to a specific URL form a time  sequence TS [<em>t</em><sub>1</sub>, <em>t</em><sub>2</sub>,... <em>t<sub>n</sub></em>]. Given the user required time interval <em>TI</em>= [<em>t<sub>s</sub></em>, <em>t<sub>e</sub></em>]. We define the match  of the URL's time sequence <em>TS</em> and the  user required time interval <em>TI</em> as  follows:
	</p>
<div class="image">
	<p class="image"><img src="equation18.png" width="472" height="83" alt="Equation 18" /></p>
</div>

	<p>
	Where <em>t<sub>e</sub></em>-<em>t<sub>s</sub></em> denote the number of URLs  annotated in this time interval. Then we extend the basic model to the  time-related social browsing model by applying the social browsing algorithm  only on the matched tags and their associated URLs. Here<em>&theta;</em>is set  to 50%.
	</p>
<h1>6.	EXPERIMENTAL RESULTS</h1>
	<p>
	In this  section, we give the evaluation of the proposed algorithm. All the discussions  below are based on a data set collected from Del.icio.us during May, 2006, which consists of 1,736,268 web pages and 269,566 different  annotations.
	</p>
<h2>6.1	Similarity measurement</h2>
	<p>
	For  evaluating the effectiveness of our similarity measurement, we give several  results of constructing a concept for a given tag. As shown in Table 1, the  concept of a given tag consists of several highly related tags that are generally  synonymous tags, abbreviations or plurality of the given tag. The semantic of  the current tag is influenced by the user's previous selections, e.g., "movie"  in the "programming" area may mean "screenshot" or "screen capture" instead of  "film" or "moving picture" in daily life; the concept of "Brainstorming" in the  programming area are more likely to be "mindmap" and "freemind", which are two  popular software used for brainstorming. Results show that our similarity  measurement can correctly reflect relations between tags in the social  annotation environment.
	</p>

<div class="table">
<p class="caption">Table 1 Results of Synonym Tags</p>
<table  summary="Table 1 Results of Synonym Tags">
	<col width="100%" />
	<tbody>
		<tr>

			<td><strong>CVS :</strong> Versioncontrol, SVN, subversion, control</td>
		</tr>
		<tr>

			<td><strong>Movie:</strong> Movies, Film ,Films</td>
		</tr>
		<tr>

			<td><strong>Computer/Gallery:</strong>  album photogallery fotos</td>
		</tr>
		<tr>

			<td><strong>Programming/Meta:</strong> Metaprgramming</td>
		</tr>
		<tr>

			<td><strong>Programming/Movie:</strong> screenshot screencapture </td>
		</tr>
		<tr>

			<td><strong>Programming/Brainstorming:</strong> mindmap  freemind</td>
		</tr>
	</tbody>
</table>
</div>

<h2>6.2	The results of clustering</h2>
	<p>
	Table 2  shows the sub-tags discovered for 20 selected concepts. These concepts are  selected randomly from 100 popular topics of Del.icio.us by a group of students  in our lab. The concepts are distributed in different areas. Since a lot of  annotations in Del.icio.us are related with IT, more selected topics are  related to IT. In each box, the first line gives the concept label. For each of  the 4 concepts in the first line, we listed only ten subordinate concepts and  for each of the rest of concepts, we listed only 5 subordinate concepts due to  space limitation. Table 2 implies that our algorithm is able to organize a hierarchical  structure of tags as people think in their everyday life. For example, when the  user clicks <em>science</em>, our algorithm is  able to generate a series of sub categories such as <em>math</em>, <em>physics</em>, <em>psychology</em>, etc., which are mostly  meaningful and very distinguishable, and also illustrate the topic most  efficiently according to the knowledge of people.
	</p>
<h2>6.3	Execution  time </h2>
	<p>
	We  evaluate the efficiency of our system with a modest machine (Intel Pentium IV  3.0 GHz, 1GB memory, 2 processors). The system is implemented in the java  language. Lucene API is also used to build URL and Tag index. We cached the  matrix of top 2000 URLs and 2000 tags for reducing the time cost of database  accesses. The average time of processing 20 concepts is 1.3 sec. 
	</p>

<div class="image">
	<p class="image"><img src="figure12.png" width="394" height="156" alt="Figure 12 User-interested tags" /></p>
	<p class="caption">Figure 12 User-interested tags</p>
</div>

<h2>6.4	Case Study</h2>
<h3>6.4.1	Personalized Browsing, </h3>
	<p>
	Figure 12 shows the results of the algorithm  with the consideration of the user's profile. The tags in red are owned by the  user and the tags in orange are recommended tags for the user. In the  experiment, the user's profile consists of 25 tags and 45 URLs and the top 5 user  interested tags are "Linux", "media", "video", "JavaScript" and "Java", so the  user is likely to be a Web developer or a fan of "media". We see that the recommended  tags in Figure 12, such as "ajax",  "videos" and "download", are highly related to the user's interests, which  implies that the personalized browsing can indeed help users to find their  interested resources effectively.
	</p>
    <h3>6.4.2	Time related browsing.</h3>
	<p>
	Figure 13  demonstrates the distribution of the tag counts associated with three URLs over  time. It can be seen that given a certain URL, the popularity varies as time  goes by. Our algorithm can discover the newly emerging resources such as URL 1  and URL 3 which increased to the peak at the beginning. It can also detect the  resources which become the hot topics periodically like URL 2. At the same time,  we found out that URL 3 was just created in Dec.21 2005 and became the hot topic  in the following day, which means people can get the most popular topics by  browsing the social annotation with time information.
	</p>

<div class="image">
	<p class="image"><img src="figure13.png" width="413" height="206" alt="Figure 13. Illustration of Tag-URL coverage" /></p>
	<p class="caption">Figure 13. Illustration of Tag-URL coverage</p>
</div>

<div class="table">
<table  summary="data">
	<col width="100%" />

	<tbody>
		<tr>
			<td>Date: 2005-12-12 <a href="http://www.nist.gov/dads/terms.html">http://www.nist.gov/dads/terms.html</a></td>
		</tr>
		<tr>
			<td>Date 2006-2-28 <a href="http://developer.apple.com/tools/rubyonrails.html">http://developer.apple.com/tools/rubyonrails.html</a></td>
		</tr>
		<tr>
			<td>Date2005-12-22 <a href="http://www.exploding-boy.com/2005/12/21/more-free-css-navigation-menu-designs/">http://www.exploding-boy.com/2005/12/21/more-free-css-navigation-menu-designs/</a></td>
		</tr>
	</tbody>
</table>
</div>

<div class="table">
<p class="caption">Table 2 Clustering Results</p>
<table  summary="My Test Table">
	<col width="25%" />
	<col width="25%" />
	<col width="25%" />
	<col width="25%" />
	<tbody>
		<tr>
			<td><strong>Programming</strong></td>
			<td><strong>Music</strong></td>
			<td><strong>Science</strong></td>
			<td><strong>Microsoft</strong></td>
		</tr>
		<tr>
			<td>
AJAX  JavaScripts<br/>
Ruby rails<br/>
PHP<br/>
Python<br/>
Java<br/>
Framework<br/>
C Cpp<br/>
Dhtml<br/>
Lisp<br/>
Perl
		  </td>
			<td>
Bittorrent Torrents<br/>
Ipod<br/>
Radio MP3<br/>
Itunes<br/>
Guitar Chords<br/>
Sound Soundfx<br/>
Player Songbird<br/>
Indie<br/>
Drm<br/>
Lyrics song
		  </td>
			<td>
Health Sleep<br/>
Math Mathematics <br/>
Physics Quantum<br/>
Psychology Brain <br/>
Space Astronomy <br/>
Algorithms<br/>
MIT<br/>
Biology<br/>
Lectures sicp<br/>
Evolution Creationism
		  </td>
			<td>
XP  Tweaks<br/>
Excel<br/>
Word Writely<br/>
asp.net dotnet<br/>
XBOX<br/>
MSN WindowsLive<br/>
Outlook <br/>
Boot Bootdisk<br/> 
Spyware <br/>
Vista Longhorn
		  </td>
		</tr>
		<tr>
			<td><strong>Arts</strong></td>
			<td><strong>Basketball</strong></td>
			<td><strong>Book</strong></td>
			<td><strong>Computer </strong></td>
		</tr>
		<tr>
			<td>
Graffiti Streetart<br/>
Museum mus<br/>
Knots topology<br/>
Poetry Anvatagrade<br/>
Artistis Painter
		  </td>
			<td>
ESPN<br/>
Fox<br/>
Autism<br/>
Dallas<br/>
NBA
		  </td>
			<td>
Lisp<br/>
Literature ebook<br/>
Audiobooks <br/>
Amzaon<br/>
Scheme  Sicp
		  </td>
			<td>
Developers<br/>
IE favorites<br/>
Algorithms comupeterscience<br/>
Spyware Adware
		  </td>
		</tr>
		<tr>
			<td><strong>C</strong></td>
			<td><strong>Design</strong></td>
			<td><strong>Google </strong></td>
			<td><strong>Game</strong></td>
		</tr>
		<tr>
			<td>
Algorithm DataStructure<br/>
Cocoa  Objective<br/>
Mono<br/>
Compiler Compilers<br/>
Visualstudio VS2005
		  </td>
			<td>
CSS Webdesign<br/>
Flash<br/>
Art Graphics<br/>
Fonts Typography<br/>
Photoshop
		  </td>
			<td>
Maps Googlemaps<br/>
Gmail<br/>
GreasemonkeyUserscripts<br/>
Searchengines;<br/>
GPS geocaching
		  </td>
			<td>
Sudoku Puzzle<br/>
Warcraft worldofwarcraft<br/>
Videogames<br/>
Chess<br/>
Emulation emulators
		  </td>
		</tr>
		<tr>
			<td><strong>Java</strong></td>
			<td><strong>Mac</strong></td>
			<td><strong>Reference </strong></td>
			<td><strong>Web</strong></td>
		</tr>
		<tr>
			<td>
Eclipse IDE<br/>
Framework<br/>
Xmlhttprequest<br/>
J2EE Spring<br/>
UML
		  </td>
			<td>
Ipod<br/>
Itunes<br/>
Macosx  OSX<br/>
Cocoa Objective<br/>
Quicksilver
		  </td>
			<td>
CSS HTML<br/>
Howto Tips<br/>
Ebook ebooks<br/>
Maps<br/>
Language Dictionary
		  </td>
			<td>
Css Webdesign<br/>
Ajax Javascript<br/>
Google<br/>
PHP<br/>
Del.icio.us Delicious
		  </td>
		</tr>
	</tbody>
</table>
</div>


<h1>7.	CONCLUSION AND FUTURE WORK</h1>
	<p>Social  annotation browsing is a recently emerging task and becomes more and more  important as the annotations of web resources keep on increasing at a  surprising speed. In this paper, we analyze the characteristics of social  annotations in three aspects, namely similarity, hierarchy and distribution.  Based on observations in these aspects, we propose the ELSABer algorithm for  effective social annotation browsing. A prototype system is also implemented  based on ELSABer and produces encouraging results. Our main contributions can  be concluded as follows:
	</p>
	<ul>
		<li>The proposal to study the problem  of large scale annotation browsing. Previous methods can not work well when the  annotation size is large.</li>
		<li>The proposal of the effective  algorithm - ELSABer based on the analysis of social annotation's characteristics.</li>
		<li>The proposal of enhanced models  for personalized and time related browsing.</li>
		<li>The implementation of a prototype  system based on ELSABer to evaluate the proposed algorithm.</li>
	</ul>
	<p>
	&nbsp;&nbsp;&nbsp;&nbsp;In the future, we will conduct  more user studies for evaluating the effectiveness of our algorithm since  browsing problem need more consideration in the view of user. Further more, we  should emphasize on how to find more qualified URL resources and utilize  existing hierarchical structures such as ODP and WordNet for helping construct  more meaningful hierarchical structures for social annotations. 
	</p>
<h1>8.	ACKNOWLEDGEMENT</h1>
	<p>
	The authors would like to thank IBM China  Research Lab for its continuous support to and cooperation  with Shanghai JiaoTong University.  The authors also appreciate the valuable suggestions of Linyun Fu, Shengliang Xu and Lei  Zhang. In the end, the authors would like to thank the three anonymous  reviewers for their elaborate and helpful comments. 
	</p>
	
	
</div>
<div class="references">
	<h1>9.	REFERENCES</h1>
	<p class="ref" id="r1">[1] S. A. Golder, and B. A.  Huberman. Usage Patterns of  Collaborative Tagging Systems. <em>Journal of Information Science</em>, 32(2), pp.198-208, 2006</p>
	<p class="ref" id="r2">[2] J.  Schachter. Del.icio.us about page. <a href="http://del.icio.us/doc/about">http://del.icio.us/doc/about</a>, 2004</p>
	<p class="ref" id="r3">[3] T.  Hammond, T. Hannay, B. Lund, and J. Scott. Social book marking tools (i) - a general review. <em>D-Lib Magazine</em>, 11(4), 2005. </p>
	<p class="ref" id="r4">[4] A. Mathes. Folksonomies - Cooperative Classification and  Communication through Shared Metadata.  <a href="http://www.adammathes.com/academic/computer-mediated-communication/folksonomies.html">http://www.adammathes.com/academic/computer-mediated-communication/folksonomies.html</a>, December 2004</p>
	<p class="ref" id="r5">[5] E. Quintarelli. Folksonomies: power to the  people. <em>Paper presented at the ISKO  Italy-UniMIB meeting.</em> <a href="http://www.iskoi.org/doc/folksonomies.htm">http://www.iskoi.org/doc/folksonomies.htm</a>,  June 2005</p>
	<p class="ref" id="r6">[6] X.  Wu,  L. Zhang, and Y. Yu. Exploring Social Annotations for the Semantic Web. In: <em>Proc. of WWW 2006</em>,  pp.  417-426, May 23.26, 2006</p>
	<p class="ref" id="r7">[7] C. H. Brooks, N. Montanez. Improved annotation of the blogosphere via autotagging  and hierarchical clustering. In: <em>Proc.  of WWW  2006</em>, pp. 625--632. May 23.26 2006</p>
	<p class="ref" id="r8">[8] P. A.  Dmitriev, N. Eiron, M. Fontoura, and E. Shekita. Using Annotations in Enterprise Search. In: <em>Proc. of WWW 2006 </em>, pp. 811-817, May 23.26, 2006</p>
	<p class="ref" id="r9">[9] P. Mika Ontologies are us: a  unified model of social networks and semantics. In: <em>Proc. of ISWC 2005</em>. pp. 522-536, Nov. 2005.</p>
	<p class="ref" id="r10">[10] M. Dubinko, R. Kumar, J.  Magnani, J. Novak, P. Raghavan, A. Tomkins. Visualizing Tags over Time. In: <em>Proc. of WWW 2006</em>,  pp.  193-202, May 23.26, 2006</p>
	<p class="ref" id="r11">[11] C. Shirky. Folksonomy. Blog entry at  <a href="http://www.corante.com/many/archives/2004/08/25/folksonomy.php">http://www.corante.com/many/archives/2004/08/25/folksonomy.php</a>,  August 2004</p>
	<p class="ref" id="r12">[12] G. Smith. Atomiq: Folksonomy: social classification.  <a href="http://atomiq.org/archives/2004/08/folksonomy_social_classification.html">http://atomiq.org/archives/2004/08/folksonomy_social_classification.html</a>, Aug 3, 2004</p>
	<p class="ref" id="r13">[13] A. Pothen, H. D. Simon, and K.-P. Liou.  Partitioning sparse matrices with  eigenvectors of graphs.In: <em>SIAM J.Matrix Anal. App</em>l.,  11(3):430{452, 1990.</p>
	<p class="ref" id="r14">[14] J. B. MacQueen. Some Methods for classification and Analysis of  Multivariate Observations, <em>In Proc.of 5th Berkeley Symposium on  Mathematical Statistics and Probability</em>, 1:281-297 1967</p>
	<p class="ref" id="r15">[15] H.  -J. Zeng, Q.-C. He, Z. Chen, W.-Y. Ma and J. Ma. Learning to cluster Web  search results. In <em>Proc. of SIGIR 2004</em>, 2004</p>
	<p class="ref" id="r16">[16] <a href="http://www.freepatentsonline.com/5961593.html">http://www.freepatentsonline.com/5961593.html</a></p>
	<p class="ref" id="r17">[17] B. Christos, K. Vaggelis, M. Ioannis. A Web-page fragmentation technique for personalized browsing.In:<em> Proc. of  the symposium on Applied computing</em> pp. 1146 - 1147.</p>
	<p class="ref" id="r18">[18] <a href="http://www.stumbleupon.com/">http://www.stumbleupon.com/</a></p>
	<p class="ref" id="r19">[19] Q. Zhao, T.-Y.  Liu, S.S. Bhowmick, and W.Y. Ma. Event Detection from Evolution of  Click-through Data. In <em>Proc. of SIGKDD  2006.</em>pp.484-493</p>
	<p class="ref" id="r20">[20] Del.icio.us tag  cloud view: <a href="http://del.icio.us/tag/">http://del.icio.us/tag/</a></p>
	<p class="ref" id="r21">[21] G. Begelman, P. Keller and F.Smadja, Automated Tag  Clustering Improved search and exploration in the tag space In<strong>:</strong><em> Proc. of Collaborative Web Tagging Workshop at WWW 2006</em>.</p>
	<p class="ref" id="r22">[22] <a href="http://www.neuroticWeb.com/recursos/del.icio.us-graphs/">http://www.neuroticWeb.com/recursos/del.icio.us-graphs/</a></p>
	<p class="ref" id="r23">[23] <a href="http://hublog.hubmed.org/tags/visualisation">http://hublog.hubmed.org/tags/visualisation</a></p>
</div>


<hr/>

<div id="footnote">
	<h1>FOOTNOTES</h1>

	<div id="ftndiv1">
       <p><a href="#_ftnref_1" name="_ftn_" title="" id="_ftn_">*</a> Part  of Rui Li and Shenghua Bao's work of this paper was conducted in IBM China  Research Lab.</p>
	</div>   
	<div id="ftndiv2">
     <p><a href="#_ftnref1" name="_ftn1" title="" id="_ftn1">1</a><a href="http://del.icio.us">http://del.icio.us</a> </p>
	</div>
   <div id="ftndiv3">
     <p><a href="#_ftnref2" name="_ftn2" title="" id="_ftn2">2 </a> <a href="http://www.flickr.com">http://www.flickr.com</a></p>
   </div>
</div>


</body>
</html>