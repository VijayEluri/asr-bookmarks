
<html>

<head>

<meta name="GENERATOR" content="Microsoft Internet Assistant for PowerPoint 97">
<title>Design Patterns in Dynamic Languages</title>
</head>

<BODY>
<link rel="icon" href="favicon.ico" type="image/x-icon" />
<link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
<CENTER>
<h1>Design Patterns in Dynamic Languages</h1>
<h4>3/17/98</h4>
<br><h2> <A HREF="ppframe.htm">Click here to start</A>
 </h2><br>  
</center>
<center>
 <table width=90%>
  <tr>
   <td valign=top align=left width=50%>
      <h3><u>Table of Contents</u></h3>
            <P ALIGN=LEFT>Design Patterns in Dynamic Languages</P>
        <P ALIGN=LEFT>Outline</P>
        <P ALIGN=LEFT>(1) What Are Design Patterns?</P>
        <P ALIGN=LEFT>What Are Design Patterns?</P>
        <P ALIGN=LEFT>What’s in a Pattern?</P>
        <P ALIGN=LEFT>Pattern: Abstract Factory</P>
        <P ALIGN=LEFT>Level of Implementation of a Pattern</P>
        <P ALIGN=LEFT>Sources on Design Patterns</P>
        <P ALIGN=LEFT>(2) Design Patterns in Dynamic Languages</P>
        <P ALIGN=LEFT>Design Patterns in Dylan or Lisp</P>
        <P ALIGN=LEFT>First-Class Dynamic Types</P>
        <P ALIGN=LEFT>Dynamic Pattern: Abstract Factory</P>
        <P ALIGN=LEFT>Pattern: Abstract Factory</P>
        <P ALIGN=LEFT>First-Class Dynamic Functions</P>
        <P ALIGN=LEFT>Pattern: Strategy</P>
        <P ALIGN=LEFT>Dynamic Pattern: Strategy</P>
        <P ALIGN=LEFT>Macros</P>
        <P ALIGN=LEFT>Pattern: Interpreter</P>
        <P ALIGN=LEFT>Pattern: Interpreter with Macros</P>
        <P ALIGN=LEFT>Method Combination</P>
        <P ALIGN=LEFT>Pattern: Observer</P>
        <P ALIGN=LEFT>Observer with Method Combination</P>
        <P ALIGN=LEFT>The Type/Operation Matrix</P>
        <P ALIGN=LEFT>Multimethods</P>
        <P ALIGN=LEFT>Pattern: Builder</P>
        <P ALIGN=LEFT>Pattern: Builder</P>
        <P ALIGN=LEFT>Pattern: Builder with Multimethods</P>
        <P ALIGN=LEFT>Modules</P>
        <P ALIGN=LEFT>Pattern: Facade</P>
        <P ALIGN=LEFT>Other Invisible Patterns</P>
        <P ALIGN=LEFT>(3) New Dynamic Language Patterns</P>
        <P ALIGN=LEFT>First-Class Design Patterns</P>
        <P ALIGN=LEFT>First Class Pattern: Subroutine</P>
        <P ALIGN=LEFT>First Class Pattern Implementation</P>
        <P ALIGN=LEFT>Pattern: Protocol Method</P>
        <P ALIGN=LEFT>Pattern: Protocol Method</P>
        <P ALIGN=LEFT>A Study in Patterns: Iterator</P>
        <P ALIGN=LEFT>C++ Pattern: Internal Iterator</P>
        <P ALIGN=LEFT>Smalltalk Pattern: Internal Iterator</P>
        <P ALIGN=LEFT>Dylan Pattern: Iteration Protocol</P>
        <P ALIGN=LEFT>Dylan Pattern: Iteration Protocol</P>
        <P ALIGN=LEFT>Dylan: Iteration Protocol Algebra</P>
        <P ALIGN=LEFT>Pattern: Lazy Mapper Iteration</P>
        <P ALIGN=LEFT>Sather Pattern: Coroutine Iterator</P>
        <P ALIGN=LEFT>Pattern: Coroutine</P>
        <P ALIGN=LEFT>Pattern: Control Abstraction</P>
        <P ALIGN=LEFT>Pattern: New Control Abstraction</P>
        <P ALIGN=LEFT>Pattern: Memoization</P>
        <P ALIGN=LEFT>Pattern: Singleton as Memoization</P>
        <P ALIGN=LEFT>Pattern: Compiler</P>
        <P ALIGN=LEFT>Pattern: Run-Time Loading</P>
        <P ALIGN=LEFT>Pattern: Partial Evaluation</P>
        <P ALIGN=LEFT>Pattern: Partial Evaluation</P>
        <P ALIGN=LEFT>Pattern: Rule-Based Translator</P>
        <P ALIGN=LEFT>Pattern: Relation</P>
        <P ALIGN=LEFT>(4) Design Strategies</P>
        <P ALIGN=LEFT>What to Build</P>
        <P ALIGN=LEFT>How to Build</P>
        <P ALIGN=LEFT>How to Build: Abstraction</P>
        <P ALIGN=LEFT>How to Write: Literate Programming</P>
        <P ALIGN=LEFT>Class-Oriented or Class-Obsessed?</P>
        <P ALIGN=LEFT>Strategy: Open Implementation</P>
        <P ALIGN=LEFT>Design Strategy: English Translation</P>
        <P ALIGN=LEFT>Design Strategy: English Translation</P>
        <P ALIGN=LEFT>Design Strategy: English Translation</P>
        <P ALIGN=LEFT>Metaphor: Agent Programming</P>
        <P ALIGN=LEFT>Agent Programming Technology </P>
        <P ALIGN=LEFT>Design for a Rational Agent</P>
        <P ALIGN=LEFT>Rational Reasoning</P>
        <P ALIGN=LEFT>The Three Laws of Robotics</P>
        <P ALIGN=LEFT>Object-Oriented Programming</P>
        <P ALIGN=LEFT>Agent Programming</P>
        <P ALIGN=LEFT>Combining Agent Components</P>
        <P ALIGN=LEFT>Real-Time Resource Allocation</P>
        <P ALIGN=LEFT>Compilation of Anytime Algorithms</P>
        <P ALIGN=LEFT>Technology for Multi-Agent Systems</P>

   </td>
   <td valign=top width=50%>
	 <strong>Author: </strong>Peter Norvig 
     <P> <strong>Email: </strong> <A HREF="MAILTO:peter@norvig.com">peter@norvig.com</A> </P> 
	 <P> <strong>Home Page: </strong> <A HREF="http://www.norvig.com">http://www.norvig.com</A> </P> 
	
	
	
	 <P><A HREF="design-patterns.ppt"> Download presentation source </A> 
   </td>
  </tr>
 </table>
</center>
<p>
<hr>
<a href="http://greenspun.com/com/norvig/design-patterns/index.htm">Add or view reader comments
</a>

</body>

</html>
