

<!DOCTYPE html>
<html>
<head>
 <link rel="icon" type="image/vnd.microsoft.icon" href="http://www.gstatic.com/codesite/ph/images/phosting.ico">
 
 <script type="text/javascript">
 
 
 
 var codesite_token = null;
 
 
 var logged_in_user_email = null;
 
 
 var relative_base_url = "";
 
 </script>
 
 
 <title>
 scala-migrations -
 
 Project Hosting on Google Code</title>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" >
 <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" >
 
 <meta name="ROBOTS" content="NOARCHIVE">
 
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/2314035420504622226/css/ph_core.css">
 
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/2314035420504622226/css/ph_detail.css" >
 
 
 
 
<!--[if IE]>
 <link type="text/css" rel="stylesheet" href="http://www.gstatic.com/codesite/ph/2314035420504622226/css/d_ie.css" >
<![endif]-->
 <style type="text/css">
 .menuIcon.off { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -42px }
 .menuIcon.on { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 -28px }
 .menuIcon.down { background: no-repeat url(http://www.gstatic.com/codesite/ph/images/dropdown_sprite.gif) 0 0; }
 
 
 
 .activity-level-High {
 background:no-repeat url(http://www.gstatic.com/codesite/ph/images/activity-level.png) 0 0;
 width: 16px;
 height: 16px;
 }
 .activity-level-Low {
 background:no-repeat url(http://www.gstatic.com/codesite/ph/images/activity-level.png) 0 -16px;
 width: 16px;
 height: 16px;
 }
 .activity-level-Medium {
 background: no-repeat url(http://www.gstatic.com/codesite/ph/images/activity-level.png) -16px 0;
 width: 16px;
 height: 16px;
 }
 .activity-level-None {
 background:no-repeat url(http://www.gstatic.com/codesite/ph/images/activity-level.png) -16px -16px;
 width: 16px;
 height: 16px;
 }


 </style>
</head>
<body class="t1">
 <script type="text/javascript">
 var _gaq = _gaq || [];
 _gaq.push(
 ['siteTracker._setAccount', 'UA-18071-1'],
 ['siteTracker._trackPageview']);
 
 _gaq.push(
 ['projectTracker._setAccount', 'UA-10015842-1'],
 ['projectTracker._trackPageview']);
 
 (function() {
 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
 ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
 (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
 })();
 </script>
<div class="headbg">
 <div id="gaia">
 
 <span>
 
 <a href="#" id="projects-dropdown" onclick="return false;"><u>My favorites</u> <small>&#9660;</small></a>
 | <a href="https://www.google.com/accounts/ServiceLogin?service=code&amp;ltmpl=phosting&amp;continue=http%3A%2F%2Fcode.google.com%2Fp%2Fscala-migrations%2F&amp;followup=http%3A%2F%2Fcode.google.com%2Fp%2Fscala-migrations%2F" onclick="_CS_click('/gb/ph/signin');"><u>Sign in</u></a>
 
 </span>

 </div>
 <div class="gbh" style="left: 0pt;"></div>
 <div class="gbh" style="right: 0pt;"></div>
 
 
 <div style="height: 1px"></div>
<!--[if lte IE 7]>
<div style="text-align:center;">
Your version of Internet Explorer is not supported. Try a browser that
contributes to open source, such as <a href="http://www.firefox.com">Firefox</a>,
<a href="http://www.google.com/chrome">Google Chrome</a>, or
<a href="http://code.google.com/chrome/chromeframe/">Google Chrome Frame</a>.
</div>
<![endif]-->




 <table style="padding:0px; margin: 0px 0px 10px 0px; width:100%" cellpadding="0" cellspacing="0">
 <tr style="height: 58px;">
 
 <td id="plogo">
 <a href="/p/scala-migrations/">
 
 <img src="http://www.gstatic.com/codesite/ph/images/defaultlogo.png" alt="Logo">
 
 </a>
 </td>
 
 <td style="padding-left: 0.5em">
 
 <div id="pname">
 <a href="/p/scala-migrations/">scala-migrations</a>
 </div>
 <div id="psum">
 <a id="project_summary_link" href="/p/scala-migrations/" >Database migrations written in Scala</a>
 
 </div>
 
 </td>
 <td style="white-space:nowrap;text-align:right; vertical-align:bottom;">
 
 <form action="/hosting/search">
 <input size="30" name="q" value="" type="text">
 <input type="submit" name="projectsearch" value="Search projects" >
 </form>
 
 </tr>
 </table>

</div>

 
<div id="mt" class="gtb"> 
 <a href="/p/scala-migrations/" class="tab active">Project&nbsp;Home</a> 
 
 
 
 
 <a href="/p/scala-migrations/downloads/list" class="tab ">Downloads</a>
 
 
 
 
 
 <a href="/p/scala-migrations/w/list" class="tab ">Wiki</a>
 
 
 
 
 
 <a href="/p/scala-migrations/issues/list"
 class="tab ">Issues</a>
 
 
 
 
 
 <a href="/p/scala-migrations/source/checkout"
 class="tab ">Source</a>
 
 
 
 <div class=gtbc></div>
</div>
<table cellspacing="0" cellpadding="0" width="100%" align="center" border="0" class="st">
 <tr>
 
 
 
 
 
 
 
 <td class="subt">
 <div class="st1">
 <div class="isf">
 <span class="inst1">
 <a href="/p/scala-migrations/">Summary</a>
 </span>
 
 
 &nbsp;
 <span class="inst2">
 <a href="/p/scala-migrations/updates/list">Updates</a>
 </span>
 
 
 &nbsp;
 <span class="inst3">
 <a href="/p/scala-migrations/people/list">People</a>
 </span>
 
 
 </div>
</div>

 </td>
 
 
 <td align="right" valign="top" class="bevel-right"></td>
 </tr>
</table>
<script type="text/javascript">
 var cancelBubble = false;
 function _go(url) { document.location = url; }
</script>


<div id="maincol"
 
>

 
<!-- IE -->







<table width="100%">
 <tr class="pscontent">
 <td class="pscolumnl">
 
 <div class="phead">Project Information</div>
 
 
 <ul class="pslist">
 
 
 <li class="psmeta">
 <a href="updates/list">Activity</a> &nbsp;
 <img src="http://www.gstatic.com/codesite/ph/images/cleardot.gif" class="activity-level-Medium">
 <span>Medium</span>
 </li>
 <li class="psgap"/>
 
 
 
 
 <li class="psmeta"><b>Code license</b></li>
 </li>
 <li class="psmeta">
 <a href="http://www.opensource.org/licenses/bsd-license.php" rel="nofollow">New BSD License</a>
 
 </li>
 <li class="psgap"/>
 
 
 
 
 
 
 <li class="psmeta">
 <span id="project_labels">
 <b>Labels</b><br/>
 
 <a class="label" 
 href="/hosting/search?q=label:scala">scala</a>, 
 
 <a class="label" 
 href="/hosting/search?q=label:database">database</a>, 
 
 <a class="label" 
 href="/hosting/search?q=label:db">db</a>, 
 
 <a class="label" 
 href="/hosting/search?q=label:migration">migration</a>, 
 
 <a class="label" 
 href="/hosting/search?q=label:SQL">SQL</a>
 
 </span>
 </li>
 <li class="psgap"/>
 
 
 
 <li class="psmeta"><b>Feeds</b></li>
 <li class="psmeta"><a href="/p/scala-migrations/feeds">Project feeds</a>
 <li>
 <li class="psgap"/>
 
 </ul>
 <div class="psmeta psline"></div>
 <div class="psicon">
 <img height="15" width="15" src="http://www.gstatic.com/codesite/ph/images/people-y16.png"/>
 <span><b>Owners</b></span>
 </div>
 <ul class="pslist">
  
 
 
 <li class="psmeta">
 
 <li class="psmeta">
 <a style="white-space: nowrap" href="/u/@VRVTRFJYAxhFWwN%2F/">bl...@orcaware.com</a>
 </li>
 
 <li class="psmeta">
 <a style="white-space: nowrap" href="/u/jrobertray/">jrobertray</a>
 </li>
 
 <li class="psgap"/>
 
 <li class="psmeta"><b>Committers</b></li>
 <li class="psmeta">
 <a href="people/list">0 committers</a>
 </li>
 <li class="psgap"/>
 
 <li class="psmeta"><b>Contributors</b></li>
 <li class="psmeta">
 <a href="people/list">0 contributors</a>
 </li>
 <li class="psgap"/>
 
 
 <li class="psmeta">
 <a href="people/list">People details &raquo;</a>
 </li>
 
 
 
 </ul>
 
 </td>
 <td id="wikicontent" class="psdescription">
 <p>Scala Migrations is a library to manage upgrades and rollbacks to database schemas.  Migrations allow a source control system to manage together the database schema and the code using the schema.  It is designed to allow multiple developers working on a project with a database backend to design schema modifications independently, apply the migrations to their local database for debugging and when complete, check them into a source control system to manage as one manages normal source code.  Other developers then check out the new migrations and apply them to their local database.  Finally, the migrations are used to migrate the production databases to the latest schema version. </p><p>The Scala Migrations library is written in Scala and makes use of the clean Scala language to write easy to understand migrations, which are also written in Scala.  Scala Migrations provides a database abstraction layer that allows migrations to target any supported database vendor. </p><h3><a name="History"></a>History<a href="#History" class="section_anchor">&para;</a></h3><p>Scala Migrations was initially developed at <a href="http://www.imageworks.com/" rel="nofollow">Sony Pictures Imageworks</a> to manage database versioning for a new internal application.  The designed is based off <a href="http://api.rubyonrails.org/classes/ActiveRecord/Migration.html" rel="nofollow">Ruby on Rails Migrations</a> and in fact shares the exact same <tt>schema_migrations</tt> table to manage the list of installed migrations. </p><h3><a name="Sample_Migration"></a>Sample Migration<a href="#Sample_Migration" class="section_anchor">&para;</a></h3><p>Here is a migration used by VnP3, an internal Imageworks project. </p><pre class="prettyprint">package com.imageworks.vnp.dao.migrations

import com.imageworks.migration.{Limit,
                                 Migration,
                                 Name,
                                 NotNull,
                                 OnDelete,
                                 Restrict,
                                 Unique}

/**
 * Create the &#x27;facility_set_membership&#x27; table, which is a many-to-many
 * join table between the &#x27;facility&#x27; and &#x27;facility_set&#x27; tables.  It
 * represents the sets that a facility is a member of and the
 * facilities that are in a set.  Rows do not have a their own primary
 * key.
 */
class Migrate_20081216235329_FacilitySetMembership
  extends Migration
{
  def up(): Unit =
  {
    createTable(&quot;facility_set_membership&quot;) { t =&gt;
      t.varbinary(&quot;pk_facility&quot;, NotNull, Limit(16))
      t.varbinary(&quot;pk_facility_set&quot;, NotNull, Limit(16))
      t.bigint(&quot;created_micros&quot;, NotNull)
      t.bigint(&quot;modified_micros&quot;, NotNull)
    }

    // There should only be one pair of (pk_facility_set, pk_facility)
    // tuples in the entire table, i.e., for one facility set, the
    // facility should only appear once.
    addIndex(&quot;facility_set_membership&quot;,
             Array(&quot;pk_facility_set&quot;, &quot;pk_facility&quot;),
             Unique,
             Name(&quot;idx_fac_set_mmbrshp_uniq_pks&quot;))

    addForeignKey(on(&quot;facility_set_membership&quot; -&gt; &quot;pk_facility&quot;),
                  references(&quot;facility&quot; -&gt; &quot;pk_facility&quot;),
                  OnDelete(Restrict),
                  Name(&quot;fk_fac_set_mmbrshp_pk_fac&quot;))

    addForeignKey(on(&quot;facility_set_membership&quot; -&gt; &quot;pk_facility_set&quot;),
                  references(&quot;facility_set&quot; -&gt; &quot;pk_facility_set&quot;),
                  OnDelete(Restrict),
                  Name(&quot;fk_fac_set_mmbrshp_pk_fac_set&quot;))
  }

  def down(): Unit =
  {
    dropTable(&quot;facility_set_membership&quot;)
  }
}</pre><p>To migrate a database to the latest version requires code similar to: </p><pre class="prettyprint">import com.imageworks.migration.{DatabaseAdapter,
                                 InstallAllMigrations,
                                 Vendor}

object Test
{
  def main(args: Array[String]): Unit =
  {
    val driver_class_name = &quot;org.postgresql.Driver&quot;
    val vendor = Vendor.forDriver(driver_class_name)
    val migration_adapter = DatabaseAdapter.forVendor(vendor, None)
    val data_source: javax.sql.DataSource = ...
    val migrator = new Migrator(data_source, migration_adapter)

    // Now apply all migrations that are in the
    // com.imageworks.vnp.dao.migrations package.
    migrator.migrate(InstallAllMigrations, &quot;com.imageworks.vnp.dao.migrations&quot;, false)
  }</pre><p>To rollback a database to its pristine state: </p><pre class="prettyprint">  migrator.migrate(RemoveAllMigrations, &quot;com.imageworks.vnp.dao.migrations&quot;, false)</pre><p>To rollback two migrations: </p><pre class="prettyprint">  migrator.migrate(RollbackMigration(2), &quot;com.imageworks.vnp.dao.migrations&quot;, false)</pre><p>And to migrate to a specific migration, rollbacking back migrations that are newer than the requested migration version and installing migrations older than the requested version. </p><pre class="prettyprint">  migrator.migrate(MigrateToVersion(20090731), &quot;com.imageworks.vnp.dao.migrations&quot;, false)</pre><h3><a name="Supported_Databases"></a>Supported Databases<a href="#Supported_Databases" class="section_anchor">&para;</a></h3><p>Scala Migrations currently supports </p><ul><li>Derby </li><li>Oracle </li><li>PostgreSQL </li></ul><p>Patches for other databases are welcome. </p><h3><a name="Dependencies_and_Setup"></a>Dependencies and Setup<a href="#Dependencies_and_Setup" class="section_anchor">&para;</a></h3><p>Scala Migrations depends upon: </p><ul><li>The Simple Logging Facade for Java (SLF4J).  </li></ul><blockquote><a href="http://www.slf4j.org/" rel="nofollow">http://www.slf4j.org/</a> 
</blockquote><blockquote>You will need to choose logging framework that SLF4J will log to.  See the SLF4J website for more information on how to set up and use SLF4J. 
</blockquote><ul><li>The log4jdbc logging JDBC wrapper that logs all JDBC operations. </li></ul><blockquote><a href="http://code.google.com/p/log4jdbc/" rel="nofollow">http://code.google.com/p/log4jdbc/</a> 
</blockquote><blockquote>Since running a migration on a production database is dangerous operation that can leave irreversible damage if anything goes wrong, the JDBC connection given to all migrations is a log4jdbc <tt>net.sf.log4jdbc.ConnectionSpy</tt> that wraps the real connection.  This logs all method calls so that any migration errors can be fully debugged.  log4jdbc uses SLF4J; see the log4jdbc website on how to set up the loggers and logging level for log4jdbc messages. 
</blockquote><blockquote>Scala Migrations manually wraps the real database connection, so no special work needs to be done by the migration writer to use this feature. 
</blockquote><h3><a name="Migration_Naming"></a>Migration Naming<a href="#Migration_Naming" class="section_anchor">&para;</a></h3><p>In Scala Migrations, the migrations needs to be compiled and their <tt>*</tt>.class files need to be made available at runtime; the source files will not be available at runtime. </p><p>Scala Migrations then needs to know an ordering on the migrations, so the timestamp needs to be in the class name.  Scala does not support naming a symbol such as <tt>20080717013526_YourMigrationName</tt> because the name begins with a digit (unless one were to quote the name which would look odd), so the Scala Migrations looks for classes named </p><pre class="prettyprint">    Migrate_(\\d+)_([_a-zA-Z0-9]*)</pre><p>The time stamp can be generated using the following command on Unix systems: </p><pre class="prettyprint">    $ date -u +%Y%m%d%H%M%S</pre><p>This is different than Ruby on Rails migrations which are in filenames of the form </p><pre class="prettyprint">    20080717013526_your_migration_name.rb</pre><p>and have a corresponding class name such as <tt>YourMigrationName</tt>.  Ruby on Rails can find all the migration <tt>*</tt>.rb files for a project and load them at runtime and from the filename load the correct class name.  The ordering to apply the migrations is contained in the filename, not the class name. </p><h3><a name="Unsupported_Database_Features"></a>Unsupported Database Features<a href="#Unsupported_Database_Features" class="section_anchor">&para;</a></h3><p>It is not a goal of Scala Migrations to check and report on the compatibility of a Scala Migrations specific feature with a database.  For example, Oracle does not support the <tt>&quot;ON UPDATE SET NULL&quot;</tt> clause on a foreign key constraint.  If a <tt>OnUpdate(SetNull)</tt> is specified for a foreign key constraint, then Scala Migrations will generate that clause and ask the database to execute it. </p><p>If Scala Migrations did attempt to check on the compatibility of each feature, then it would need to grow much larger to know which features worked on which database, and even worse, potentially know which features appear in which database versions.  This is not something that the authors of Scala Migrations want to maintain. </p><h3><a name="Data_Types"></a>Data Types<a href="#Data_Types" class="section_anchor">&para;</a></h3><p>The following data types are supported listed with their mappings.  If a database name is not specified, then the default mapping is used.  More information on the mappings is below. </p><ul><li>Bigint </li><ul><li>Default: <tt>BIGINT</tt> </li><li>Oracle: <tt>NUMBER(19, 0)</tt> </li></ul></ul><ul><li>Blob </li><ul><li>Default: <tt>BLOB</tt> </li><li>PostgreSQL: <tt>BYTEA</tt> </li></ul></ul><ul><li>Boolean </li><ul><li>Default: <tt>BOOLEAN</tt> </li><li>Derby: Unsupported </li><li>Oracle: Unsupported </li></ul></ul><ul><li>Char </li><ul><li>Default: <tt>CHAR</tt> </li></ul></ul><ul><li>Decimal </li><ul><li>Default: <tt>DECIMAL</tt> </li><li>Oracle: <tt>NUMBER</tt> </li></ul></ul><ul><li>Integer </li><ul><li>Default: <tt>INTEGER</tt> </li><li>Oracle: <tt>NUMBER(10, 0)</tt> </li></ul></ul><ul><li>Smallint </li><ul><li>Default: <tt>SMALLINT</tt> </li><li>Oracle: <tt>NUMBER(5, 0)</tt> </li></ul></ul><ul><li>Timestamp </li><ul><li>Default: <tt>TIMESTAMP</tt> </li></ul></ul><ul><li>Varbinary </li><ul><li>Default: None </li><li>Derby: <tt>VARCHAR FOR BIT DATA</tt> </li><li>Oracle: <tt>RAW</tt> </li><li>PostgreSQL: <tt>BYTEA</tt> </li></ul></ul><ul><li>Varchar </li><ul><li>Default: <tt>VARCHAR</tt> </li><li>Oracle: <tt>VARCHAR2</tt> </li></ul></ul><h3><a name="Boolean_Mapping"></a>Boolean Mapping<a href="#Boolean_Mapping" class="section_anchor">&para;</a></h3><p>Scala Migrations does not define a mapping for the Boolean datatype in databases that do not have a native Boolean datatype.  The reason is that there are many ways of representing a Boolean value database and Scala Migrations is not an ORM layer, so this decision is left to the application developer. </p><p>Different representations that have been used in schemas include: </p><ul><li>A <tt>CHAR(1)</tt> column containing a &#x27;Y&#x27; or &#x27;N&#x27; value.  The column may have a <tt>CHECK</tt> constraint to ensure that the values are only &#x27;Y&#x27; or &#x27;N&#x27;. </li></ul><ul><li>An <tt>INTEGER</tt> column with 0 representing to false and all other values representing true. </li></ul><h3><a name="Oracle_and_SMALLINT,_INTEGER_and_BIGINT"></a>Oracle and SMALLINT, INTEGER and BIGINT<a href="#Oracle_and_SMALLINT,_INTEGER_and_BIGINT" class="section_anchor">&para;</a></h3><p>Oracle does not have <tt>SMALLINT</tt>, <tt>INTEGER</tt> or <tt>BIGINT</tt> SQL types comparable to other databases, such such as Derby, MySQL and PostgreSQL.  These other databases used a fixed sized signed integer with a limited range of values that can be stored in the column. </p><p><table><tr><td style="border: 1px solid #aaa; padding: 5px;">Type</td><td style="border: 1px solid #aaa; padding: 5px;">Storage</td><td style="border: 1px solid #aaa; padding: 5px;">Min value</td><td style="border: 1px solid #aaa; padding: 5px;">Max value</td></tr> <tr><td style="border: 1px solid #aaa; padding: 5px;">SMALLINT</td><td style="border: 1px solid #aaa; padding: 5px;">2-byte signed integer</td><td style="border: 1px solid #aaa; padding: 5px;">-32768</td><td style="border: 1px solid #aaa; padding: 5px;">32767</td></tr> <tr><td style="border: 1px solid #aaa; padding: 5px;">INTEGER</td><td style="border: 1px solid #aaa; padding: 5px;">4-byte signed integer</td><td style="border: 1px solid #aaa; padding: 5px;">-2147483648</td><td style="border: 1px solid #aaa; padding: 5px;">2147483647</td></tr> <tr><td style="border: 1px solid #aaa; padding: 5px;">BIGINT</td><td style="border: 1px solid #aaa; padding: 5px;">8-byte signed integer</td><td style="border: 1px solid #aaa; padding: 5px;">-9223372036854775808</td><td style="border: 1px solid #aaa; padding: 5px;">9223372036854775807</td></tr> </table></p><p>Oracle does support an <tt>INTEGER</tt> column type but it uses a <tt>NUMBER(38)</tt> to <a href="http://download-west.oracle.com/docs/cd/B19306_01/server.102/b14200/sql_elements001.htm#sthref218" rel="nofollow">store it</a>. </p><p>On Oracle, a Scala Migration using any of the <tt>SMALLINT</tt>, <tt>INTEGER</tt> and <tt>BIGINT</tt> types is mapped to a <tt>NUMBER</tt> with a precision smaller than 38. </p><p><table><tr><td style="border: 1px solid #aaa; padding: 5px;">Migration Type</td><td style="border: 1px solid #aaa; padding: 5px;">Oracle Type</td></tr> <tr><td style="border: 1px solid #aaa; padding: 5px;">SMALLINT</td><td style="border: 1px solid #aaa; padding: 5px;">NUMBER(5, 0)</td></tr> <tr><td style="border: 1px solid #aaa; padding: 5px;">INTEGER</td><td style="border: 1px solid #aaa; padding: 5px;">NUMBER(10, 0)</td></tr> <tr><td style="border: 1px solid #aaa; padding: 5px;">BIGINT</td><td style="border: 1px solid #aaa; padding: 5px;">NUMBER(19, 0)</td></tr> </table></p><p>This helps ensure the compatibility of any code running against an Oracle database so that it does not assume it can use 38-digit integer values in case the data needs to be exported to another database or if the code needs to work with other databases.  Columns wishing to use a <tt>NUMBER(38)</tt> should use a DecimalType column. </p><h3><a name="NUMERIC_and_DECIMAL"></a>NUMERIC and DECIMAL<a href="#NUMERIC_and_DECIMAL" class="section_anchor">&para;</a></h3><p>There is a minor difference in the definition of the <tt>NUMERIC</tt> and <tt>DECIMAL</tt> types according to the <a href="http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt" rel="nofollow">SQL 1992 standard</a>: </p><pre class="prettyprint">    17) NUMERIC specifies the data type exact numeric, with the decimal
        precision and scale specified by the &lt;precision&gt; and &lt;scale&gt;.

    18) DECIMAL specifies the data type exact numeric, with the decimal
        scale specified by the &lt;scale&gt; and the implementation-defined
        decimal precision equal to or greater than the value of the
        specified &lt;precision&gt;.</pre><p>However, in practice, all databases we looked at implement them identically. </p><ul><li> Derby </li></ul><blockquote>&quot;NUMERIC is a synonym for DECIMAL and behaves the same way. See DECIMAL data type.&quot; 
</blockquote><blockquote><a href="http://db.apache.org/derby/docs/10.4/ref/rrefsqlj12362.html" rel="nofollow">http://db.apache.org/derby/docs/10.4/ref/rrefsqlj12362.html</a> 
<a href="http://db.apache.org/derby/docs/10.4/ref/rrefsqlj15260.html" rel="nofollow">http://db.apache.org/derby/docs/10.4/ref/rrefsqlj15260.html</a> 
</blockquote><ul><li> Mysql </li></ul><blockquote>&quot;NUMERIC implemented as DECIMAL.&quot; 
</blockquote><blockquote><a href="http://dev.mysql.com/doc/refman/5.1/en/numeric-types.html" rel="nofollow">http://dev.mysql.com/doc/refman/5.1/en/numeric-types.html</a> 
</blockquote><ul><li> Oracle </li></ul><blockquote>Only has the <tt>NUMBER</tt> type. 
</blockquote><blockquote><a href="http://download-west.oracle.com/docs/cd/B19306_01/server.102/b14200/sql_elements001.htm" rel="nofollow">http://download-west.oracle.com/docs/cd/B19306_01/server.102/b14200/sql_elements001.htm</a> 
</blockquote><blockquote><a href="http://download-west.oracle.com/docs/cd/B19306_01/server.102/b14200/sql_elements001.htm#sthref218" rel="nofollow">http://download-west.oracle.com/docs/cd/B19306_01/server.102/b14200/sql_elements001.htm#sthref218</a> 
</blockquote><ul><li> PostgreSQL </li></ul><blockquote>&quot;The types decimal and numeric are equivalent. Both types are part of the SQL standard.&quot; 
</blockquote><blockquote>The documentation uses <tt>NUMERIC</tt> more and lists <tt>DECIMAL</tt> as an alias. 
</blockquote><blockquote><a href="http://www.postgresql.org/docs/8.3/interactive/datatype-numeric.html" rel="nofollow">http://www.postgresql.org/docs/8.3/interactive/datatype-numeric.html</a> 
<a href="http://www.postgresql.org/docs/8.3/interactive/datatype.html#DATATYPE-TABLE" rel="nofollow">http://www.postgresql.org/docs/8.3/interactive/datatype.html#DATATYPE-TABLE</a> 
</blockquote><h3><a name="Character_Set_Encoding"></a>Character Set Encoding<a href="#Character_Set_Encoding" class="section_anchor">&para;</a></h3><p>Scala Migrations supports specifying the character set for <tt>Char</tt> and <tt>Varchar</tt> columns with the <tt>CharacterSet()</tt> column option, which takes the name of the character set as an argument.  Currently, the only supported character set name is Unicode. </p><p>Here is how different databases handle character set encoding. </p><ul><li>Derby </li></ul><blockquote>&quot;Character data types are represented as Unicode 2.0 sequences in Derby.&quot; 
</blockquote><blockquote>So specifying <tt>CharacterSet(Unicode)</tt> does not change its behavior.  Using any character set name besides Unicode as the argument to <tt>CharacterSet()</tt> raises a warning and is ignored. 
</blockquote><blockquote><a href="http://db.apache.org/derby/docs/10.4/devguide/cdevcollation.html" rel="nofollow">http://db.apache.org/derby/docs/10.4/devguide/cdevcollation.html</a> 
</blockquote><ul><li>PostgreSQL </li></ul><blockquote>The character set encoding is chosen when a database is created with the &quot;createdb&quot; command line utility or the 
</blockquote><blockquote><tt>CREATE DATABASE ENCODING [=] encoding</tt> 
</blockquote><blockquote>SQL statement.  So specifying any <tt>CharacterSet</tt> has no effect. 
</blockquote><ul><li>MySQL </li></ul><blockquote>MySQL supports specifying the character set on a per-column basis. 
</blockquote><ul><li>Oracle </li></ul><blockquote>Oracle only supports two character sets.  The first uses the database character set which was chosen when the database was created.  This encoding is used for <tt>CHAR</tt>, <tt>VARCHAR2</tt> and <tt>CLOB</tt> columns.  The second character set is called the national character set and is Unicode, which is used for <tt>NCHAR</tt>, <tt>NVARCHAR2</tt> and <tt>NCLOB</tt> columns.  There are two encodings available for the national character set, <tt>AL16UTF16</tt> and <tt>UTF8</tt>.  By default, Oracle uses <tt>AL16UTF16</tt>. 
</blockquote><blockquote><a href="http://download-west.oracle.com/docs/cd/B19306_01/server.102/b14225/ch6unicode.htm" rel="nofollow">http://download-west.oracle.com/docs/cd/B19306_01/server.102/b14225/ch6unicode.htm</a> 
</blockquote><blockquote>Specifying no <tt>CharacterSet</tt> column option defaults the <tt>Char</tt> type to <tt>CHAR</tt> and the <tt>Varchar</tt> type to <tt>VARCHAR2</tt>.  If <tt>CharacterSet(Unicode)</tt> is given, then <tt>Char</tt> uses <tt>NCHAR</tt> and <tt>Varchar</tt> uses <tt>NVARCHAR2</tt>.  Using any character set name besides <tt>Unicode</tt> as the argument to <tt>CharacterSet()</tt> raises a warning and is ignored, resulting in <tt>CHAR</tt> and <tt>VARCHAR2</tt> column types. 
</blockquote><h3><a name="Caveats"></a>Caveats<a href="#Caveats" class="section_anchor">&para;</a></h3><ul><li>Index and foreign key names do not use the same naming convention as the Ruby on Rails migrations, so a port of Ruby on Rails migrations to Scala Migrations should specify the index name using the <tt>Name()</tt> case class as an option to <tt>add_index()</tt> or <tt>remove_index()</tt>. </li></ul>
 </td>
 
 
 <td class="pscolumnr">
 
 
 <div class="phead pfeatured">Featured</div>
 
 <div class="psicon">
 <img height="15" width="15" src="http://www.gstatic.com/codesite/ph/images/filedownload-g16.png"/>
 <span><b>Downloads</b></span>
 </div>
 <ul class="pslist">
 
 <li id="downloadbox" class="psmeta">
 <a title="Download" href="http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.7.7-jdbc3.jar" onclick="_gaq.push(['siteTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.7.7-jdbc3.jar', 'OpSys-All, Featured']);_gaq.push(['projectTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.7.7-jdbc3.jar', 'OpSys-All, Featured']);">
 </a>
 <a href="downloads/detail?name=scala-migrations-1.0.0-2.7.7-jdbc3.jar"
 title="Release 1.0.0 built with Scala 2.7.7 with JDK 1.5 (jdbc3)">scala-migrations-1.0.0-2.7.7-jdbc3.jar</a>
 </li>
 
 <li id="downloadbox" class="psmeta">
 <a title="Download" href="http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.7.7-jdbc4.jar" onclick="_gaq.push(['siteTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.7.7-jdbc4.jar', 'OpSys-All, Featured']);_gaq.push(['projectTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.7.7-jdbc4.jar', 'OpSys-All, Featured']);">
 </a>
 <a href="downloads/detail?name=scala-migrations-1.0.0-2.7.7-jdbc4.jar"
 title="Release 1.0.0 built with Scala 2.7.7 with JDK 1.6 (jdbc4)">scala-migrations-1.0.0-2.7.7-jdbc4.jar</a>
 </li>
 
 <li id="downloadbox" class="psmeta">
 <a title="Download" href="http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.0-jdbc3.jar" onclick="_gaq.push(['siteTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.0-jdbc3.jar', 'OpSys-All, Featured']);_gaq.push(['projectTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.0-jdbc3.jar', 'OpSys-All, Featured']);">
 </a>
 <a href="downloads/detail?name=scala-migrations-1.0.0-2.8.0-jdbc3.jar"
 title="Release 1.0.0 built with Scala 2.8.0.final with JDK 1.5 (jdbc3)">scala-migrations-1.0.0-2.8.0-jdbc3.jar</a>
 </li>
 
 <li id="downloadbox" class="psmeta">
 <a title="Download" href="http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.0-jdbc4.jar" onclick="_gaq.push(['siteTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.0-jdbc4.jar', 'OpSys-All, Featured']);_gaq.push(['projectTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.0-jdbc4.jar', 'OpSys-All, Featured']);">
 </a>
 <a href="downloads/detail?name=scala-migrations-1.0.0-2.8.0-jdbc4.jar"
 title="Release 1.0.0 built with Scala 2.8.0.final with JDK 1.6 (jdbc4)">scala-migrations-1.0.0-2.8.0-jdbc4.jar</a>
 </li>
 
 <li id="downloadbox" class="psmeta">
 <a title="Download" href="http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.1-jdbc3.jar" onclick="_gaq.push(['siteTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.1-jdbc3.jar', 'OpSys-All, Featured']);_gaq.push(['projectTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.1-jdbc3.jar', 'OpSys-All, Featured']);">
 </a>
 <a href="downloads/detail?name=scala-migrations-1.0.0-2.8.1-jdbc3.jar"
 title="Release 1.0.0 built with Scala 2.8.1.final with JDK 1.5 (jdbc3)">scala-migrations-1.0.0-2.8.1-jdbc3.jar</a>
 </li>
 
 <li id="downloadbox" class="psmeta">
 <a title="Download" href="http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.1-jdbc4.jar" onclick="_gaq.push(['siteTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.1-jdbc4.jar', 'OpSys-All, Featured']);_gaq.push(['projectTracker._trackEvent', 'Download - Downloaded', 'http://scala-migrations.googlecode.com/files/scala-migrations-1.0.0-2.8.1-jdbc4.jar', 'OpSys-All, Featured']);">
 </a>
 <a href="downloads/detail?name=scala-migrations-1.0.0-2.8.1-jdbc4.jar"
 title="Release 1.0.0 built with Scala 2.8.1.final with JDK 1.6 (jdbc4)">scala-migrations-1.0.0-2.8.1-jdbc4.jar</a>
 </li>
 
 <li class="psmeta"><a href="downloads/list">Show all &raquo</a></li>
 <li class="psgap"/>
 </ul>
 
 
 
 
 
 <div class="phead">Links</div>
 <ul class="pslist">
 
 
 <li class="psmeta"><b>External links</b></li>
 
 <li class="psmeta">
 <a href="http://www.imageworks.com/" rel="nofollow">Sony Pictures Imageworks</a>
 </li>
 
 <li class="psgap"/>
 
 
 <li class="psmeta"><b>Groups</b></li>
 
 <li class="psmeta">
 <a href="http://groups.google.com/group/scala-migrations-dev" rel="nofollow">Development List</a>
 </li>
 
 <li class="psgap"/>
 
 </ul>
 
 </td>
 
 
 </tr>
</table>
<script src="http://www.gstatic.com/codesite/ph/2314035420504622226/js/prettify.js"></script>
<script type="text/javascript">
 prettyPrint();
</script>

 
 
 <script type="text/javascript" src="http://www.gstatic.com/codesite/ph/2314035420504622226/js/core_scripts_20081103.js"></script>
 <script type="text/javascript" src="/js/codesite_product_dictionary_ph.pack.04102009.js"></script>
 </div>
<div id="footer" dir="ltr">
 
 <div class="text">
 
 &copy;2010 Google -
 <a href="/projecthosting/terms.html">Terms</a> -
 <a href="http://www.google.com/privacy.html">Privacy</a> -
 <a href="/p/support/">Project Hosting Help</a>
 
 </div>
</div>

 <div class="hostedBy" style="margin-top: -20px;">
 <span style="vertical-align: top;">Powered by <a href="http://code.google.com/projecthosting/">Google Project Hosting</a></span>
 </div>
 
 


 
 </body>
</html>

