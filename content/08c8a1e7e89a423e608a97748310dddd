<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml">
      <head>
        <link href="/css/blueprint/screen.css" type="text/css" rel="stylesheet" media="screen, projection"></link>
        <link href="/css/blueprint/print.css" type="text/css" rel="stylesheet" media="print"></link> 
        <link href="style.css" type="text/css" rel="stylesheet"></link> 
        <title> Dispatch → About </title>
      </head>
      <body>
        <div id="content">
      <div class="container">
        <h2>Dispatch → About</h2>
        <h4><ul class="toc"> <li> About </li><li> <a href="Download">Download</a> </li><li> <a href="Twine">Twine</a> </li><li> <a href="Reference">Reference</a> </li><li> <a href="Talk">Talk</a> </li> </ul></h4>
        <p><strong>Databinder Dispatch</strong> is a Scala library for accessing HTTP services. It works through <a href="http://hc.apache.org/httpcomponents-client/">HttpClient</a> to succinctly handle HTTP scenarios ranging from plain GETs to digest-authenticated PUTs, and has its own OAuth consumer implementation.</p>

<p>In addition to transfer abstraction, Dispatch includes JSON transformations to be bound to HTTP operations or used independently. Through these (and Scala&rsquo;s built-in XML processing) Dispatch client applications create their own interfaces to the various APIs springing up all over the web. Dispatch itself comes with partial interfaces to <a href="http://www.meetup.com/meetup_api/">Meetup</a>, <a href="http://apiwiki.twitter.com/">Twitter</a>, and <a href="http://wiki.apache.org/couchdb/HTTP_Document_API">CouchDB</a>.</p> 
        
      </div>
    </div>
      </body>
    </html>