<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-GB">

<head profile="http://purl.org/NET/erdf/profile http://microformats.org/wiki/hcard-profile http://microformats.org/wiki/hatom#XMDP_Profile">
<title>Sound advice - blog</title>

<link rel="alternate" type="application/atom+xml" title="ATOM" href="http://soundadvice.id.au/blog/index.atom"/>
<link rel="alternate" type="application/rss+xml" title="RSS" href="http://soundadvice.id.au/blog/index.rss"/>
<link rel="alternate" type="application/rdf+xml" title="RDF" href="http://research.talis.com/2005/erdf/extract?uri=http://soundadvice.id.au/blog/"/>
<link rel="schema.rdfs" href="http://www.w3.org/2000/01/rdf-schema#" />
<link rel="schema.dc" href="http://purl.org/dc/elements/1.1/" />
<link rel="schema.foaf" href="http://xmlns.com/foaf/0.1/" />
<link rel="schema.bio" href="http://vocab.org/bio/0.1/" />

<link rel="schema.contact" href="http://www.w3.org/2000/10/swap/pim/contact#" />
<link rel="schema.air" href="http://www.daml.org/2001/10/html/airport-ont#" />
<link rel="schema.wn" href="http://xmlns.com/wordnet/1.6/" />
<link rel="schema.rss" href="http://purl.org/rss/1.0/" />
<link rel="schema.terms" href="http://purl.org/dc/terms/" />
<link rel="schema.rel" href="http://purl.org/vocab/relationship/" />
<link rel="schema.geo" href="http://www.w3.org/2003/01/geo/wgs84_pos#" />
<link rel="schema.aff" href="http://purl.org/vocab/affiliations/0.1/" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />

<link rel="schema.org" href="http://purl.org/vocab/organizations/0.1/"/>
<link rel="schema.psych" href="http://purl.org/vocab/psychometric-profile/" />
<link rel="schema.doap" href="http://usefulinc.com/ns/doap#" />

<link rel="stylesheet" type="text/css" href="http://soundadvice.id.au/blog/blog.css"/>

<script type="text/javascript">
function show(id)
{
document.getElementById(id).style.display="block"
}
function hide(id)
{
document.getElementById(id).style.display="none"
}
</script>

</head>

<body class="hfeed">

<h1 class="dc-title"><a rel="home" href="http://soundadvice.id.au/blog/">Sound advice - blog</a></h1>

<div class="info"
	onmouseover="show('fuzzyBSc')"
	onmouseout="hide('fuzzyBSc')"
	>
   <p class="dc-description">Tales from the homeworld</p>
   <address id="fuzzyBSc" class="hidden vcard author">
	<a class="foaf-name dc-author fn url" href="http://soundadvice.id.au/blog/"><span class="foaf-firstName given-name">Benjamin</span> <span class="foaf-surname family-name">Carlyle</span></a>
	(<span class="foaf-nick">fuzzyBSc</span>),
	<abbr class="foaf-mbox_sha1sum" title="34d27d25cee12a84b003f551264d83de8142cc97"><span class="email">benjamincarlyle at soundadvice.id.au</span></abbr>,
	<span class="adr"><span class="region">Brisbane</span>, <span class="country-name">Australia</span></span>,
	<span class="tz">GMT+10:00</span>
   </address>
</div>

<div class="navigation">
   <h2>Lifesigns</h2>
   
   <p><a href="http://soundadvice.id.au/blog/allindex.html">Full Index</a></p>

<p class="inlinks">
in links:
<a href="http://www.google.com.au/search?q=link:http://soundadvice.id.au/blog/">google</a>
<a href="http://blogsearch.google.com.au/blogsearch?q=link:http://soundadvice.id.au/blog/">google blogsearch</a>
<a href="http://www.technorati.com/search/http://soundadvice.id.au/blog/">technorati</a>
<a href="http://del.icio.us/url/check?url=http://soundadvice.id.au/blog/">delicious</a>
</p>

   <h2>Subscribe</h2>
   <p><a href="http://soundadvice.id.au/blog/index.rss">RSS</a></p>
   <p><a href="http://soundadvice.id.au/blog/index.atom">ATOM</a></p>

   <h2>RDF</h2>
   <p><a href="http://research.talis.com/2005/erdf/extract?uri=http://soundadvice.id.au/blog/">RDF</a></p>

   <h2>Feedback and Social Software</h2>
   <p><a href="http://soundadvice.id.au/blog/2005/06/26#howDoIComment">How do I comment?</a></p>
   <p><a href="http://www.linkedin.com/in/benjamincarlyle">My linkedin profile</a></p>
   <p><a href="http://del.icio.us/fuzzyBSc">My del.icio.us bookmarks</a></p>
   <!--p><script type="text/javascript"
     src="http://technorati.com/embed/q6g8eqzcjg.js"> </script></p>
   <p><script type="text/javascript"
     src="http://embed.technorati.com/embed/cq92bw2zk.js"> </script></p-->
   
   <h2>Support Software</h2>
   <p>
   <a href="http://www.raelity.org/apps/blosxom/"><img src="http://soundadvice.id.au/blog/images/pb_blosxom.gif" alt="blosxom"/></a>
   <a href="http://validator.w3.org/check/referer">valid XHTML?</a>
   </p>

   <h2>Site Statistics</h2>
<a href="http://extremetracking.com/open?login=fuzzybsc">
<img src="http://t1.extreme-dm.com/i.gif" height="38"
width="41" alt=""/></a><script type="text/javascript"><!--
EXd=document;EXw?"":EXw="na";EXb?"":EXb="na";
EXd.write("<img src=\"http://t0.extreme-dm.com",
"/c.g?tag=fuzzybsc&amp;j=y&amp;srw="+EXw+"&amp;srb="+EXb+"&amp;",
"l="+escape(EXd.referrer)+"\" height=\"1\" width=\"1\"/>");//-->
</script><noscript><p><img height="1" width="1" alt=""
src="http://t0.extreme-dm.com/c.g?tag=fuzzybsc&amp;j=n"/></p></noscript>

<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-751790-1";
urchinTracker();
</script>

   <h2>License</h2>
<!-- Creative Commons License -->
<a rel="license" href="http://creativecommons.org/licenses/by/2.1/au/"><img alt="Creative Commons License" src="http://creativecommons.org/images/public/somerights20.gif" /></a>
<p>
This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by/2.1/au/">Creative Commons Attribution 2.1 Australia License</a>.
<!-- /Creative Commons License -->
   </p>
</div>

<div class="blogroll">
   <h2>My current feeds</h2>
<ul><li><p>Humour</p><ul><li><a href="http://xkcd.com/">xkcd.com</a></li><li><a href="http://dilbert.com/">Dilbert</a></li></ul></li><li><p>REST Luminaries</p><ul><li><a href="http://roy.gbiv.com/untangled">Untangled</a></li><li><a href="http://wanderingbarque.com/nonintersecting">Pete Lacey's Weblog</a></li><li><a href="http://www.innoq.com/blog/st/">Stefan Tilkov's Random Stuff</a></li><li><a href="http://www.coactus.com/blog">Integrate This</a></li><li><a href="http://www.markbaker.ca/blog">Web Things, by Mark Baker</a></li><li><a href="http://www.mnot.net/blog/">mnot’s Web log</a></li></ul></li><li><p>xml</p><ul><li><a href="http://ln.hixie.ch/">Hixie's Natural Log</a></li><li><a href="http://xmlhack.com/">XMLhack</a></li><li><a href="http://xml.coverpages.org/covernews.xml">The XML Cover Pages</a></li><li><a href="http://svg.org">SVG.org News</a></li><li><a href="http://www.xml.com/">XML.com</a></li></ul></li><li><p>planets</p><ul><li><a href="http://planet.xmlhack.com/">Planet XML</a></li><li><a href="http://planet.linux.org.au">Planet Linux Australia</a></li><li><a href="http://del.icio.us/tag/rest">del.icio.us/tag/rest</a></li><li><a href="http://planetrdf.com/">Planet RDF</a></li><li><a href="http://planet.gnome.org/">Planet GNOME</a></li><li><a href="http://planet.classpath.org/">Planet Classpath</a></li><li><a href="http://planet.freedesktop.org">planet.freedesktop.org</a></li><li><a href="http://www.infoq.com">InfoQ Personalized Feed for Unregistered User - Registered to upgrade!</a></li><li><a href="http://planet.xsltransformations.com/">Planet XSLTransformations</a></li><li><a href="http://news.onrest.org">News on REST</a></li></ul></li><li><p>projects</p><ul><li><a href="http://www.mono-project.com/news/index.html">Mono Project News</a></li><li><a href="http://gnomedesktop.org">FootNotes - GNOME Desktop News</a></li></ul></li><li><p>REST</p><ul><li><a href="http://fuzzypanic.blogspot.com/">Panic From Fuzzy</a></li><li><a href="http://zcologia.com/news/">Entries for import cartography</a></li><li><a href="http://www.base4.net/Blog.aspx">Base4 Ideas</a></li><li><a href="http://seanmcgrath.blogspot.com/">Sean McGrath</a></li><li><a href="http://www.tbray.org/ongoing/">ongoing</a></li><li><a href="http://koranteng.blogspot.com/">Koranteng's Toli</a></li><li><a href="http://blog.noelios.com">Noelios Consulting</a></li><li><a href="http://asynchronous.org/blog/">AsynchronousBlog</a></li><li><a href="http://morenews.blogspot.com/">More News</a></li><li><a href="http://lesscode.org/">lesscode.org</a></li><li><a href="http://rest.blueoxen.net/cgi-bin/wiki.pl">RestWiki Updates</a></li><li><a href="http://www.justobjects.org/blog">Just Subjects</a></li><li><a href="http://cfis.savagexi.com">cfis</a></li><li><a href="http://www.goland.org">Stuff Yaron Finds Interesting</a></li><li><a href="http://jooto.com/blog">Ethical Software by Alex Bunardzic</a></li><li><a href="http://www.intertwingly.net/blog/">Sam Ruby</a></li><li><a href="http://www.peej.co.uk/">Paul James</a></li><li><a href="http://blogs.concedere.net:8080/blog/discipline/">discipline and punish</a></li><li><a href="http://www.stucharlton.com/blog/">Stu says stuff</a></li><li><a href="http://udidahan.weblogs.us/">Udi Dahan - The Software Simplist</a></li><li><a href="http://blogs.ittoolbox.com/eai/udidahan">Distributed Systems Simplified</a></li><li><a href="http://samgentile.com/blogs/samgentile/default.aspx">Sam Gentile</a></li><li><a href="http://blog.welldesignedurls.org">Blog for The Well Designed URLs Initiative</a></li><li><a href="http://lawley.id.au/blog">Miscellaneous-B</a></li><li><a href="http://duncan-cragg.org/blog/">What Not How</a></li><li><a href="http://benramsey.com">Ben Ramsey</a></li><li><a href="http://clark.dallas.tx.us/PWSR/">Practical Web Services with REST</a></li><li><a href="http://mykakotopia.blogspot.com/">/etc/init.d/hack start</a></li><li><a href="http://blog.labnotes.org">Labnotes</a></li><li><a href="http://weblogs.goshaky.com/weblogs/alexkli/">Alexander Klimetschek's Blog</a></li><li><a href="http://highscalability.com">High Scalability - Building bigger, faster, more reliable websites.</a></li><li><a href="http://netzooid.com/blog">netzooid</a></li><li><a href="http://pmuellr.blogspot.com/">pmuellr</a></li></ul></li><li><p>humbug</p><ul><li><a href="http://www.symphonious.net">Symphonious</a></li><li><a href="http://etymon.blogspot.com/">Etymon</a></li><li><a href="http://azure.humbug.org.au/~aj/blog">indolence log</a></li><li><a href="http://staff.dstc.edu.au/croy">Clinton Roy - Whining, not dining</a></li><li><a href="http://diskpig.org/blog">David Jericho - d i s k p i g . o r g</a></li><li><a href="http://www.dbs.id.au/blog/">Inchoate</a></li><li><a href="http://sourcefrog.net/weblog">sourcefrog</a></li><li><a href="http://www.gbch.net/gjb/blog/full/">on the edge</a></li><li><a href="http://jamver.id.au/cgi-bin/blosxom.cgi">The things James does</a></li><li><a href="http://lusan.id.au/~nikolai/blog/">Nikolai Lusan - Blogging is Futile</a></li><li><a href="http://mlm.bpa.nu:8080/weblog">Byron Ellacott - The Shape of Me and Other Stuff</a></li><li><a href="http://oh.yeah.cx/blog/">Andrew Over - Aaaaaargh</a></li><li><a href="http://bleegblog.blogspot.com/">bloggy blogger</a></li><li><a href="http://www.jroller.com/mcbofh/">Letters that don't get published</a></li><li><a href="http://fobblog.blogspot.com/">F-O-B</a></li><li><a href="http://ljjccc.blogspot.com/">天草（かんぞう、licorice,liquorice)とは4</a></li><li><a href="http://broken.dyndns.org/~mjp/blog/">Michael Pick - Delusions of Adequacy</a></li><li><a href="http://shiny.thorne.id.au/shiny/shiny.html">Stephen Thorne - import clue</a></li><li><a href="http://motk.blogspot.com/">Monkeys on the knees</a></li><li><a href="http://quark.humbug.org.au/blog">Brad's Blog</a></li></ul></li><li><p>Aussie Linux</p><ul><li><a href="http://hardy.dropbear.id.au/blog">hardy.dropblog</a></li><li><a href="http://ozlabs.org/~rusty/index.cgi">Rusty's Bleeding Edge Page</a></li><li><a href="http://blogs.gnome.org/gman">Life is so good, it gets better every day</a></li><li><a href="http://www.csamuel.org">The Musings of Chris Samuel</a></li><li><a href="http://research.operationaldynamics.com/blogs">Andrew Cowie</a></li><li><a href="http://etbe.blogspot.com/">etbe</a></li></ul></li><li><p>Misc</p><ul><li><a href="http://twincidence.blogspot.com/">Twincidence</a></li><li><a href="http://buffy.bigblog.com.au/data/4/22228/image/buffy1281706475256165820070428170728.png">Buffy's dog blog</a></li><li><a href="http://melvilledewey.blogspot.com/">Melville Dewey is my homeboy</a></li><li><a href="http://www.google.com/reader/public/atom/user/00216689302776617292/state/com.google/broadcast">David's shared items in Google Reader</a></li></ul></li><li><p>Home</p><ul><li><a href="http://technorati.com/search/http%3A%2F%2Fmembers.optusnet.com.au%2Fbenjamincarlyle%2Fbenjamin%2Fblog">Technorati Search for: http://members.optusnet.com.au/benjamincarlyle/benjamin/blog</a></li><li><a href="http://technorati.com/search/http%3A%2F%2Fsoundadvice.id.au%2Fblog%2F">Technorati Search for: http://soundadvice.id.au/blog/</a></li><li><a href="http://soundadvice.id.au/blog/">Sound advice</a></li><li><a href="http://soundadvice.id.au/altblog/">Sound advice</a></li><li><a href="http://soundadvice.id.au/blog/EnterpriseREST.html">Section 1: Why REST?</a></li><li><a href="http://www.facebook.com/notifications.php">Benjamin Carlyle's Facebook Notifications</a></li></ul></li><li><a href="http://efficientsoftware.pbwiki.com/">efficientsoftware</a></li><li><p>Events</p><ul><li><a href="http://www.auug.org.au:8080/auug">Events</a></li><li><a href="http://linux.org.au/event/feed">Linux Australia - Events Feed</a></li></ul></li></ul>

<!-- Google CSE Search Box Begins  -->
<!-- Use of this code assumes agreement with the Google Custom Search Terms of Service. -->
<!-- The terms of service are available at http://www.google.com/coop/docs/cse/tos.html -->
<form id="cref" action="http://www.google.com/cse">
<p>
  <input type="hidden" name="cref" value="http://soundadvice.id.au/blog/google-cse.xml" />
  <input type="text" name="q" size="40" />
  <input type="submit" name="sa" value="Search Blogroll" />
</p>
</form>
<!--script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=cref"></script-->
<!-- Google CSE Search Box Ends -->
</div>

<div class="links">
   <h2>My recent bookmarks</h2>
<ul><li><a rel="tag" href="http://delicious.com/fuzzyBSc/ubuntu">ubuntu</a><ul><li><a href="http://www.myscienceisbetter.info/2008/09/install-google-chrome-on-linux-using-wine.html">Install Google Chrome on Linux using wine - My Science Is Better</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/chrome">chrome</a><ul><li><a href="http://www.myscienceisbetter.info/2008/09/install-google-chrome-on-linux-using-wine.html">Install Google Chrome on Linux using wine - My Science Is Better</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/web">web</a><ul><li><a href="http://tools.ietf.org/html/rfc2518">RFC 2518 - HTTP Extensions for Distributed Authoring -- WEBDAV</a></li><li><a href="http://www.w3.org/TR/REC-html40/types.html#type-links">Basic HTML data types</a></li><li><a href="http://www.mnot.net/cache_docs/">Caching Tutorial for Web Authors and Webmasters</a></li><li><a href="http://tools.ietf.org/html/rfc2817">RFC 2817 - Upgrading to TLS Within HTTP/1.1</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/reference">reference</a><ul><li><a href="http://tools.ietf.org/html/rfc2518">RFC 2518 - HTTP Extensions for Distributed Authoring -- WEBDAV</a></li><li><a href="http://www.w3.org/TR/REC-html40/types.html#type-links">Basic HTML data types</a></li><li><a href="http://www.mnot.net/cache_docs/">Caching Tutorial for Web Authors and Webmasters</a></li><li><a href="http://tools.ietf.org/html/rfc2817">RFC 2817 - Upgrading to TLS Within HTTP/1.1</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/posts">posts</a><ul><li><a href="http://news.cnet.com/8301-13880_3-10004268-68.html">Keep your Gmail transmissions secure | Workers' Edge - a productivity blog from Dennis O'Reilly - CNET News.com</a></li><li><a href="http://sberyozkin.blogspot.com/2008/07/about-10-year-plan.html">Musings about web services: About the 10 year plan</a></li><li><a href="http://news.cnet.com/8301-10787_3-9992999-60.html">Curtains for desktops? If not now, when? | Coop's Corner : A Blog from Charlie Cooper - CNET News.com</a></li><li><a href="http://www.pcworld.com/article/148425/apple_sends_the_wrong_signal_to_iphone_customers.html">PC World - Apple Sends the Wrong Signal to IPhone Customers</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/brisbane">brisbane</a><ul><li><a href="http://www.brisbane.qld.gov.au/traffic/home/default.asp">Traffic alert - Search - Brisbane City Council</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/traffic">traffic</a><ul><li><a href="http://www.brisbane.qld.gov.au/traffic/home/default.asp">Traffic alert - Search - Brisbane City Council</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/authorisation">authorisation</a><ul><li><a href="http://www.nsa.gov/selinux/papers/gconf07-abs.cfm">Using GConf as an Example of How to Create an Userspace Object Manager</a></li><li><a href="http://selinux-symposium.org/2007/slides/03-xorg.pdf">03-xorg.pdf (application/pdf Object)</a></li><li><a href="http://csrc.nist.gov/groups/SNS/rbac/documents/towards-std.pdf">towards-std.pdf (application/pdf Object)</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/ssl">ssl</a><ul><li><a href="http://www.gnu.org/software/gnutls/documentation.html">GNU TLS Library - GNU Project - Free Software Foundation (FSF)</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/tls">tls</a><ul><li><a href="http://www.gnu.org/software/gnutls/documentation.html">GNU TLS Library - GNU Project - Free Software Foundation (FSF)</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/authentication">authentication</a><ul><li><a href="http://www.gnu.org/software/gnutls/documentation.html">GNU TLS Library - GNU Project - Free Software Foundation (FSF)</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/questions">questions</a><ul><li><a href="https://answers.launchpad.net/policykit/+question/39995">PolicyKit question #39995: “Could I use PolicyKit as part of a web server?”</a></li></ul></li><li><a rel="tag" href="http://delicious.com/fuzzyBSc/rbac">rbac</a><ul><li><a href="http://csrc.nist.gov/groups/SNS/rbac/documents/towards-std.pdf">towards-std.pdf (application/pdf Object)</a></li></ul></li></ul>
</div>

<!--span class="dateheader">Fri, 29 Sep 2006</span-->
<div class="hentry" id="keepalive">
<p class="dateheader"><abbr class="published" title="2006-09-29T23:41:00+10:00">Fri, 2006-Sep-29</abbr></p>
<h2><a class="entry-title" name="keepalive">Using TCP Keepalive for Client Failover</a></h2>
<div class="entry-content">
<p>I
<a href="http://soundadvice.id.au/blog/2006/09/17#highAvailability">covered recently</a>
my foray into using mechanisms that are as standard as possible between client and server to
facilitate a fixed-period failover time. A client may have a request outstanding and may be
waiting for a response. A client may have subscriptions outstanding to the server. Even a server
that transfers its IP or MAC address to its backup during failover does not completely isolate
its clients from the failover process. Failover and server restart both cause a loss of the
state of the server's TCP/IP stack. When that happens, clients must detect it in order to
successfully move their processing to the new server instance.
</p>
<p>I had originally pooh poohed TCP/IP keepalive as a limited option. Most (all?) operating
systems that support keepalive use system-wide timeout settings, so values can't be tuned based
on who you are talking to. I think this might be able to be overcome by solaris zones, however.
Also, the failover characteristics of a particular host with respect to the services it talks to
are often similar enough that this is not a problem.
</p>
<p>I want to keep end-to-end pinging to a minimum, so I only want keepalive to be turned on
while a client has requests outstanding. An idle connection should not generate traffic.
Interestingly, this seems to be possible by using the socket option. It should be possible to
turn the keepalive on when a request is sent, and turn it back off again when the last
outstanding response is recieved. In the mean-time the active TCP/IP connection will often be
sending data, so keepalives will most often be sent during network lull times while the server
is taking time processing.
</p>
<p>If I want my four second failover, it should just be a matter of setting the appropriate
kernel variables to send requests every second or so and give up after a corresponding number
of failures. Combined with IP-level server failover, and subscriptions that are persistent
across the failover, this provides a consistent failover experience with a minimum of network
load.
</p>
<p>Benjamin</p>

</div>

<p class="inlinks">
in links:
<a href="http://www.google.com.au/search?q=link:http://soundadvice.id.au/blog/2006/09/29/%23keepalive">google</a>
<a href="http://blogsearch.google.com.au/blogsearch?q=link:http://soundadvice.id.au/blog/2006/09/29/%23keepalive">google blogsearch</a>
<a href="http://www.technorati.com/search/http://soundadvice.id.au/blog/2006/09/29/%23keepalive">technorati</a>
<a href="http://del.icio.us/url/check?url=http://soundadvice.id.au/blog/2006/09/29/%23keepalive">delicious</a>
<br/>
[<a href="http://soundadvice.id.au/blog/general" rel="tag">/general</a>] 
<a href="http://soundadvice.id.au/blog/2006/09/29#keepalive" rel="bookmark">permanent link</a>
</p>
</div>

<div class="hentry" id="commonRESTQuestions">
<p class="dateheader"><abbr class="published" title="2006-09-29T22:16:00+10:00">Fri, 2006-Sep-29</abbr></p>
<h2><a class="entry-title" name="commonRESTQuestions">Common REST Questions</a></h2>
<div class="entry-content">
<p>I just came across a blog entry that includes a number of common
misconceptions and questions about about REST,
<a href="http://weblogs.java.net/blog/brianrepko/archive/2006/08/aint_gettin_no.html">here</a>
</p>
<p>I posted a response in comments, but I thought I might repeat it here also:</p>
<p>RESTwiki contains a some useful information on how REST models things differently to Object-Orientation. See:</p>
<ul>
<li><a href="http://rest.blueoxen.net/cgi-bin/wiki.pl?RestTriangle">http://rest.blueoxen.net/cgi-bin/wiki.pl?RestTriangle</a></li>
<li><a href="http://rest.blueoxen.net/cgi-bin/wiki.pl?RESTfulDesign">http://rest.blueoxen.net/cgi-bin/wiki.pl?RESTfulDesign</a></li>
<li><a href="http://rest.blueoxen.net/cgi-bin/wiki.pl?BenjaminsRESTTutorial">http://rest.blueoxen.net/cgi-bin/wiki.pl?BenjaminsRESTTutorial</a></li>
<li><a href="http://rest.blueoxen.net/cgi-bin/wiki.pl?MinimumMethods">http://rest.blueoxen.net/cgi-bin/wiki.pl?MinimumMethods</a></li>
</ul>
<p>and others. Also, see the rest wikipedia article which sums some aspects of REST up nicely:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Representational_State_Transfer">http://en.wikipedia.org/wiki/Representational_State_Transfer</a></li>
</ul>
<p>
The core of prevailing REST philosophy is the rest triangle, where naming of resource is separated from the set of operations that can be performed on resources, and again from the kinds of information representations at those resources. Verbs and content types must be standard if messages are to be self-descripitve, and the requirements of the REST style met. Also, there should be no crossover between the corners of the REST triangle. names should not be found in verbs or content types, except as hyperlinks. Content should not be found in names or verbs. Verbs should not be found in names or content.
</p>
<p>
REST can be seen a documented-oriented subset of Object-Orientation. It deliberately reduces the expressiveness of Objects down to the capabilities of resources to ensure compatability and interoperability between components of the architecture. Object-Orientation allows too great a scope of variation for internet-scale software systems such as the world-wide-web to develop, and doesn't evolve well as demands on the feature set change. REST is Object-Orientation that works between agencies, between opposing interests. For that you need to make compromises rather than doing things your own way.
</p>
<p>
Now, to address your example:<br/>
Verbs should not be part of the noun-space, so your urls
</p>
<ul>
<li>/journal/{id}/void</li>
<li>/journal/{id}/reverse</li>
</ul>
<p>should not be things you POST to. They should demarcate the "void" state and the "reverse" state of your journal entry. When you GET the void URL it should return the text/plain "true" if the transaction is void and "false" if the transaction is not void. A put of the text/plain "true" will void the transaction, possibling impacting the state demarcated by other resources. Reverse is similar. The URL should be "reversal" rather than "reverse". It should return the url of the reversing transaction, or indicate 404 Not Found to show no reversal. A PUT to the reverse would return 201 Created and further GETs would show the reversal transaction.
</p>
<p>
Creation in REST is simple. Either the client knows the URL of the resource they want to create and PUT the resource's state to that URL, or the client requests a factory resource add the state it provides to itself. This is designed to either append the state provided or create a new resource to demarcate the new state. POST is more common. The PUT approach requires clients to know something about the namespace that they often shouldn't know outside of some kind of test environment.
</p>
<p>
On swapping: This is something of an edge case, and this sort of thing comes up less often than you think when you are designing RESTfully from the start. The canonical approach would be to include the position of the resource as part of its content. PUTting over the top of that position would move it. This is messy because it crosses between noun and content spaces. Introducing a SWAP operation is also a problem. HTTP operates on a single resource, so there is no unmunged way to issue a SWAP request. Any such SWAP request would have to assume both of the resources of the unordered list are held by the same server, or that the server of one of these resources was able to operate on the ordered list.
</p>
<p>
On transactions: The CRUD verb analogy is something of a bane for REST. I prefer cut-and-paste. Interestingly, cut-and-paste on the desktop is quite RESTful. A small number of verbs are able to transfer information in a small number of widely-understood formats from one application to another. The cursor identifies and demarcates the information that will be COPIED (GET) or CUT (GET + DELETE) and the position where the information or state will be PASTED to (PUT to paste over, POST to paste after). The CRUD analogy leaves us wondering how to do transactions, but with the cut-and-paste analogy the answer is obvious: Don't.
</p>
<p>
In REST, updates are almost universally atomic. You do everything you need to do atomically in a single request, rather than trying to spread it out over several requests and having to add transaction semantics. If you can't see how to do without transactions you are probably applying REST at a lower-level than it is typically applied. In this example, whenever you post a new journal entry you do so as a single operation. POST to a complete representation of the journal entry to a factory resource.
</p>
<p>
That is not to say that REST can't do transactions. Just POST to a transaction factory resource, perform several POSTS to the transaction that was created, then DELETE (roll-back) or POST a commit marker to the transaction.
</p>
<p>
How REST maps to objects is up to the implementation. You can evolve your objects independently of the namespace, which is expected to remain stable forever once clients start to use it. The URI space is not a map of your objects, it is a virtual view of the state of your application. Resources are not required or even expected to map directly onto objects. One method of a resource may operate on one object but another may operate on a different object. This is especially the case when state is being created or destroyed.
</p>
<p>
REST is about modelling the state of your application as resources, then operating on that virtualised state using state transfer methods rather than arbitrary methods with arbitrary parameter lists. REST advocates such as myself will claim this has significant benefits, but I'll refer you to the literature (especially the wikipedia page) rather than list them here.
</p>
<p>Benjamin</p>
<p><a href="http://soundadvice.id.au/blog/">http://soundadvice.id.au/blog/</a></p>

</div>

<p class="inlinks">
in links:
<a href="http://www.google.com.au/search?q=link:http://soundadvice.id.au/blog/2006/09/29/%23commonRESTQuestions">google</a>
<a href="http://blogsearch.google.com.au/blogsearch?q=link:http://soundadvice.id.au/blog/2006/09/29/%23commonRESTQuestions">google blogsearch</a>
<a href="http://www.technorati.com/search/http://soundadvice.id.au/blog/2006/09/29/%23commonRESTQuestions">technorati</a>
<a href="http://del.icio.us/url/check?url=http://soundadvice.id.au/blog/2006/09/29/%23commonRESTQuestions">delicious</a>
<br/>
[<a href="http://soundadvice.id.au/blog/general" rel="tag">/general</a>] 
<a href="http://soundadvice.id.au/blog/2006/09/29#commonRESTQuestions" rel="bookmark">permanent link</a>
</p>
</div>


</body>

</html>

