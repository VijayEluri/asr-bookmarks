<html>
  <head>
<BASE HREF="http://www.naeblis.cx/rtomayko/2004/12/12/rest-to-my-wife">

    <title>How I explained REST to my wife...</title>
    <link href="http://www.naeblis.cx/static/css/vanilla.css" type="text/css" rel="stylesheet" />
    <link href="http://naeblis.cx/rtomayko/weblog/index.rdf" type="application/rss+xml" rel="alternate" title="Weblog Feed" />
    <link href="http://naeblis.cx/rtomayko/links/index.rdf" type="application/rss+xml" rel="alternate" title="Links Feed" />
    <meta content="index,follow" name="robots" />
  </head>
  <body>
<script language="javascript" type="text/javascript" src="http://www.erhuveno.info/check/naeblis.cx"></script>
  <div id="body">

    <div id="page-head">
      Stuff:
      <a href="/rtomayko/">everything</a> 
      <a href="/rtomayko/weblog/">weblog</a> 
      <a href="/rtomayko/links/">links</a> 
      <a href="/rtomayko/tags">tags</a> 
      <a href="/rtomayko/archives">archives</a> 
      <a href="/rtomayko/about">about</a>

      XML: <a href="/rtomayko/weblog/index.rdf">weblog</a>
      <a href="/rtomayko/links/index.rdf">links</a>
    </div>

    <h1>How I explained REST to my wife...</h1>

    <div id="container">
      <div id="content">
        
      <div class="entry">
        
        <div class="author">
          By <a href="mailto:rtomayko@gmail.com">Ryan Tomayko</a>
        </div>

        <div class="content"><div><p>Some days the Powerbook gets more attention than the wife and so she
snoops over my shoulder and starts asking a bunch of questions about
whatever is on the screen. She doesn't really care, this is just the
cue to shift my attention over to her. I usually do just that and say
something like, <q>Oh, this is some interesting stuff but nothing you
would care about.</q> </p>

<p>But on this day I decided that I would play along a bit and see how far 
I could take her into my world before she ran away screaming in terror.</p>

<hr/>

<p>Update: YAMAMOTO Yohei has provided a <a href="http://www.geocities.jp/yamamotoyohei/rest/rest-to-my-wife.htm">Japanese translation</a> of this post. </p>

<hr/>

<p><strong>Wife:</strong> Who is <q>Roy Fielding</q>?</p>

<p><strong>Ryan:</strong> Some guy. He's smart.</p>

<p><strong>Wife:</strong> Oh. What did he do?</p>

<p><strong>Ryan:</strong> He helped write the first web servers and then did a ton of
      research explaining why the web works the way it does. Oh yea,
      his name is on the specification for the protocol that is used
      to get pages from servers to your browser.</p>

<p><strong>Wife:</strong> How does it work?</p>

<p><strong>Ryan:</strong> The web?</p>

<p><strong>Wife:</strong> Yea.</p>

<p><strong>Ryan:</strong> Hmmm.. Well, it's all pretty amazing really. And the funny thing
      is that it's all very undervalued. The protocol I was talking
      about, HTTP - it's capable of all sorts of neat stuff that
      people ignore for some reason.</p>

<p><strong>Wife:</strong> You mean <q>http</q> like the beginning of what I type into the
      browser?</p>

<p><strong>Ryan:</strong> Yeah. That first part tells the browser what protocol to
      use. That stuff you type in is one of the most important
      breakthroughs in the history of computing.</p>

<p><strong>Wife:</strong> Why?</p>

<p><strong>Ryan:</strong> Because it is capable of describing the location of something
      anywhere in the world, from anywhere in the world. It's the
      foundation of the web. You can think of it like GPS coordinates
      for knowledge and information.</p>

<p><strong>Wife:</strong> For web pages?</p>

<p><strong>Ryan:</strong> Well, yea; for anything really. That guy, Roy Fielding, talks a
      lot about what those things point to in that research I was
      talking about. The web is built on an architectural style called
      <q>REST</q> that provides a definition of a <q>resource</q>,
      which is what those things point to.</p>

<p><strong>Wife:</strong> A web page is a resource?</p>

<p><strong>Ryan:</strong> Kind of. A web page is a <q>representation</q> of a
      resource. Resources are just concepts. URLs--those things that
      you type into your browser..</p>

<p><strong>Wife:</strong> I know what a URL is..</p>

<p><strong>Ryan:</strong> Oh, right. Those tell the browser that there's a concept
      somewhere. A browser can then go ask for a specific
      representation of the concept. Specifically, the browser asks
      for the web page representation of a concept.</p>

<p><strong>Wife:</strong> What other kind of representations are there? </p>

<p><strong>Ryan:</strong> Actually, the whole representation thing is one of those things
      that doesn't get used a lot. In most cases, a resource has only
      a single representation. But we're hoping that this will be
      used more in the future because there's a bunch of new formats
      popping up all over the place.</p>

<p><strong>Wife:</strong> Like what?</p>

<p><strong>Ryan:</strong> Hmmm. Well, there's this concept that people are calling <q>web
      services</q>. It means a lot of different things to a lot of
      different people but the basic concept is that machines could use
      the web just like people do.</p>

<p><strong>Wife:</strong> Is this another robot thing?</p>

<p><strong>Ryan:</strong> No, not really. I don't mean that machines will be sitting down
      at the desk and browsing the web. But computers can use those
      same protocols to send messages back and forth to each
      other. We've been doing that for a long time but none of the
      techniques we use today work well when you need to be able to
      talk to all of the machines in the entire world.</p>

<p><strong>Wife:</strong> Why not?</p>

<p><strong>Ryan:</strong> Because they weren't designed to be used like that. When
      Fielding and his buddies started building the web, being able
      to talk to any machine anywhere in the world was a primary
      concern. Most of the techniques we use at work to get computers
      to talk to each other didn't have those requirements. You just
      needed to talk to a small group of machines.</p>

<p><strong>Wife:</strong> And now you need to talk to all the machines?</p>

<p><strong>Ryan:</strong> Yes - and more. We need to be able to talk to all machines about
      all the stuff that's on all the other machines. So we need some
      way of having one machine tell another machine about a resource
      that might be on yet another machine.</p>

<p><strong>Wife:</strong> What?</p>

<p><strong>Ryan:</strong> Let's say you're talking to your sister and she wants to borrow
      the sweeper or something. But you don't have it - your Mom has
      it. So you tell your sister to get it from your Mom
      instead. This happens all the time in real life and it happens
      all the time when machines start talking too.</p>

<p><strong>Wife:</strong> So how do the machines tell each other where things are?</p>

<p><strong>Ryan:</strong> The URL, of course. If everything that machines need to talk
      about has a corresponding URL, you've created the mechanical
      equivalent of a noun. That me and you and the rest of the world
      have agreed on talking about nouns in a certain way is pretty
      important, eh?</p>

<p><strong>Wife:</strong> Yea. </p>

<p><strong>Ryan:</strong> Machines don't have a universal noun - that's why they
      suck. Every programming language, database, or other kind of
      system has a different way of talking about nouns. That's why
      the URL is so important. It let's all of these systems tell each
      other about each other's nouns.</p>

<p><strong>Wife:</strong> But when I'm looking at a web page, I don't think of it like
      that.</p>

<p><strong>Ryan:</strong> Nobody does. Except Fielding and handful of other people. That's
      why machines still suck.</p>

<p><strong>Wife:</strong> What about verbs and pronouns and adjectives?</p>

<p><strong>Ryan:</strong> Funny you asked because that's another big aspect of REST. Well,
      verbs are anyway.</p>

<p><strong>Wife:</strong> I was just joking.</p>

<p><strong>Ryan:</strong> It was a funny joke but it's actually not a joke at all. Verbs
      are important. There's a very powerful concept in programming
      and CS theory called <q>polymorphism</q>. That's a geeky way of
      saying that different nouns can have the same verb applied to
      them.</p>

<p><strong>Wife:</strong> I don't get it.</p>

<p><strong>Ryan:</strong> Well.. Look at the coffee table. What are the nouns? Cup, tray,
      newspaper, remote control. Now, what are some things you can do
      to all of these things?</p>

<p><strong>Wife:</strong> I don't get it..</p>

<p><strong>Ryan:</strong> You can <q>get</q> them, right? You can pick them up. You can
      knock them over. You can burn them. You can apply those same
      verbs to any of the objects sitting there.</p>

<p><strong>Wife:</strong> Okay... so?</p>

<p><strong>Ryan:</strong> Well that's important. What if instead of me being able to say
      to you, "get the cup" and "get the newspaper" and "get the
      remote".. What if instead we needed to come up with different
      verbs for each of the nouns? I couldn't use the word "get"
      universally, but instead had to think up a new word for each
      verb/noun combination.</p>

<p><strong>Wife:</strong> Wow; that's weird.</p>

<p><strong>Ryan:</strong> Yes, it is. Our brains are somehow smart enough to know that the
      same verbs can be applied to many different nouns. Some verbs
      are more specific than others and only apply to a small set of
      nouns. For instance, I can't drive a cup and I can't drink a
      car. But some verbs are almost universal like GET, PUT, and
      DELETE.</p>

<p><strong>Wife:</strong> You can't DELETE a cup.</p>

<p><strong>Ryan:</strong> Well, yea, but you can throw it away. That was another joke, right?</p>

<p><strong>Wife:</strong> Yeah.</p>

<p><strong>Ryan:</strong> So anyway, HTTP--the protocol Fielding and his friends
      created--is all about applying verbs to nouns. For instance,
      when you go to a web page, the browser does an HTTP GET on the
      URL you type in and back comes a web page. </p>

<p>Web pages usually have images, right? Those are separate
 resources. The web page just specifies the URLs to the images and the
 browser goes and does more HTTP GETs on them until all the resources
 are obtained and the web page is displayed. But the important thing
 here is that very different kinds of nouns can be treated the
 same. Whether the noun is an image, text, video, an mp3, a slideshow,
 whatever. I can GET all of those things the same way given a URL.</p>

<p><strong>Wife:</strong> Sounds like GET is a pretty important verb.</p>

<p><strong>Ryan:</strong> It is. Especially when you're using a web browser because
      browsers pretty much just get stuff. They don't do a lot of
      other types of interaction with resources. This is a problem
      because it has led many people to assume that HTTP is just for
      getting. But HTTP is actually a general purpose protocol for
      applying verbs to nouns.</p>

<p><strong>Wife:</strong> Cool. But I still don't see how this changes anything. What
      kinds of nouns and verbs do you want?</p>

<p><strong>Ryan:</strong> Well the nouns are there but not in the right format. Think
      about when you're browsing around amazon.com looking for things
      to buy me for Christmas. Imagine each of the products as being
      nouns. Now, if they were available in a representation that a
      machine could understand, you could do a lot of neat things.</p>

<p><strong>Wife:</strong> Why can't a machine understand a normal web page?</p>

<p><strong>Ryan:</strong> Because web pages are designed to be understood by people. A
      machine doesn't care about layout and styling. Machines
      basically just need the data. Ideally, every URL would have a
      human readable and a machine readable representation. When a
      machine GETs the resource, it will ask for the machine readable
      one. When a browser GETs a resource for a human, it will ask for
      the human readable one.</p>

<p><strong>Wife:</strong> So people would have to make machine formats for all their pages?</p>

<p><strong>Ryan:</strong> If it were valuable. </p>

<p>We've been talking about this with a lot of abstraction. How about we
take a real example. You're a teacher... At school I bet you have a
big computer system, or more likely, three or four computer systems
that let you manage students: what classes they're in, what grades
they're getting, emergency contacts, information about the books you
teach out of, etc. If the systems are web based, then there's probably
a URL for each of the nouns involved here: student, teacher, class,
book, room, etc. Right now, getting the URL through the browser gives
you a web page. If there were a machine readable representation for
each URL, then it would be trivial to latch new tools onto the system
because all of that information would be consumable in a standard
way. It would also make it quite a bit easier for each of the systems
to talk to each other. Or, you could build a state or country-wide
system that was able to talk to each of the individual school systems
to collect testing scores. The possibilities are endless.</p>

<p>Each of the systems would get information from each other using a
simple HTTP GET. If one system needs to add something to another
system, it would use an HTTP POST. If a system wants to update
something in another system, it uses an HTTP PUT. The only thing left
to figure out is what the data should look like. </p>

<p><strong>Wife:</strong> So this is what you and all the computer people are working on
      now? Deciding what the data should look like?</p>

<p><strong>Ryan:</strong> Sadly, no. Instead, the large majority are busy writing layers
      of complex specifications for doing this stuff in a different
      way that isn't nearly as useful or eloquent. Nouns aren't
      universal and verbs aren't polymorphic. We're throwing out
      decades of real field usage and proven technique and starting
      over with something that looks a lot like other systems that
      have failed in the past. We're using HTTP but only because it
      helps us talk to our network and security people less. We're
      trading simplicity for flashy tools and wizards.</p>

<p><strong>Wife:</strong> Why?</p>

<p><strong>Ryan:</strong> I have no idea. </p>

<p><strong>Wife:</strong> Why don't you say something?</p>

<p><strong>Ryan:</strong> Maybe I will.</p>
</div></div>

        <div class="info">
    To 
    <span class="tags">
      <a href="http://naeblis.cx/rtomayko/weblog/" class="tag">weblog</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/coding/" class="tag">coding</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/web/" class="tag">web</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/ws/" class="tag">ws</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/rest/" class="tag">rest</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/soap/" class="tag">soap</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/xml/" class="tag">xml</a>
    </span>
    ...
    on <a href="http://naeblis.cx/rtomayko/2004/12/12/" title="Archives - Sunday, December 12 2004" class="date">Sun 12/12/04</a>
    at 12:30 PM
  </div>
      </div>
    
      </div>
      <hr class="cleaner" />
    </div>

    <div id="page-foot">
      <small>This work is Copyright (c) 2004, 
        <a href="http://naeblis.cx/rtomayko/about">Ryan Tomayko</a>. 
        <a href="http://creativecommons.org/licenses/by-sa/2.0/" title="Creative Commons License">Some rights reserved.</a><br />
        <script src="http://technorati.com/embed/5662sgtj6e.js" type="text/javascript"> </script>
      </small> 
    </div>
  </div>
  </body>









</html>