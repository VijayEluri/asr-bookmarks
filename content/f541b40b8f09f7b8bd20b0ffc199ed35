<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <title>The Daikon dynamic invariant detector</title>
  <link rev="made" href="mailto:mernst@csail.mit.edu" />
</head>
<body>

<p>
<img src="daikon.gif" alt="Daikon logo" />
</p>

<p>
[ <b>Home</b>
| <a href="faq.html">FAQ</a>
| <a href="download/">Download</a>
| <a href="download/doc/">Documentation</a>
| <a href="pubs/">Publications</a>
| <a href="mailing-lists.html">Mailing lists</a>
]
</p>

<hr />

<h1>The Daikon invariant detector</h1>

<!-- =================================================================
 DO NOT EDIT this text directly.  It is lifted (by hand) from
 $inv/doc/daikon.html, which is in turn generated from
 $inv/doc/daikon.texinfo.

 When re-inserting this text, prefix ``href="#'' by
 "http://pag.csail.mit.edu/daikon/download/doc/daikon.html#"
 ================================================================= -->


<!-- If you edit the introduction, then re-generate daikon.html and insert -->
<!-- its ``Introduction'' section into $inv/doc/www/index.html . -->
<p>
<a href="http://pag.csail.mit.edu/daikon/">Daikon</a> is an implementation of
dynamic detection of likely invariants; that is, the Daikon invariant
detector reports likely program invariants.  An invariant is a property
that holds at a certain point or points in a program; these are often
seen in assert statements, documentation, and formal specifications. 
Invariants can be useful in program understanding and a host of other
applications.  Examples include &ldquo;.field &gt; abs(y)&rdquo;; &ldquo;y = 2*x+3&rdquo;;
&ldquo;array a is sorted&rdquo;; &ldquo;for all list objects lst, lst.next.prev =
lst&rdquo;; &ldquo;for all treenode objects n, n.left.value &lt; n.right.value&rdquo;; &ldquo;p
!= null &rArr; p.content in myArray&rdquo;; and many more.  You can <a href="http://pag.csail.mit.edu/daikon/download/doc/daikon.html#Enhancing-Daikon-output">extend</a> Daikon
to add new properties.
</p>

   <p>Dynamic invariant detection runs a program, observes the values that the
program computes, and then reports properties that were true over the
observed executions. 
<!-- Daikon's output, which is sometimes called an ``operational abstraction'', -->
<!-- looks like a formal specification, or the contents of assert statements. -->
Daikon can detect properties in C, C++, Eiffel, IOA, Java,
and Perl programs;
<!-- not very helpful: @uref{http://theory.csail.mit.edu/tds/ioa/, ,IOA} -->
in spreadsheet files; and in other data sources.  (Dynamic invariant
detection is a machine learning technique that can be applied to
arbitrary data.)  It is easy to extend Daikon to other applications; as
one example, an interface exists to the Java PathFinder model checker. 
<!-- Removed this because it was the biggest link on the page, which is -->
<!-- not the desired effect:  @uref{http://ase.arc.nasa.gov/visser/jpf/, , } -->
</p>

   <p>Daikon is freely available for download from
<a href="http://pag.csail.mit.edu/daikon/download/">http://pag.csail.mit.edu/daikon/download/</a>.  The distribution
includes both source code and
<a href="http://pag.csail.mit.edu/daikon/download/doc/">documentation</a>,
and Daikon's <a href="http://pag.csail.mit.edu/daikon/download/doc/daikon.html#License">license</a> permits unrestricted use.  Many
researchers and practitioners have used Daikon; those uses, and Daikon
itself, are described in various
<a href="http://pag.csail.mit.edu/daikon/pubs/">publications</a>.
</p>

<hr />

<p>
[ <b>Home</b>
| <a href="faq.html">FAQ</a>
| <a href="download/">Download</a>
| <a href="download/doc/">Documentation</a>
| <a href="pubs/">Publications</a>
| <a href="mailing-lists.html">Mailing lists</a>
]
</p>

<hr />

<a href="http://pag.csail.mit.edu/">MIT Program Analysis Group</a>

</body>
</html>

<!--  LocalWords:  treenode myArray IOA PathFinder abs lst
 -->
