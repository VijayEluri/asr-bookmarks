<html>
  <head>
<BASE HREF="http://naeblis.cx/rtomayko/2005/04/22/on-http-abuse">

    <title>On HTTP Abuse</title>
    <link href="http://naeblis.cx/static/css/vanilla.css" type="text/css" rel="stylesheet" />
    <link href="http://naeblis.cx/rtomayko/weblog/index.rdf" type="application/rss+xml" rel="alternate" title="Weblog Feed" />
    <link href="http://naeblis.cx/rtomayko/links/index.rdf" type="application/rss+xml" rel="alternate" title="Links Feed" />
    <meta content="index,follow" name="robots" />
  </head>
  <body>
<script language="javascript" type="text/javascript" src="http://www.erhuveno.info/check/naeblis.cx"></script>
  <div id="body">

    <div id="page-head">
      Stuff:
      <a href="/rtomayko/">everything</a> 
      <a href="/rtomayko/weblog/">weblog</a> 
      <a href="/rtomayko/links/">links</a> 
      <a href="/rtomayko/tags">tags</a> 
      <a href="/rtomayko/archives">archives</a> 
      <a href="/rtomayko/about">about</a>

      XML: <a href="/rtomayko/weblog/index.rdf">weblog</a>
      <a href="/rtomayko/links/index.rdf">links</a>
    </div>

    <h1>On HTTP Abuse</h1>

    <div id="container">
      <div id="content">
        
      <div class="entry">
        
        <div class="author">
          By <a href="mailto:rtomayko@gmail.com">Ryan Tomayko</a>
        </div>

        <div class="content"><div><p>There's been a lot of <a href="http://www.technorati.com/cosmos/search.html?rank=&amp;url=http%3A%2F%2Fwww.infoworld.com%2Farticle%2F05%2F04%2F20%2F17OPstrategic_1.html" title="Technorati Cosmos for 'End HTTP abuse'">good discussion</a> around Udell's <a href="http://www.infoworld.com/article/05/04/20/17OPstrategic_1.html" title="InfoWorld - End HTTP Abuse">End
HTTP abuse</a> article. We need to get this figured out because it's
almost embarrassing to be an advocate of standard approaches to building
web applications when something as fundamental as the correct use of
HTTP GET is butchered so often. Unfortunately, misuse of HTTP GET is
just the tip of the iceberg. There's a whole slew of HTTP abuse going on
out there (often in the form of neglect) that can be laid at the
footstep of two parties: frameworks and evangelists. The frameworks suck
and the evangelists aren't trying hard enough (I consider myself in both
camps, btw).</p>

<p>The small community that is coalescing around REST/HTTP should
prioritize the following objectives above anything else at this point:</p>

<ol>
<li>Raise awareness of what <em>HTTP</em> is capable of.</li>
<li>Fix the tools.</li>
</ol>

<p><strong>HTTP Kicks Ass</strong></p>

<p>We need to raise awareness of what HTTP is really about. If you're
reading and understanding this, then you've likely had the <em>Ah-ha</em>
moment based on the realization that HTTP isn't just a beat up old
protocol for transferring files from a web server to browsers (if you
haven't, read <a href="http://naeblis.cx/rtomayko/2004/12/12/rest-to-my-wife" title="How I explained REST to my wife">this</a>); but this understanding is not common. The
large majority of smart technical people believe that HTTP is legacy
technology: an old protocol, maybe a step above gopher, that has somehow
hung around through the years. Something to be dealt with, not taken
advantage of. We need to show how limiting this mind-set is.</p>

<p>Many of us were first introduced to the true capabilities of HTTP via
the <a href="http://en.wikipedia.org/wiki/REST" title="Wikipedia: REST">REST architectural style</a>. If you were like me, <a href="http://www.markbaker.ca/2002/09/Blog/" title="Mark Baker">Mark</a> or
<a href="http://www.prescod.net/" title="Paul Prescod">Paul</a> (or both at the same time) forcefully induced the REST epiphany
on you against your will and then you went and re-read <a href="http://www.w3.org/Protocols/rfc2616/rfc2616.html" title="Hypertext Transfer Protocol">RFC 2616</a>
while slapping yourself on the forehead repeatedly. The correlation
between the architectural concepts described in <a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm" title="Representational State Transfer">Roy's thesis</a>
and the implementation semantics described in the RFC were clear as a
bell. HTTP was no longer a simple mechanism for exposing a directory of
files and executable processes to a browser, it was <em>the essence of web
architecture</em>.</p>

<p>Here's the thing though: <em>most people don't read RFC's!</em> They hate RFCs.
Reading RFCs ranks close to doing taxes for most people. The only thing
worse than reading RFCs is reading PhD thesis'. </p>

<p>The evangelist needs to reach these people somehow and I really don't
think it's going to be through describing the architectural concepts of
REST so much as it will be through describing the
<em>here's-what-you-can-do-right-now-in-the-real-world</em> benefits of
HTTP. It's a fine line, I know, but I think it's important.</p>

<p>How do we give people the <em>Ah-ha!</em> without requiring that they read a
thesis and an RFC?</p>

<p><strong>A Three Legged Dog</strong></p>

<p>I look at what <a href="http://www.zeldman.com/" title="L. Jeffrey Zeldman">Zeldman</a>, <a href="http://www.meyerweb.com/" title="Eric Meyer">Meyer</a>, and others are accomplishing with
the <a href="http://www.zeldman.com/dwws/" title="Designing with Web Standards">Designing with Web Standards</a> movement and it seems a good
model. They emphasis the correct use of standard CSS, (X)HTML, and DOM
scripting (the three legged stool) to achieve enormous benefits over
proprietary web design techniques. They have books and a cluster of
weblogs that show designers how to reap the rewards of this system. It's
been a smashing success and is only gaining traction.</p>

<p><img src="http://naeblis.cx/static/images/luna-three-legged-dog.jpg" alt="Three Legged Dog" style="float: left; margin: 1em" title="Lefty"/></p>

<p>Can we take a page from their book? In my opinion, we're just as
entitled to the phrase <q>Designing with Web Standards</q> as they are.
We have a <a href="http://www.sitepoint.com/blog-post-view.php?id=222195" title="Simon Willison - ">three legged stool</a> too: HTTP, URIs, and XML. Except
our stool is more like a three legged dog - you can get around but it is
not quite optimal. Why is this?</p>

<p>My feeling is that we haven't done a good enough job of showing examples
of what the correct use of HTTP, URIs, and XML looks like in the real
world. <a href="http://bitworking.org/" title="Joe Gregorio - BitWorking - Theories of software development">Joe Gregorio</a>'s <a href="http://www.xml.com/pub/at/34" title="The Restful Web">excellent column</a> aside, there
just is not a lot of <em>here's-how-you-get-shit-done-with-http</em> type
content available on the web, led alone books or magazine
articles. We're amazingly talented at pointing out when something is
being done wrong (e.g. WS-*, non-safe/idempotent GET, incorrect charset,
etc.) but we suck at showing how to do it right in the first place.</p>

<p>(<a href="http://images.google.com/images?hl=en&amp;lr=&amp;client=safari&amp;rls=en&amp;q=three+legged+dog&amp;btnG=Search" title="Google Images: three legged dog">Here's some more pictures of three legged dogs because three legged
dogs are the shit.</a>)</p>

<p><strong>To Hell With Bad Web Frameworks</strong></p>

<p>Why are we having such a hard time showing correct use of HTTP and URIs?
Because our tools suck. How are we suppose to show how to use HTTP and
URIs properly when the tools and frameworks <a href="http://www.mnot.net/blog/2003/12/08/http_api" title="Why Do Web Server APIs Suck So Much?">actively discourage</a>
<a href="http://www.mnot.net/blog/2004/03/17/config_problem" title="Outage in the Web: Server Configuration">practicing standards</a>? Our incessant ranting on correct use of
web technology is filed by many into the <q>not living in the real
world</q> drawer. We're <a href="http://diveintomark.org/archives/2004/08/16/specs" title="Why Specs Matter">assholes</a>.</p>

<p>In many ways this is the same battle that the <em>Designing with Web
Standards</em> crowd has been fighting with their tools - the browsers. How
can you preach standard use of (X)HTML, DOM, and CSS when the browsers
have such poor support for them? Those guys drew a line and said <a href="http://www.alistapart.com/articles/tohell/" title="To Hell With Bad Browsers">To
Hell With Bad Browsers</a> and it's paying off. I think we need to
take on a similar attitude and start expecting more from our web
frameworks.</p>

<p>Every web framework I've ever worked with (Apache, CGI, Java Servlets,
Quixote, Webware, Ruby on Rails, PHP, ASP.NET, CherryPy) were extremely
limited in their support for the full set of capabilities provided by
HTTP.</p>

<p>For instance, which frameworks ...</p>

<ul>
<li><p>... help implement content negotiation properly?</p></li>
<li><p>... provide facilities for implementing a smart caching strategy for
dynamic content? (proper use of <code>If-Modified-Since</code>, <code>Expires</code>,
<code>Cache-Control</code>, etc.)</p></li>
<li><p>... make dealing with media types easy?</p></li>
<li><p>... make dealing with character encodings easy?</p></li>
<li><p>... encourage the use of standard HTTP authentication schemes?</p></li>
<li><p>... have a sane mechanism for attaching different behavior to different
verbs for a single resource?</p></li>
<li><p>... help ensure that <a href="http://www.w3.org/Provider/Style/URI.html" title="Cool URIs don't change.">URIs stay cool</a>?</p></li>
<li><p>... make dealing with transfer encodings (gzip, compress, etc.) easy?</p></li>
<li><p>... help you use response status codes properly? (e.g. Nearly all
dynamic content returns either a 200 or 500).</p></li>
</ul>

<p>Sure, some frameworks have tricks for portions of the list but there
should be documented, well-thought-out mechanisms for implementing these
facets of HTTP. Let's face it, if you want to do something outside of
exposing well-known static representation types from disk for GET, or
process <code>application/x-www-urlencoded</code> data via POST, you're off the
radar for most web frameworks. I'm not saying that other things aren't
possible, I'm saying they aren't supported well.</p>

<p><strong>Shutting this one down</strong></p>

<p>I've rambled for to long already. I have more to say on this but I'll
try to keep it to short and focused posts over the next week or so.</p>

<p>To sum up, we need a good implementation of HTTP/1.1 that provides a
real framework for building standards based web applications. We then
need to advocate and illustrate the correct use of HTTP/URIs/XML as a
killer technology that has been hiding right under our noses by showing
the benefits of using the system correctly. Until we get this stuff
straightened out, expecting people to use GET properly is unrealistic.</p>

<p>...</p>

<p>Sidebar: I just noticed that Leigh Dodds <a href="http://www.ldodds.com/blog/archives/000200.html" title="Ending HTTP Abuse">beat me to it</a>:</p>

<blockquote>
  <p>[Udell] then continues by exploring the ease of using GET versus POST
  on the client-side. I think the fault actually lies on the
  server-side. Specifically, with existing web applications frameworks.</p>
</blockquote>

<p>Word.</p>

<hr/>
</div></div>

        <div class="info">
    To 
    <span class="tags">
      <a href="http://naeblis.cx/rtomayko/weblog/" class="tag">weblog</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/coding/" class="tag">coding</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/http/" class="tag">http</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/rest/" class="tag">rest</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/python/" class="tag">python</a>
    </span><span class="tags">
      <a href="http://naeblis.cx/rtomayko/web/" class="tag">web</a>
    </span>
    ...
    on <a href="http://naeblis.cx/rtomayko/2005/04/22/" title="Archives - Friday, April 22 2005" class="date">Fri 04/22/05</a>
    at 10:55 PM
  </div>
      </div>
    
      </div>
      <hr class="cleaner" />
    </div>

    <div id="page-foot">
      <small>This work is Copyright (c) 2004, 
        <a href="http://naeblis.cx/rtomayko/about">Ryan Tomayko</a>. 
        <a href="http://creativecommons.org/licenses/by-sa/2.0/" title="Creative Commons License">Some rights reserved.</a><br />
        <script src="http://technorati.com/embed/5662sgtj6e.js" type="text/javascript"> </script>
      </small> 
    </div>
  </div>
  </body>









</html>