<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<HTML>
<HEAD>
<TITLE>RubyInline</TITLE>
<LINK REV="MADE" HREF="http://www.zenspider.com/Contact.html">
<LINK REL="STYLESHEET" HREF="/style.css" TYPE="text/css" title="/style.css">
<META NAME="rating" CONTENT="general">
<META NAME="GENERATOR" CONTENT="ZenWeb v. 2.18.1 http://www.zenspider.com/ZSS/Products/ZenWeb/">
<STYLE TYPE="text/css">
body { background-color: white }

</STYLE><META NAME="author" CONTENT="Ryan Davis">
<META NAME="copyright" CONTENT="1996-2009, Ryan Davis, Seattle.rb, and Zen Spider Software">
<META NAME="keywords" CONTENT="Zen Spider Software, ZSS, RubyInline, Ruby C Extensions">
<META NAME="description" CONTENT="The quick and easy way to write Ruby C extensions">
<META HTTP-EQUIV="content-type" CONTENT="text/html; charset=utf-8"><meta name="ICBM" content="47.61924, -122.32644773">
<meta name="DC.title" content="RubyInline"><link rel="up" href="/ZSS/Products/index.html" title="Products">
<link rel="contents" href="/SiteMap.html" title="SiteMap">
<link rel="top" href="/index.html" title="Zen Spider Website">
</HEAD>
<BODY>
<P class="navbar">
<A HREF="/SiteMap.html">Sitemap</A> | <A HREF="/Search.html"><EM>Search</EM></A> || <A HREF="/index.html">Zen Spider Website</A>
 / <A HREF="/ZSS/index.html">Zen Spider Software</A>
 / <A HREF="/ZSS/Products/index.html">Products</A>
 / RubyInline</P>
<H1><IMG SRC="/image/logos/zss_text.gif" ALT="zss_text.gif"></H1>
<H2>RubyInline</H2>
<HR CLASS="thick">

<P><A HREF="/ZSS/Products/Download.html">Download</A> | <A HREF="/ZSS/Products/">Products</A> </P>

<H2>Description</H2>

<P>Inline allows you to write foreign code within your ruby code. It
automatically determines if the code in question has changed and
builds it only when necessary. The extensions are then automatically
loaded into the class/module that defines it.</P>

<P>You can even write extra builders that will allow you to write inlined
code in any language. Use Inline::C as a template and look at
Module#inline for the required API.</P>

<H2>Example</H2>

<P>In, 3.x, RubyInline has the ability to do any language, although I don't
support anything but C/C++ out of the box. Here is a basic example of what
RubyInline can do:</P>

<PRE>class MyTest

  def factorial(n)
    f = 1
    n.downto(2) { |x| f *= x }
    f
  end

  inline :C do |builder|
    builder.c "
    long factorial_c(int max) {
      int i=max, result=1;
      while (i &gt;= 2) { result *= i--; }
      return result;
    }"
  end
end</PRE>

<P>The time for 1 million iterations of factorial and factorial_c is 27
and 7 respectively on my PowerBook (you can run 'rake bench' from a RubyInline
tarball on your hardware to get numbers for your platform).</P>

<H2>RubyInline and RubyToC</H2>

<P>I've made advances to <A HREF="http://rubyforge.org/projects/ruby2c">ruby2c on RubyForge</A> that allow me to write 13 lines of code
to create Inline::Ruby. Behold:</P>

<PRE>module Inline
  class Ruby < Inline::C
    def initialize(mod)
      super
    end

    def optimize(meth)
      src = RubyToC.translate(@mod, meth)
      @mod.class_eval "alias :#{meth}_slow :#{meth}"
      @mod.class_eval "remove_method :#{meth}"
      c src
    end
  end
end</PRE>

<P>This allows me to do:</P>

<PRE>require 'inline'
class MyTest

  def factorial(n)
    f = 1
    n.downto(2) { |x| f *= x }
    f
  end

  inline(:Ruby) do |builder|
    builder.optimize :factorial
  end
end</PRE>

<P>And it <em>just works</em>.</P>

<P>Rad.</P>

<H2>Subpages:</H2>

<UL>
  <LI><A HREF="/ZSS/Products/RubyInline/Readme.html">RubyInline: Readme</A></LI>
</UL>
<HR CLASS="thick">

<P class="navbar">
<A HREF="/SiteMap.html">Sitemap</A> | <A HREF="/Search.html"><EM>Search</EM></A> || <A HREF="/index.html">Zen Spider Website</A>
 / <A HREF="/ZSS/index.html">Zen Spider Software</A>
 / <A HREF="/ZSS/Products/index.html">Products</A>
 / RubyInline</P>

<DIV CLASS="footer"><A HREF="/Website/Philosophy.html">"More matter, with less art" - Gertrude, Hamlet.</A><BR>Copyright &copy; 1996-2009 <A HREF="/Contact.html">Ryan Davis</A>, Seattle.rb, &amp; <A HREF="http://www.zenspider.com">Zen Spider Software</A>. All Rights Reserved. <BR> Generated: 2010-01-06 13:49:14</DIV><script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-543579-2";
urchinTracker();
</script>
</BODY>
</HTML>
