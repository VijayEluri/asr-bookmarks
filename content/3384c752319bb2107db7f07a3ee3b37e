<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" >
<head>

<title>Dragon Labs | The Octopus Engine</title>

<meta http-equiv="refresh" content="0;url=http://dragoninteractive.com">



</head>
<body class="articles octopus">

<div id="north"><div class="horizon">

<!-- Header -->

<h1 id="header" class="jellyfish"><span class="null">Dragon Labs - Professional Web Design</span><a href="http://dragon-labs.com" title="Dragon Labs - Professional Web Design">
<img src="../../lib/i/logo_white.jpg" height="89px" width="233px" alt="Dragon Labs Professional Web Design" />
</a></h1>

<!-- Optional Splash -->

<div id="splash">

<!-- Empty -->

</div></div><!-- End Horizon --></div><!-- End North -->

<div id="south"><div class="horizon">

<div id="left">

<!-- Left Column -->

<h1>Demonstrations</h1>

<ul>
<li><a href="#" title="A demonstration of the Octopus Engine - Using Javascript for very clean HTML code.">Shark Demo</a></li>
<li><a href="#" title="Another demonstration - without the Javascript to demonstrate the                                                   necessary HTML tags.">Anemone Demo</a></li>
<li><a href="#" title="A demonstration of using Octopus Engine to create a drop shadow.">Squid Demo</a></li>
</ul>

<h1>Source <a href="#" title="Download all source and files.">Download!</a></h1>

<p>If you like the Octopus Engine, want to use it or just want to mess around, feel free to download the package which contains the HTML, CSS, Javascript and PSD's for all the demos and more!  The Octopus Engine and the included imagepacks are free to use but a link back would be appreciated!</p>

<h1>Related <a href="#" title="The Ultimate Tabbed Menu">OE Expansion!</a></h1>

<p>The Octopus Engine Expansion Pack features an exotic new addon - Jellyfish - which uses transparency and borders to emulte a soft inner shadow.  Also included are a variety of new image packs.</p>



<ul>
<li><a href="http://dragon-labs.com/dreamhost.php" title="Learn more about Dreamhost and Dragon Labs' discounts.">Learn More.</a></li>
</ul>

<script type="text/javascript"><!--
google_ad_client = "pub-1729971683704167";
google_ad_width = 120;
google_ad_height = 240;
google_ad_format = "120x240_as";
google_ad_type = "text_image";
google_ad_channel ="2578760774";
google_color_border = "333333";
google_color_bg = "444444";
google_color_link = "FFCE40";
google_color_url = "6DCFF6";
google_color_text = "AAAAAA";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

</div>

<div id="right">

<!-- Optional Right Column -->

<!-- Empty -->

</div>

<div id="center">

<!-- Center Column -->

<!-- The Octopus Engine -->

<h1>The Octopus Engine <a href="#">Download!</a></h1>

<p>Dragon Labs &amp; Gilbert Hyatt proudly present... The Octopus Engine!</p>

<h2>What is it?</h2>

<p>The Octopus Engine attempts to unify techniques for rounded corners, drop shadows, custom borders and faux columns, all in one pretty package.  It&#8217;s an all-in-one, one in all approach, encompassing whatever effects one needs.</p>

<h2>Pros And Cons</h2>

<p>The advantages of this technique are that you can create custom corners, use repeating borders and scale vertically and horizontally. Unlike most rounded corner or drop shadow techniques, with this you can also do inner glows, or similar effects.  Since this is a true background, the effects can extend underneath the text.</p>

<p>One problem with most similar techniques is that the content cannot start till the corner (which includes the shadow edge) is finished.  This leads to rather abrupt corner shadows, while Octopus Engine lets the transitions be as smooth as they need to.  Also, I would like to point out that though there are other methods out there, most of them are real good.  I am aware of Roger Johansson's superb technique, and actually did try to use it a long time ago for Dragon Labs.  What happened?  It just wasn't suitable for what I needed to do - the content couldn't start from the top without the corners looking very choppy.</p>

<p>The Octopus Engine's elegance lies in the fact that it can be adapted to just about any style and configuration that you want.  It is ultimate in flexibility and the possibilities are endless.  <span>It is also very simple and easy to implement, CSS or web novices should have no trouble.</span></p>

<h1>Demo Pages <a href="shark/" title="The Shark Demo">View</a></h1>

<p>If you want to see what the Octopus Engine can allow you to do, check out the demos, which are also at the end of the article.</p>

<ul>
<li><a href="shark/" title="The Shark Demo">Demo 1</a></li>
<li><a href="anemone/" title="The Anemone Demo">Demo 2</a></li>
<li><a href="squid/" title="The Squid Demo">Demo 3</a></li>
<li><a href="octopus.zip" title="Download the source package - Includes all demos and much much more!">Download</a> </li>
</ul>

<h2>Compatability</h2>
<p>I've tested it in Firefox 1.5, Opera, IE6, IE5 and many others.  I'm pretty sure it works universally but if you see a bug, please <a href="http://dragon-labs.com/contact.php">let me know!</a> </p>

<p>But enough talk!  Let's get to the good stuff..</p>

<h1><span>The HTML</span> Assembling the Exoskeleton</h1>

<p>First we&#8217;re going to set up the HTML required.  We need 8 divs nested around the div which we want to style.  The innermost (9th) div can have automatic dimensions or defined.  The 8 octopus divs wrapping around it will resize to wrap around it, making the effect vertically and horizontally scalable.</p>

<img src="i/compass.png" height="300px" width="299px" alt="Compass Rose" />

<h2>Naming Conventions</h2>
<p>Now we want to name them.  We&#8217;ll use the compass rose to help us here.  The corners will be named northeast (ne), southeast (se), southwest (sw) and northwest (northwest) - respectively clockwise.  (For those of you who don't know your cardinal directions, a simple pnemonic device is "<span>Never Eat Sour Watermelon</span>", going clockwise).  The divs for the sides will be north, south, east and west.  This way it&#8217;ll be a lot easier to relate to which div does what.  We&#8217;ll use classes so that we can reuse the effect on the site.</p>

<pre class="html">
&lt;div class="octopus"&gt;

&lt;div class="north"&gt;
&lt;div class="east"&gt;
&lt;div class="south"&gt;
&lt;div class="west"&gt;
&lt;div class="ne"&gt;
&lt;div class="se"&gt;
&lt;div class="sw"&gt;
&lt;div class="nw"&gt;

<span>Content...</span>

&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/div&gt;
</pre>

<p>Now the order is somewhat important.  We went clockwise just for convention's sake, but it is important that the corners (ne,se,sw..) come after (nested within) the others.  This is because the innermost div comes up on top, and then our precious corners would be covered up!</p>

<p>If you want to use a fixed width or a fixed height, or perhaps a very simple style, you may not need all this markup.  We will go over that in the <a href="#variants">variants</a> at the end of this article.</p>

<h1><span>The Photoshop</span> Drawing the Tentacles</h1>

<p>Here is where you need to use all your creativity and imagination.  I recommend creating the desired effect in Photoshop first.  Blending options can be used for drop shadows and glows.  The Rounded Rectangle tool (U) is good for rounded corners.  Though borders can be done with CSS, you can also make them with Photoshop.  Unless you&#8217;re using web safe colors, the image and browser rendered colors look a little different. </p>
<img src="i/4.png" height="400px" width="400px" alt="Octopus Engine - Sample Box" />
<p>After we&#8217;ve created what we want it to look like, we are ready to slice it up.  The corners should contain all the other effects so that they merge smoothly.  As for the four sides, the pattern repeats so we only need 1 pixel thin slices.  </p>

<p>If you are familiar with slicing, you may skip this minisection.  We use the Slice Tool (K) to create slices, quite unlike the crop tool.  It doesn&#8217;t destroy the rest of the image, but merely divides it.  When you save the file, the slices are each an image of their own.  You can also generate the html which puts all the slices together, with tables or CSS.</p>
<img src="i/2.png" height="400px" width="400px" alt="Octopus Engine - Sliced Box" />

<p>After making a slice, we can right click it and rename it.  When we make one slice, Photoshop automatically makes a few more, to keep things in a grid.  Though it is not necessary, you can edit the extra slices to output no image.  That way, when you save your images for the web, It will only output the 8 images you need.  If not, no big deal.  You will get a few extra junk slices, and the eight which you need.  Feel free to download the PSD, which is already sliced as a sample. </p>

<pre class="photoshop">
<a href="i/7.png"><img src="i/8.png" height="223px" width="300px" alt="Photoshop Slice Options" /></a>
</pre>

<h1><span>The CSS</span> Concocting the Ink</h1>
<p>Now that we have our images, we have to apply them to our HTML by summoning our CSS lore.  This is the crux of the design.</p>

<p>What we&#8217;re going to do is position each image to its appropriate corner.  The divs cascade and create an onion skin, each successive div layered over the others.  You&#8217;ll note that the corners come last.  First we build the four sides, and then patch the edges with our cornerpeices.</p>

<pre class="css">
.north { background: url(north.png) repeat-x top; }
.east { background: url(east.png) repeat-y right; }
.south { background: url(south.png) repeat-x bottom; }
.west { background: url(west.png) repeat-y left; }
.ne { background: url(ne.png) no-repeat top right; }
.se { background: url(se.png) no-repeat bottom right; }
.sw { background: url(sw.png) no-repeat bottom left; }
.nw { background: url(nw.png) no-repeat top left; }
</pre>

<p>That is pretty much all the CSS markup we're going to need.  As you can see, it's very simple.  If necessary, we can add a little padding later on.  The last element that we can style is the innermost div [class="octopus"].  We can make it fixed width, or height.  However, if we want to use a percentage, we have to make the outermost div [class="north"] a percentage value.  That is because a percentage uses its parent element's width, and if applied to the Octopus div, it just wouldn't work. </p>
<p>The <a href="http://www.dragon-labs.com">Dragon Labs</a> homepage uses a minimum and maximum width, along with a percentage value on the north tentacle to scale to the browser viewport.  Now we'll illustrate some examples.</p>

<h1><span>Variants</span> Specialized Specimen From the Labs</h1>
<p>It is possible that some of this is overkill for your purposes.  No problem, taking things out is always easy than adding things.</p>

<h2>Fixed Width</h2>
<p>A fixed width box is much easier because the north and south section and the corners all go into two images, one for the north and one for the south.  Then all is needed is one image, for east and west.  You can have a faux column, specially recommended for the thinner columns, or those with details in the center.  Alternately, you can have a small image repeating for the left and right side, but merged into one and used by using different background-position properties.  Either way, with a fixed width, the design can be reduced to only three images.  </p>

<pre class="html">
&lt;div class="octopus"&gt;

&lt;div class="faux"&gt;
&lt;div class="north"&gt;
&lt;div class="south"&gt;

<span>Your Content Goes Here</span>

&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</pre>

<pre class="css">
.octopus { width: 300px /* Can be any value, as long as it is the same as the image size */

.octopus .faux { background: url(faux.png) repeat-y center; }
.octopus .north { background: url(north.png) repeat-x top; }
.octopus .south { background: url(south.png) repeat-x bottom; }
</pre>

<ul>
<li><a href="otter/">See it in Action</a></li>
</ul>

<h1>Fixed Height</h1>
<p>Though this is a more rare case, a fixed height box would use exactly the same implementation as fixed width, except of course the vertical and horizontal components would be reversed.  </p>

<h2>Drop Shadows</h2>
<p>With a dropshadow applied to the lower right, we only need half the design.  North, West and NW can be discarded.  You want to use a browser safe color for this, though, because we will be aligning HTML borders over the images.  We'll line up the border so that it overlaps the shadow that we have - calibrate it using the padding on div[class="sw"].  This technique is also known as onion skinning.  </p>

<pre class="html">
&lt;div class="octopus"&gt;

&lt;div class="east"&gt;
&lt;div class="south"&gt;
&lt;div class="ne"&gt;
&lt;div class="se"&gt;
&lt;div class="sw"&gt;
&lt;div class="border"&gt;

<span>Your Content Goes Here</span>

&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</pre>

<pre class="css">
.east { background: url(east.png) repeat-y right; }
.south { background: url(south.png) repeat-x bottom; }
.ne { background: url(ne.png) no-repeat top right; }
.se { background: url(se.png) no-repeat bottom right; }
.sw { background: url(sw.png) no-repeat bottom left; padding: 9px;}
.border{ border: 1px solid #acacac; padding: 15px;}
</pre>

<ul>
<li><a href="squid/">See it in Action</a></li>
</ul>
<a href="javascript"></a>

<h1><span>Javascript Magic!</span> Summoning the Divs</h1>

<p>If you are fanatic about having semantically pristine code, and don't want it cluttered with extra divs, you can use Javascript to dynamically add them.  However, one should note that the javascript in this case would amount to more characters (and filesize) than just a few extra divs.  Also, an external javascript file would cause another server request.  Using the extra divs only comes out to around 200 characters.  Therefore, using Javascript only saves filesize if you implement it frequently, .  That said, having clean code is quite important so the javascript is reccomended.  </p>
<p>We'll use the Javascript to add in the 8 (or however many, we'll have one for fixed width and one for drop shadows also) divs.  </p>

<pre class="html">
&lt;div class="octopus"&gt;

<span>Your Content Goes Here</span>

&lt;/div&gt;&lt;
</pre>
<p>Note that the CSS is exactly the same. It is as if the divs were still in HTML, only they are being dynamically added through the use of a javascript function.  I must confess I don't know much about Javascript, so my friend <a href="http://pajaj.sourceforge.net">Gilbert Hyatt</a> set it up for me.  </p>

<pre class="javascript">
function addEvent(obj, evType, fn) {
	if (obj.addEventListener) {
		obj.addEventListener(evType, fn, true);
		return true;
	} else if (obj.attachEvent) {
		var r = obj.attachEvent("on"+evType, fn);
		return r;
	} else {
		return false;
	}
}

function initOctopus() {
	classTree     = new Array(3);
	classTree[0]  = ["north","east","south","west","ne","se","sw","nw"];
	classTree[1]  = ["faux","north","south"];
	classTree[2]  = ["north", "east", "west", "south"];
	classNames    = ['octopus', 'squid', 'swordfish'];
	
	tempdivs = [];
	divs = document.getElementsByTagName('div');
	for (i=0;i&lt;divs.length;i++) {
		for (j=0; j&lt;3; j++) {
			cdiv = divs[i];
			if (cdiv.className.indexOf(classNames[j]) &gt; -1) {
				tempinner = cdiv.innerHTML;
				cdiv.innerHTML = "";
				prevdiv = cdiv;
				for (a=0; a&lt;classTree[j].length; a++) {
					tempdivs[a] = document.createElement('div');
					tempdivs[a].className = classTree[j][a];
					prevdiv.appendChild(tempdivs[a]);
					prevdiv = tempdivs[a];
				}
				prevdiv.innerHTML = tempinner;
			}
		}
	}
}

if (document.getElementById && document.createElement) { addEvent(window, 'load', initOctopus); }

<span>And add this to your header...</span>

&lt;script src="octopus.js" type="text/javascript"&gt;&lt;/script&gt;
</pre>

<p>You can download it at <a href="octopus.js">Octopus.js</a> or get it in the source package, which contains all the javascript, html and psd's.  </p>

<p>The javascript has three parts.  If you have a classname of Octopus, it adds the standard eight divs.  If you have a classname of squid, it uses the 3 div fixed-width variant and 'swordfish' gives the onion skin drop shadows!  Just make sure your CSS is setup correctly!  </p>

<h2><span>Practical Applications &amp; Examples</span> Plunging into the Sea</h2>
<p>Here are a few demos of the Octopus Engine in action!  Additionally, I have created a <a href="octopus.zip">Zip archive</a> with all the source code and PSD's of the demos for your experimentation!  Feel free to use them on your site.  A link back to this article or to my site would be appreciated!</p>

<ul>
<li><a href="shark/" title="The Shark Demo">Demo 1</a></li>
<li><a href="anemone/" title="The Anemone Demo">Demo 2</a></li>
<li><a href="squid/" title="The Squid Demo">Demo 3</a></li>
<li><a href="octopus.zip" title="Download the source package - Includes all demos and much much more!">Download</a> </li>
</ul>

<script type="text/javascript"><!--
google_ad_client = "pub-1729971683704167";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
google_ad_channel ="2578760774";
google_color_border = "333333";
google_color_bg = "444444";
google_color_link = "FFCE40";
google_color_url = "6DCFF6";
google_color_text = "AAAAAA";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

<p>Another article worth reading, which may be better for some of your needs is Roger Johansson's <a href="http://www.456bereastreet.com/archive/200505/transparent_custom_corners_and_borders/" title="Roger's Approach">Transparent custom corners and borders</a>.  It's main advantage is that it supports transparency.  In my method, which uses onion skinning / layering, transparency would break the design.</p>

<h1><span>Discussion</span> &amp; Comments!</h1>
<p>If you want to leave a comment, head on down to my friend Whalesalad's, where we have a commenting system setup...</p>

<ul><li><a href="http://www.whalesalad.com/2006/01/16/octopus-engine/#comments">Comments &amp; Discussion</a></li></ul>

</div></div><!-- End Horizon --></div><!-- End South -->

<div>
<a href="#" id="rss" title="Be notified of updates and new articles! Subscribe to the articles RSS Feed!"><img src="../../lib/i/rss.gif" height="75px" width="75px" alt="RSS" /></a>
</div>

