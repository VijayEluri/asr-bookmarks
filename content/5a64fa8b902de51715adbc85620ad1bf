<!DOCTYPE html>
<html b:version='2' class='v2' dir='ltr'>
<head>
<meta content='IE=EmulateIE7' http-equiv='X-UA-Compatible'/>
<meta content='width=1100' name='viewport'/>
<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'/>
<script type="text/javascript">(function() { var a=window;function c(b){this.t={};this.tick=function(d,i,e){e=e?e:(new Date).getTime();this.t[d]=[e,i]};this.tick("start",null,b)}var f=new c;a.jstiming={Timer:c,load:f};try{var g=null;if(a.chrome&&a.chrome.csi)g=Math.floor(a.chrome.csi().pageT);if(g==null)if(a.gtbExternal)g=a.gtbExternal.pageT();if(g==null)if(a.external)g=a.external.pageT;if(g)a.jstiming.pt=g}catch(h){};a.tickAboveFold=function(b){b=b;var d=0;if(b.offsetParent){do d+=b.offsetTop;while(b=b.offsetParent)}b=d;b<=750&&a.jstiming.load.tick("aft")};var j=false;function k(){if(!j){j=true;a.jstiming.load.tick("firstScrollTime")}}a.addEventListener?a.addEventListener("scroll",k,false):a.attachEvent("onscroll",k);
 })();</script>
<meta content='true' name='MSSmartTagsPreventParsing'/>
<meta content='blogger' name='generator'/>
<link href='http://www.blogger.com/favicon.ico' rel='icon' type='image/vnd.microsoft.icon'/>
<link href='http://www.lexemetech.com/2007/11/consistent-hashing.html' rel='canonical'/>
<link rel="alternate" type="application/atom+xml" title="Tom White - Atom" href="http://www.lexemetech.com/feeds/posts/default" />
<link rel="alternate" type="application/rss+xml" title="Tom White - RSS" href="http://www.lexemetech.com/feeds/posts/default?alt=rss" />
<link rel="service.post" type="application/atom+xml" title="Tom White - Atom" href="http://www.blogger.com/feeds/8898949683610477251/posts/default" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.blogger.com/rsd.g?blogID=8898949683610477251" />
<link rel="alternate" type="application/atom+xml" title="Tom White - Atom" href="http://www.lexemetech.com/feeds/8023602409631923584/comments/default" />
<!--[if IE]><script type="text/javascript" src="http://www.blogger.com/static/v1/jsbin/3168568070-ieretrofit.js"></script>
<![endif]-->
<link rel="image_src" href="http://2.bp.blogspot.com/_IhqEHw4_Ick/Rz9cjSPnAEI/AAAAAAAAAA4/hc2tot8SWVw/s72-c/consistent_hashing_1.png" />
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } })(); </script> <![endif]-->
<title>Tom White: Consistent Hashing</title>
<link type='text/css' rel='stylesheet' href='http://www.blogger.com/static/v1/widgets/3671631648-widget_css_2_bundle.css' />
 <link rel="stylesheet" type="text/css" href="http://www.blogger.com/dyn-css/authorization.css?targetBlogID=8898949683610477251&zx=bd19be8f-7390-4fd6-b1b5-03965f5ed14f"/>
<style type="text/css">#navbar-iframe { display:block }
</style>

<style id='page-skin-1' type='text/css'><!--
/*
-----------------------------------------------
Blogger Template Style
Name:     Simple
Designer: Josh Peterson
URL:      www.noaesthetic.com
----------------------------------------------- */
/* Variable definitions
====================
<Variable name="keycolor" description="Main Color" type="color" default="#66bbdd"/>
<Group description="Page Text" selector="body">
<Variable name="body.font" description="Font" type="font"
default="normal normal 12px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
<Variable name="body.text.color" description="Text Color" type="color" default="#222222"/>
</Group>
<Group description="Backgrounds" selector=".body-fauxcolumns-outer">
<Variable name="body.background.color" description="Outer Background" type="color" default="#66bbdd"/>
<Variable name="content.background.color" description="Main Background" type="color" default="#ffffff"/>
<Variable name="header.background.color" description="Header Background" type="color" default="transparent"/>
</Group>
<Group description="Links" selector=".main-outer">
<Variable name="link.color" description="Link Color" type="color" default="#2288bb"/>
<Variable name="link.visited.color" description="Visited Color" type="color" default="#888888"/>
<Variable name="link.hover.color" description="Hover Color" type="color" default="#33aaff"/>
</Group>
<Group description="Blog Title" selector=".header h1">
<Variable name="header.font" description="Font" type="font"
default="normal normal 60px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
<Variable name="header.text.color" description="Title Color" type="color" default="#3399bb" />
</Group>
<Group description="Blog Description" selector=".header .description">
<Variable name="description.text.color" description="Description Color" type="color"
default="#777777" />
</Group>
<Group description="Tabs Text" selector=".tabs-inner .widget li a">
<Variable name="tabs.font" description="Font" type="font"
default="normal normal 14px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
<Variable name="tabs.text.color" description="Text Color" type="color" default="#999999"/>
<Variable name="tabs.selected.text.color" description="Selected Color" type="color" default="#000000"/>
</Group>
<Group description="Tabs Background" selector=".tabs-outer .PageList">
<Variable name="tabs.background.color" description="Background Color" type="color" default="#f5f5f5"/>
<Variable name="tabs.selected.background.color" description="Selected Color" type="color" default="#eeeeee"/>
</Group>
<Group description="Post Title" selector="h3.post-title, .comments h4">
<Variable name="post.title.font" description="Font" type="font"
default="normal normal 22px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
</Group>
<Group description="Date Header" selector=".date-header">
<Variable name="date.header.color" description="Text Color" type="color"
default="#000000"/>
<Variable name="date.header.background.color" description="Background Color" type="color"
default="transparent"/>
</Group>
<Group description="Post Footer" selector=".post-footer">
<Variable name="post.footer.text.color" description="Text Color" type="color" default="#666666"/>
<Variable name="post.footer.background.color" description="Background Color" type="color"
default="#f9f9f9"/>
<Variable name="post.footer.border.color" description="Shadow Color" type="color" default="#eeeeee"/>
</Group>
<Group description="Gadgets" selector="h2">
<Variable name="widget.title.font" description="Title Font" type="font"
default="normal bold 11px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
<Variable name="widget.title.text.color" description="Title Color" type="color" default="#000000"/>
<Variable name="widget.alternate.text.color" description="Alternate Color" type="color" default="#999999"/>
</Group>
<Group description="Images" selector=".main-inner">
<Variable name="image.background.color" description="Background Color" type="color" default="#ffffff"/>
<Variable name="image.border.color" description="Border Color" type="color" default="#eeeeee"/>
<Variable name="image.text.color" description="Caption Text Color" type="color" default="#000000"/>
</Group>
<Group description="Accents" selector=".content-inner">
<Variable name="body.rule.color" description="Separator Line Color" type="color" default="#eeeeee"/>
<Variable name="tabs.border.color" description="Tabs Border Color" type="color" default="transparent"/>
</Group>
<Variable name="body.background" description="Body Background" type="background"
color="#ffffff" default="$(color) none repeat scroll top left"/>
<Variable name="body.background.override" description="Body Background Override" type="string" default=""/>
<Variable name="body.background.gradient.cap" description="Body Gradient Cap" type="url"
default="url(http://www.blogblog.com/1kt/simple/gradients_light.png)"/>
<Variable name="body.background.gradient.tile" description="Body Gradient Tile" type="url"
default="url(http://www.blogblog.com/1kt/simple/body_gradient_tile_light.png)"/>
<Variable name="content.background.color.selector" description="Content Background Color Selector" type="string" default=".content-inner"/>
<Variable name="content.padding" description="Content Padding" type="length" default="10px"/>
<Variable name="content.padding.horizontal" description="Content Horizontal Padding" type="length" default="10px"/>
<Variable name="content.shadow.spread" description="Content Shadow Spread" type="length" default="40px"/>
<Variable name="content.shadow.spread.webkit" description="Content Shadow Spread (WebKit)" type="length" default="5px"/>
<Variable name="content.shadow.spread.ie" description="Content Shadow Spread (IE)" type="length" default="10px"/>
<Variable name="main.border.width" description="Main Border Width" type="length" default="0"/>
<Variable name="header.background.gradient" description="Header Gradient" type="url" default="none"/>
<Variable name="header.shadow.offset.left" description="Header Shadow Offset Left" type="length" default="-1px"/>
<Variable name="header.shadow.offset.top" description="Header Shadow Offset Top" type="length" default="-1px"/>
<Variable name="header.shadow.spread" description="Header Shadow Spread" type="length" default="1px"/>
<Variable name="header.padding" description="Header Padding" type="length" default="30px"/>
<Variable name="header.border.size" description="Header Border Size" type="length" default="1px"/>
<Variable name="header.bottom.border.size" description="Header Bottom Border Size" type="length" default="1px"/>
<Variable name="header.border.horizontalsize" description="Header Horizontal Border Size" type="length" default="0"/>
<Variable name="description.text.size" description="Description Text Size" type="string" default="140%"/>
<Variable name="tabs.margin.top" description="Tabs Margin Top" type="length" default="0" />
<Variable name="tabs.margin.side" description="Tabs Side Margin" type="length" default="30px" />
<Variable name="tabs.background.gradient" description="Tabs Background Gradient" type="url"
default="url(http://www.blogblog.com/1kt/simple/gradients_light.png)"/>
<Variable name="tabs.border.width" description="Tabs Border Width" type="length" default="1px"/>
<Variable name="tabs.bevel.border.width" description="Tabs Bevel Border Width" type="length" default="1px"/>
<Variable name="date.header.padding" description="Date Header Padding" type="string" default="inherit"/>
<Variable name="date.header.letterspacing" description="Date Header Letter Spacing" type="string" default="inherit"/>
<Variable name="date.header.margin" description="Date Header Margin" type="string" default="inherit"/>
<Variable name="post.margin.bottom" description="Post Bottom Margin" type="length" default="25px"/>
<Variable name="image.border.small.size" description="Image Border Small Size" type="length" default="2px"/>
<Variable name="image.border.large.size" description="Image Border Large Size" type="length" default="5px"/>
<Variable name="page.width.selector" description="Page Width Selector" type="string" default=".region-inner"/>
<Variable name="page.width" description="Page Width" type="string" default="auto"/>
<Variable name="main.section.margin" description="Main Section Margin" type="length" default="15px"/>
<Variable name="main.padding" description="Main Padding" type="length" default="15px"/>
<Variable name="main.padding.top" description="Main Padding Top" type="length" default="30px"/>
<Variable name="main.padding.bottom" description="Main Padding Bottom" type="length" default="30px"/>
<Variable name="paging.background"
color="#ffffff"
description="Background of blog paging area" type="background"
default="transparent none no-repeat scroll top center"/>
<Variable name="footer.bevel" description="Bevel border length of footer" type="length" default="0"/>
<Variable name="startSide" description="Side where text starts in blog language" type="automatic" default="left"/>
<Variable name="endSide" description="Side where text ends in blog language" type="automatic" default="right"/>
*/
/* Content
----------------------------------------------- */
body {
font: normal normal 16px Georgia, Utopia, 'Palatino Linotype', Palatino, serif;
color: #000000;
background: #ffffff none repeat scroll top left;
padding: 0 0 0 0;
}
html body .region-inner {
min-width: 0;
max-width: 100%;
width: auto;
}
a:link {
text-decoration:none;
color: #2288bb;
}
a:visited {
text-decoration:none;
color: #888888;
}
a:hover {
text-decoration:underline;
color: #33aaff;
}
.body-fauxcolumn-outer .fauxcolumn-inner {
background: transparent none repeat scroll top left;
_background-image: none;
}
.body-fauxcolumn-outer .cap-top {
position: absolute;
z-index: 1;
height: 400px;
width: 100%;
background: #ffffff none repeat scroll top left;
}
.body-fauxcolumn-outer .cap-top .cap-left {
width: 100%;
background: transparent none repeat-x scroll top left;
_background-image: none;
}
.content-outer {
-moz-box-shadow: 0 0 0 rgba(0, 0, 0, .15);
-webkit-box-shadow: 0 0 0 rgba(0, 0, 0, .15);
-goog-ms-box-shadow: 0 0 0 #333333;
box-shadow: 0 0 0 rgba(0, 0, 0, .15);
margin-bottom: 1px;
}
.content-inner {
padding: 10px 40px;
}
.content-inner {
background-color: #ffffff;
}
/* Header
----------------------------------------------- */
.header-outer {
background: transparent none repeat-x scroll 0 -400px;
_background-image: none;
}
.Header h1 {
font: normal normal 40px 'Trebuchet MS',Trebuchet,Verdana,sans-serif;
color: #000000;
text-shadow: 0 0 0 rgba(0, 0, 0, .2);
}
.Header h1 a {
color: #000000;
}
.Header .description {
font-size: 18px;
color: #000000;
}
.header-inner .Header .titlewrapper {
padding: 22px 0;
}
.header-inner .Header .descriptionwrapper {
padding: 0 0;
}
/* Tabs
----------------------------------------------- */
.tabs-inner .section:first-child {
border-top: 0 solid #dddddd;
}
.tabs-inner .section:first-child ul {
margin-top: -1px;
border-top: 1px solid #dddddd;
border-left: 1px solid #dddddd;
border-right: 1px solid #dddddd;
}
.tabs-inner .widget ul {
background: transparent none repeat-x scroll 0 -800px;
_background-image: none;
border-bottom: 1px solid #dddddd;
margin-top: 0;
margin-left: -30px;
margin-right: -30px;
}
.tabs-inner .widget li a {
display: inline-block;
padding: .6em 1em;
font: normal normal 16px Georgia, Utopia, 'Palatino Linotype', Palatino, serif;
color: #000000;
border-left: 1px solid #ffffff;
border-right: 1px solid #dddddd;
}
.tabs-inner .widget li:first-child a {
border-left: none;
}
.tabs-inner .widget li.selected a, .tabs-inner .widget li a:hover {
color: #000000;
background-color: #eeeeee;
text-decoration: none;
}
/* Columns
----------------------------------------------- */
.main-outer {
border-top: 0 solid transparent;
}
.fauxcolumn-left-outer .fauxcolumn-inner {
border-right: 1px solid transparent;
}
.fauxcolumn-right-outer .fauxcolumn-inner {
border-left: 1px solid transparent;
}
/* Headings
----------------------------------------------- */
h2 {
margin: 0 0 1em 0;
font: normal bold 11px 'Trebuchet MS',Trebuchet,Verdana,sans-serif;
color: #000000;
text-transform: uppercase;
}
/* Widgets
----------------------------------------------- */
.widget .zippy {
color: #999999;
text-shadow: 2px 2px 1px rgba(0, 0, 0, .1);
}
.widget .popular-posts ul {
list-style: none;
}
/* Posts
----------------------------------------------- */
.date-header span {
background-color: #bbbbbb;
color: #ffffff;
padding: 0.4em;
letter-spacing: 3px;
margin: inherit;
}
.main-inner {
padding-top: 35px;
padding-bottom: 65px;
}
.main-inner .column-center-inner {
padding: 0 0;
}
.main-inner .column-center-inner .section {
margin: 0 1em;
}
.post {
margin: 0 0 45px 0;
}
h3.post-title, .comments h4 {
font: normal normal 22px 'Trebuchet MS',Trebuchet,Verdana,sans-serif;
margin: .75em 0 0;
}
.post-body {
font-size: 110%;
line-height: 1.4;
position: relative;
}
.post-body img, .post-body .tr-caption-container, .Profile img, .Image img,
.BlogList .item-thumbnail img {
padding: 2px;
background: #ffffff;
border: 1px solid #eeeeee;
-moz-box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
-webkit-box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
}
.post-body img, .post-body .tr-caption-container {
padding: 5px;
}
.post-body .tr-caption-container {
color: #000000;
}
.post-body .tr-caption-container img {
padding: 0;
background: transparent;
border: none;
-moz-box-shadow: 0 0 0 rgba(0, 0, 0, .1);
-webkit-box-shadow: 0 0 0 rgba(0, 0, 0, .1);
box-shadow: 0 0 0 rgba(0, 0, 0, .1);
}
.post-header {
margin: 0 0 1.5em;
line-height: 1.6;
font-size: 90%;
}
.post-footer {
margin: 20px -2px 0;
padding: 5px 10px;
color: #666666;
background-color: #eeeeee;
border-bottom: 1px solid #eeeeee;
line-height: 1.6;
font-size: 90%;
}
#comments .comment-author {
padding-top: 1.5em;
border-top: 1px solid transparent;
background-position: 0 1.5em;
}
#comments .comment-author:first-child {
padding-top: 0;
border-top: none;
}
.avatar-image-container {
margin: .2em 0 0;
}
#comments .avatar-image-container img {
border: 1px solid #eeeeee;
}
/* Accents
---------------------------------------------- */
.section-columns td.columns-cell {
border-left: 1px solid transparent;
}
.blog-pager {
background: transparent url(http://www.blogblog.com/1kt/simple/paging_dot.png) repeat-x scroll top center;
}
.blog-pager-older-link, .home-link,
.blog-pager-newer-link {
background-color: #ffffff;
padding: 5px;
}
.footer-outer {
border-top: 1px dashed #bbbbbb;
}
/* Mobile
----------------------------------------------- */
body.mobile  {
padding: 0;
}
.mobile .content-inner {
padding: 0;
}
.mobile .content-outer {
-webkit-box-shadow: 0 0 3px rgba(0, 0, 0, .15);
box-shadow: 0 0 3px rgba(0, 0, 0, .15);
padding: 0 0;
}
body.mobile .AdSense {
margin-left: -0;
}
.mobile .tabs-inner .widget ul {
margin-left: 0;
margin-right: 0;
}
.mobile .post {
margin: 0;
}
.mobile .main-inner .column-center-inner .section {
margin: 0;
}
.mobile .main-inner {
padding-top: 20px;
padding-bottom: 20px;
}
.mobile .main-inner .column-center-inner {
padding: 0;
}
.mobile .date-header span {
padding: 0.4em 10px;
margin: 0 -10px;
}
.mobile h3.post-title {
margin: 0;
}
.mobile .blog-pager {
background: transparent;
}
.mobile .footer-outer {
border-top: none;
}
.mobile .main-inner, .mobile .footer-inner {
background-color: #ffffff;
}
.mobile-link-button {
background-color: #2288bb;
}
.mobile-link-button a:link, .mobile-link-button a:visited {
color: #ffffff;
}
#navbar { display: none; }
--></style>
<style id='template-skin-1' type='text/css'><!--
body {
min-width: 1000px;
}
.content-outer, .content-fauxcolumn-outer, .region-inner {
min-width: 1000px;
max-width: 1000px;
_width: 1000px;
}
.main-inner .columns {
padding-left: 0px;
padding-right: 260px;
}
.main-inner .fauxcolumn-center-outer {
left: 0px;
right: 260px;
/* IE6 does not respect left and right together */
_width: expression(this.parentNode.offsetWidth -
parseInt("0px") -
parseInt("260px") + 'px');
}
.main-inner .fauxcolumn-left-outer {
width: 0px;
}
.main-inner .fauxcolumn-right-outer {
width: 260px;
}
.main-inner .column-left-outer {
width: 0px;
right: 100%;
margin-left: -0px;
}
.main-inner .column-right-outer {
width: 260px;
margin-right: -260px;
}
#layout {
min-width: 0;
}
#layout .content-outer {
min-width: 0;
width: 800px;
}
#layout .region-inner {
min-width: 0;
width: auto;
}
--></style>
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('headEnd');
</script></head>
<body class='loading'>
<div class='navbar section' id='navbar'><div class='widget Navbar' id='Navbar1'><script type="text/javascript">
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener("load",
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent('onload', function(){ object[attribute] = val; });
      }
    }
  </script>
<iframe src="http://www.blogger.com/navbar.g?targetBlogID=8898949683610477251&amp;blogName=Tom+White&amp;publishMode=PUBLISH_MODE_HOSTED&amp;navbarType=LIGHT&amp;layoutType=LAYOUTS&amp;searchRoot=http%3A%2F%2Fwww.lexemetech.com%2Fsearch&amp;blogLocale=en_GB&amp;homepageUrl=http%3A%2F%2Fwww.lexemetech.com%2F&amp;targetPostID=8023602409631923584" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" height="30px" width="100%" id="navbar-iframe" allowtransparency="true" title="Blogger Navigation and Search"></iframe>
<div></div></div></div>
<div class='body-fauxcolumns'>
<div class='fauxcolumn-outer body-fauxcolumn-outer'>
<div class='cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left'>
<div class='fauxborder-right'></div>
<div class='fauxcolumn-inner'>
</div>
</div>
<div class='cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
</div>
<div class='content'>
<div class='content-fauxcolumns'>
<div class='fauxcolumn-outer content-fauxcolumn-outer'>
<div class='cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left'>
<div class='fauxborder-right'></div>
<div class='fauxcolumn-inner'>
</div>
</div>
<div class='cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
</div>
<div class='content-outer'>
<div class='content-cap-top cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left content-fauxborder-left'>
<div class='fauxborder-right content-fauxborder-right'></div>
<div class='content-inner'>
<header>
<div class='header-outer'>
<div class='header-cap-top cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left header-fauxborder-left'>
<div class='fauxborder-right header-fauxborder-right'></div>
<div class='region-inner header-inner'>
<div class='header section' id='header'><div class='widget Header' id='Header1'>
<div id='header-inner'>
<div class='titlewrapper'>
<h1 class='title'>
<a href='http://www.lexemetech.com/'>Tom White</a>
</h1>
</div>
<div class='descriptionwrapper'>
<p class='description'><span><blockquote>Problems worthy of attack prove their worth by hitting back. &#8212;Piet Hein</blockquote></span></p>
</div>
</div>
</div></div>
</div>
</div>
<div class='header-cap-bottom cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
</header>
<div class='tabs-outer'>
<div class='tabs-cap-top cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left tabs-fauxborder-left'>
<div class='fauxborder-right tabs-fauxborder-right'></div>
<div class='region-inner tabs-inner'>
<div class='tabs section' id='crosscol'><div class='widget PageList' id='PageList1'>
<h2>Pages</h2>
<div class='widget-content'>
<ul>
<li><a href='http://www.lexemetech.com/'>Home</a></li>
<li><a href='http://www.lexemetech.com/p/about.html'>About</a></li>
<li><a href='http://www.lexemetech.com/p/writing.html'>Writing</a></li>
</ul>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='http://www.blogger.com/rearrange?blogID=8898949683610477251&widgetType=PageList&widgetId=PageList1&action=editWidget' onclick='return _WidgetManager._PopupConfig(document.getElementById("PageList1"));' target='configPageList1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div></div>
<div class='tabs section' id='crosscol-overflow'></div>
</div>
</div>
<div class='tabs-cap-bottom cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
<div class='main-outer'>
<div class='main-cap-top cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left main-fauxborder-left'>
<div class='fauxborder-right main-fauxborder-right'></div>
<div class='region-inner main-inner'>
<div class='columns fauxcolumns'>
<div class='fauxcolumn-outer fauxcolumn-center-outer'>
<div class='cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left'>
<div class='fauxborder-right'></div>
<div class='fauxcolumn-inner'>
</div>
</div>
<div class='cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
<div class='fauxcolumn-outer fauxcolumn-left-outer'>
<div class='cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left'>
<div class='fauxborder-right'></div>
<div class='fauxcolumn-inner'>
</div>
</div>
<div class='cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
<div class='fauxcolumn-outer fauxcolumn-right-outer'>
<div class='cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left'>
<div class='fauxborder-right'></div>
<div class='fauxcolumn-inner'>
</div>
</div>
<div class='cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
<!-- corrects IE6 width calculation -->
<div class='columns-inner'>
<div class='column-center-outer'>
<div class='column-center-inner'>
<div class='main section' id='main'><div class='widget Blog' id='Blog1'>
<div class='blog-posts hfeed'>
<!-- google_ad_section_start(name=default) -->

          <div class="date-outer">
        
<h2 class='date-header'><span>Tuesday, 27 November 2007</span></h2>

          <div class="date-posts">
        
<div class='post-outer'>
<div class='post hentry'>
<a name='8023602409631923584'></a>
<h3 class='post-title entry-title'>
Consistent Hashing
</h3>
<div class='post-header'>
<div class='post-header-line-1'></div>
</div>
<div class='post-body entry-content'>
I've bumped into consistent hashing a couple of times lately. The paper that introduced the idea (<a href="http://citeseer.ist.psu.edu/karger97consistent.html">Consistent Hashing and Random Trees: Distributed Caching Protocols for Relieving Hot Spots on the World Wide Web</a> by <a href="http://people.csail.mit.edu/karger/">David Karger</a> <i>et al</i>) appeared ten years ago, although recently it seems the idea has quietly been finding its way into more and more services, from Amazon's <a href="http://www.allthingsdistributed.com/2007/10/amazons_dynamo.html">Dynamo</a> to <a href="http://www.danga.com/memcached/">memcached</a> (courtesy of <a href="http://www.last.fm/">Last.fm</a>). So what is consistent hashing and why should you care?<br /><br />The need for consistent hashing arose from limitations experienced while running collections of caching machines - web caches, for example. If you have a collection of <i>n</i> cache machines then a common way of load balancing across them is to put object <i>o</i> in cache machine number <i>hash(o)</i> mod <i>n</i>. This works well until you add or remove cache machines (for whatever reason), for then <i>n</i> changes and <i>every object is hashed to a new location</i>. This can be catastrophic since the originating content servers are swamped with requests from the cache machines. It's as if the cache suddenly disappeared. Which it has, in a sense. (This is why you should care - consistent hashing is needed to avoid swamping your servers!)<br /><br />It would be nice if, when a cache machine was added, it took its fair share of objects from all the other cache machines. Equally, when a cache machine was removed, it would be nice if its objects were shared between the remaining machines. This is exactly what consistent hashing does - <i>consistently</i> maps objects to the same cache machine, as far as is possible, at least.<br /><br />The basic idea behind the consistent hashing algorithm is to hash both objects and caches using the same hash function. The reason to do this is to map the cache to an interval, which will contain a number of object hashes. If the cache is removed then its interval is taken over by a cache with an adjacent interval. All the other caches remain unchanged.<br /><h3>Demonstration</h3>Let's look at this in more detail. The hash function actually maps objects and caches to a number range. This should be familiar to every Java programmer - the <code>hashCode</code> method on <code>Object</code> returns an <code>int</code>, which lies in the range -2<sup>31</sup> to  2<sup>31</sup>-1. Imagine mapping this range into a circle so the values wrap around. Here's a picture of the circle with a number of objects (1, 2, 3, 4) and caches (A, B, C) marked at the points that they hash to (based on a diagram from <a href="http://www8.org/w8-papers/2a-webserver/caching/paper2.html">Web Caching with Consistent Hashing</a> by David Karger <i>et al</i>):<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/_IhqEHw4_Ick/Rz9cjSPnAEI/AAAAAAAAAA4/hc2tot8SWVw/s1600-h/consistent_hashing_1.png"><img style="cursor: pointer;" src="http://2.bp.blogspot.com/_IhqEHw4_Ick/Rz9cjSPnAEI/AAAAAAAAAA4/hc2tot8SWVw/s400/consistent_hashing_1.png" alt="" id="BLOGGER_PHOTO_ID_5133923861488140354" border="0" /></a><br /><br />To find which cache an object goes in, we move clockwise round the circle until we find a cache point. So in the diagram above, we see object 1 and 4 belong in cache A, object 2 belongs in cache B and object 3 belongs in cache C. Consider what happens if cache C is removed: object 3 now belongs in cache A, and all the other object mappings are unchanged. If then another cache D is added in the position marked it will take objects 3 and 4, leaving only object 1 belonging to A.<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/_IhqEHw4_Ick/Rz9cwyPnAFI/AAAAAAAAABA/aW5zxmOIIN0/s1600-h/consistent_hashing_2.png"><img style="cursor: pointer;" src="http://4.bp.blogspot.com/_IhqEHw4_Ick/Rz9cwyPnAFI/AAAAAAAAABA/aW5zxmOIIN0/s400/consistent_hashing_2.png" alt="" id="BLOGGER_PHOTO_ID_5133924093416374354" border="0" /></a><br /><br />This works well, except the size of the intervals assigned to each cache is pretty hit and miss. Since it is essentially random it is possible to have a very non-uniform distribution of objects between caches. The solution to this problem is to introduce the idea of "virtual nodes", which are replicas of cache points in the circle. So whenever we add a cache we create a number of points in the circle for it.<br /><br />You can see the effect of this in the following plot which I produced by simulating storing 10,000 objects in 10 caches using the code described below. On the x-axis is the number of replicas of cache points (with a logarithmic scale). When it is small, we see that the distribution of objects across caches is unbalanced, since the standard deviation as a percentage of the mean number of objects per cache (on the y-axis, also logarithmic) is high. As the number of replicas increases the distribution of objects becomes more balanced. This experiment shows that a figure of one or two hundred replicas achieves an acceptable balance (a standard deviation that is roughly between 5% and 10% of the mean).<br /><br /><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_IhqEHw4_Ick/Rz9daCPnAGI/AAAAAAAAABI/xjtbuG8Knx0/s1600-h/ch-graph.png"><img style="cursor: pointer;" src="http://1.bp.blogspot.com/_IhqEHw4_Ick/Rz9daCPnAGI/AAAAAAAAABI/xjtbuG8Knx0/s400/ch-graph.png" alt="" id="BLOGGER_PHOTO_ID_5133924802085978210" border="0" /></a><br /><h3>Implementation</h3>For completeness here is a simple implementation in Java. In order for consistent hashing to be effective it is important to have a hash function that <a href="http://problemsworthyofattack.blogspot.com/2007/10/mixing-with-md5.html">mixes</a> well. Most implementations of <code>Object</code>'s <code>hashCode</code> do <i>not</i> mix well - for example, they typically produce a restricted number of small integer values - so we have a <code>HashFunction</code> interface to allow a custom hash function to be used. MD5 hashes are recommended here.<br /><br /><pre><br />import java.util.Collection;<br />import java.util.SortedMap;<br />import java.util.TreeMap;<br /><br />public class ConsistentHash&lt;T&gt; {<br /><br />  private final HashFunction hashFunction;<br />  private final int numberOfReplicas;<br />  private final SortedMap&lt;Integer, T&gt; circle =<br />    new TreeMap&lt;Integer, T&gt;();<br /><br />  public ConsistentHash(HashFunction hashFunction,<br />    int numberOfReplicas, Collection&lt;T&gt; nodes) {<br /><br />    this.hashFunction = hashFunction;<br />    this.numberOfReplicas = numberOfReplicas;<br /><br />    for (T node : nodes) {<br />      add(node);<br />    }<br />  }<br /><br />  public void add(T node) {<br />    for (int i = 0; i &lt; numberOfReplicas; i++) {<br />      circle.put(hashFunction.hash(node.toString() + i),<br />        node);<br />    }<br />  }<br /><br />  public void remove(T node) {<br />    for (int i = 0; i &lt; numberOfReplicas; i++) {<br />      circle.remove(hashFunction.hash(node.toString() + i));<br />    }<br />  }<br /><br />  public T get(Object key) {<br />    if (circle.isEmpty()) {<br />      return null;<br />    }<br />    int hash = hashFunction.hash(key);<br />    if (!circle.containsKey(hash)) {<br />      SortedMap&lt;Integer, T&gt; tailMap =<br />        circle.tailMap(hash);<br />      hash = tailMap.isEmpty() ?<br />             circle.firstKey() : tailMap.firstKey();<br />    }<br />    return circle.get(hash);<br />  } <br /><br />}<br /></pre><br /><br />The circle is represented as a sorted map of integers, which represent the hash values, to caches (of type <code>T</code> here).<br />When a <code>ConsistentHash</code> object is created each node is added to the circle map a number of times (controlled by <code>numberOfReplicas</code>). The location of each replica is chosen by hashing the node's name along with a numerical suffix, and the node is stored at each of these points in the map.<br /><br />To find a node for an object (the <code>get</code> method), the <i>hash value of the object</i> is used to look in the map. Most of the time there will not be a node stored at this hash value (since the hash value space is typically much larger than the number of nodes, even with replicas), so the next node is found by looking for the first key in the tail map. If the tail map is empty then we wrap around the circle by getting the first key in the circle.<br /><h3>Usage</h3>So how can you use consistent hashing? You are most likely to meet it in a library, rather than having to code it yourself. For example, as mentioned above, memcached, a distributed memory object caching system, now has clients that support consistent hashing. Last.fm's <a href="http://www.audioscrobbler.net/development/ketama/">ketama</a> by <a href="http://www.last.fm/user/RJ/">Richard Jones</a> was the first, and there is now a <a href="http://bleu.west.spy.net/%7Edustin/projects/memcached/">Java implementation</a> by <a href="http://bleu.west.spy.net/%7Edustin/">Dustin Sallings</a> (which inspired my simplified demonstration implementation above). It is interesting to note that it is only the client that needs to implement the consistent hashing algorithm - the memcached server is unchanged. Other systems that employ consistent hashing include <a href="http://pdos.csail.mit.edu/chord/">Chord</a>, which is a distributed hash table implementation, and Amazon's Dynamo, which is a key-value store (not available outside Amazon).
<div style='clear: both;'></div>
</div>
<div class='post-footer'>
<div class='post-footer-line post-footer-line-1'><span class='post-author vcard'>
Posted by
<span class='fn'>Tom White</span>
</span>
<span class='post-timestamp'>
at
<a class='timestamp-link' href='http://www.lexemetech.com/2007/11/consistent-hashing.html' rel='bookmark' title='permanent link'><abbr class='published' title='2007-11-27T17:26:00Z'>17:26</abbr></a>
</span>
<span class='post-comment-link'>
</span>
<span class='post-icons'>
</span>
<span class='post-backlinks post-comment-link'>
</span>
<div class='post-share-buttons'>
<a class='share-button sb-email' href='http://www.blogger.com/share-post.g?blogID=8898949683610477251&postID=8023602409631923584&target=email' target='_blank' title='Email This'>
<span class='share-button-link-text'>Email This</span></a>
<a class='share-button sb-blog' href='http://www.blogger.com/share-post.g?blogID=8898949683610477251&postID=8023602409631923584&target=blog' onclick='window.open(this.href, "_blank", "height=270,width=475"); return false;' target='_blank' title='BlogThis!'>
<span class='share-button-link-text'>BlogThis!</span></a>
<a class='share-button sb-twitter' href='http://www.blogger.com/share-post.g?blogID=8898949683610477251&postID=8023602409631923584&target=twitter' target='_blank' title='Share to Twitter'>
<span class='share-button-link-text'>Share to Twitter</span></a>
<a class='share-button sb-facebook' href='http://www.blogger.com/share-post.g?blogID=8898949683610477251&postID=8023602409631923584&target=facebook' onclick='window.open(this.href, "_blank", "height=430,width=640"); return false;' target='_blank' title='Share to Facebook'>
<span class='share-button-link-text'>Share to Facebook</span></a>
<a class='share-button sb-buzz' href='http://www.blogger.com/share-post.g?blogID=8898949683610477251&postID=8023602409631923584&target=buzz' onclick='window.open(this.href, "_blank", "height=415,width=690"); return false;' target='_blank' title='Share to Google Buzz'>
<span class='share-button-link-text'>Share to Google Buzz</span></a>
</div>
</div>
<div class='post-footer-line post-footer-line-2'><span class='post-labels'>
Labels:
<a href='http://www.lexemetech.com/search/label/Distributed%20Systems' rel='tag'>Distributed Systems</a>,
<a href='http://www.lexemetech.com/search/label/Hashing' rel='tag'>Hashing</a>
</span>
</div>
<div class='post-footer-line post-footer-line-3'></div>
</div>
</div>
<div class='comments' id='comments'>
<a name='comments'></a>
<h4>
9
comments:
        
</h4>
<div id='Blog1_comments-block-wrapper'>
<dl class='avatar-comment-indent' id='comments-block'>
<dt class='comment-author ' id='c1069786641943117657'>
<a name='c1069786641943117657'></a>
<div class="avatar-image-container avatar-stock"><span dir="ltr"><a href="http://www.blogger.com/profile/02243547846090828073" rel="nofollow" onclick="" class="avatar-hovercard" id="av-0-02243547846090828073"><img src="http://img2.blogblog.com/img/b16-rounded.gif" width="16" height="16" alt="" title="morrita">

</a></span></div>
<a href='http://www.blogger.com/profile/02243547846090828073' rel='nofollow'>morrita</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-1069786641943117657'>
<p>
good article!<BR/>i've made Japanese translation for your article. which is available at <BR/>http://www.hyuki.com/yukiwiki/wiki.cgi?ConsistentHashing .<BR/>if you have any trouble, please let me know.<BR/>thank you for your work.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1196489160000#c1069786641943117657' title='comment permalink'>
1 December 2007 06:06
</a>
<span class='item-control blog-admin pid-1336241331'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=1069786641943117657' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author blog-author' id='c8467255166891635177'>
<a name='c8467255166891635177'></a>
<div class="avatar-image-container vcard"><span dir="ltr"><a href="http://www.blogger.com/profile/02418758537880869494" rel="nofollow" onclick="" class="avatar-hovercard" id="av-1-02418758537880869494"><img src="http://img1.blogblog.com/img/blank.gif" width="35" height="35" alt="" class="delayLoad" style="display: none;" longdesc="http://farm2.static.flickr.com/1358/822201572_051b33f802_s.jpg" title="Tom White">

<noscript><img src="http://farm2.static.flickr.com/1358/822201572_051b33f802_s.jpg" width="35" height="35" class="photo" alt=""></noscript></a></span></div>
<a href='http://www.blogger.com/profile/02418758537880869494' rel='nofollow'>Tom White</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-8467255166891635177'>
<p>
morrita - Glad you enjoyed the post and thanks for the translation! Tom
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1196634360000#c8467255166891635177' title='comment permalink'>
2 December 2007 22:26
</a>
<span class='item-control blog-admin pid-2080114506'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=8467255166891635177' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author ' id='c3303279841149491512'>
<a name='c3303279841149491512'></a>
<div class="avatar-image-container avatar-stock"><span dir="ltr"><a href="http://www.blogger.com/profile/04583770009623026697" rel="nofollow" onclick="" class="avatar-hovercard" id="av-2-04583770009623026697"><img src="http://img2.blogblog.com/img/b16-rounded.gif" width="16" height="16" alt="" title="Marcus">

</a></span></div>
<a href='http://www.blogger.com/profile/04583770009623026697' rel='nofollow'>Marcus</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-3303279841149491512'>
<p>
Cool! I'm as we speak creating a distributed caching and searching system which uses JGroups for membership. The biggest problem I faced was this exact thing. What to do on the member-joined/leaved events and for the system to be able to know at all times to which node to send what command :)<BR/><BR/>The caching system is strictly following the Map (and SortedMap) interface and a bunch of implementations have been implemented. LFU, LRU, MRU, Diskbased B+Tree (jdbm), ehcache wrapper, memcached java client wrapper, hibernate support... <BR/>I like the Map interface since it is quite clean..<BR/><BR/>The impl I'm working on now is a cache/persister which uses HDFS as persistance layer. See how that turns out. The line between a cache and a persistence engine is fine.<BR/><BR/>And of course all caches must be searchable = My own indexer/searcher + Lucene free text index/search, ohh and all must be able to work in a distributed environment.. fuck it is a big task.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1198575420000#c3303279841149491512' title='comment permalink'>
25 December 2007 09:37
</a>
<span class='item-control blog-admin pid-1611302618'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=3303279841149491512' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author ' id='c6711791340793548532'>
<a name='c6711791340793548532'></a>
<div class="avatar-image-container vcard"><span dir="ltr"><a href="http://www.blogger.com/profile/04583770009623026697" rel="nofollow" onclick="" class="avatar-hovercard" id="av-3-04583770009623026697"><img src="http://img1.blogblog.com/img/blank.gif" width="30" height="35" alt="" class="delayLoad" style="display: none;" longdesc="http://profile.ak.facebook.com/profile6/348/36/n665850086_9405.jpg" title="marcusherou">

<noscript><img src="http://profile.ak.facebook.com/profile6/348/36/n665850086_9405.jpg" width="30" height="35" class="photo" alt=""></noscript></a></span></div>
<a href='http://www.blogger.com/profile/04583770009623026697' rel='nofollow'>marcusherou</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-6711791340793548532'>
<p>
Hi. Do you have any clue of how to create an algorithm which tracks the history of joins/leves of members and delivers the same node for the same key if it previously looked it up. Perhaps I'm explaining this in bad terms but something like a (in memory or persistent) database in cojunction with a consistent hash.<BR/><BR/>perhaps:<BR/>public Address getAddress(key)<BR/>{<BR/>if(lookedUpMap.containsKey(key))<BR/>{<BR/>   return (Address)lookedUpMap.get(key)<BR/>}<BR/>else<BR/>{<BR/>  Address a = get(key);<BR/>  lookedUpMap.put(key, a);<BR/>  return a;<BR/>}<BR/>}<BR/><BR/>Then it is up to the client to check if the previously stored node is reachable at this very moment.<BR/><BR/>An extension to this cache would be to return a Set which size is equal to the nr of replicas of each key/value.<BR/><BR/>If a value is stored on two or more nodes then the possibilty for that at least one of the servers is up increases a lot. I'm building a distributed storage solution and the data cannnot be lost just because the cache "recalculates" the hash :)<BR/><BR/>Ahhh enough already I will implement something like this :)
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1199392620000#c6711791340793548532' title='comment permalink'>
3 January 2008 20:37
</a>
<span class='item-control blog-admin pid-1611302618'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=6711791340793548532' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author ' id='c3357863028599908807'>
<a name='c3357863028599908807'></a>
<div class="avatar-image-container avatar-stock"><span dir="ltr"><a href="http://www.blogger.com/profile/16593540948924945828" rel="nofollow" onclick="" class="avatar-hovercard" id="av-4-16593540948924945828"><img src="http://img2.blogblog.com/img/b16-rounded.gif" width="16" height="16" alt="" title="naorei">

</a></span></div>
<a href='http://www.blogger.com/profile/16593540948924945828' rel='nofollow'>naorei</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-3357863028599908807'>
<p>
This site has talks lots about the cache with its advantages, thanks for the topic, it will lots of gain for to the visitors for this site.<BR/><BR/>Naorei<BR/>==============================<BR/>http://community.widecircles.com
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1217303580000#c3357863028599908807' title='comment permalink'>
29 July 2008 04:53
</a>
<span class='item-control blog-admin pid-409810476'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=3357863028599908807' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author ' id='c3647368248946053782'>
<a name='c3647368248946053782'></a>
<div class="avatar-image-container avatar-stock"><span dir="ltr"><a href="http://www.blogger.com/profile/08624945931699192996" rel="nofollow" onclick="" class="avatar-hovercard" id="av-5-08624945931699192996"><img src="http://img2.blogblog.com/img/b16-rounded.gif" width="16" height="16" alt="" title="John Cormie">

</a></span></div>
<a href='http://www.blogger.com/profile/08624945931699192996' rel='nofollow'>John Cormie</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-3647368248946053782'>
<p>
Nice explanation of consistent hashing, but there is a subtle bug in the implementation. The problem is hash collisions. Suppose two different nodes x and y have replicas that hash to the same Integer key in "circle". The sequence of calls "add(x); add(y);" will clobber one of x's replicas, and a later call to remove(y) will clear y's replica from "circle" without restoring x's.<BR/><BR/>One consequence of this bug is that as nodes come and go you may slowly lose replicas. A more serious consequence is that if two clients notice changes to the set of nodes in a different order (very possible in a distributed system), clients will no longer agree on the key to node mapping. For example, suppose nodes x and y have replicas that collide as above, and node x fails around the same time that new (replacement?) node y comes online. In response, suppose that ConsistentHash client A invokes add(y) ... remove(x) and that another client B does the same but in the reverse order. From now on, the set of keys corresponding to the clobbered replica will map to node y at B, while A will map them somewhere else.<BR/><BR/>How likely are collisions? If we model hashing as a random function, expect a collision after only about 2^(32/2) = 65536 insertions with Integer sized keys (http://en.wikipedia.org/wiki/Birthday_paradox#Cast_as_a_collision_problem). If numberOfReplicas is set to the suggested 200 replicas per node, we expect a collision in a system with only 328 nodes.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1233438660000#c3647368248946053782' title='comment permalink'>
31 January 2009 21:51
</a>
<span class='item-control blog-admin pid-1968117006'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=3647368248946053782' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author ' id='c5037717706928339672'>
<a name='c5037717706928339672'></a>
<div class="avatar-image-container avatar-stock"><span dir="ltr"><a href="http://www.blogger.com/profile/04047789008225551019" rel="nofollow" onclick="" class="avatar-hovercard" id="av-6-04047789008225551019"><img src="http://img2.blogblog.com/img/b16-rounded.gif" width="16" height="16" alt="" title="Christophe">

</a></span></div>
<a href='http://www.blogger.com/profile/04047789008225551019' rel='nofollow'>Christophe</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-5037717706928339672'>
<p>
I have written a small test app that tells me how many nodes should be relocated in the event of a node addition, by comparing the same dataset over 2 hashsets.<br /><br />It consistently reports that nearly all nodes should be moved ... am I doing something wrong ?<br /><br />http://pastebin.com/f459047ef
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1243730420304#c5037717706928339672' title='comment permalink'>
31 May 2009 01:40
</a>
<span class='item-control blog-admin pid-913980725'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=5037717706928339672' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author ' id='c7215463307389243509'>
<a name='c7215463307389243509'></a>
<div class="avatar-image-container avatar-stock"><span dir="ltr"><a href="http://www.blogger.com/profile/02319823684371410986" rel="nofollow" onclick="" class="avatar-hovercard" id="av-7-02319823684371410986"><img src="http://img2.blogblog.com/img/b16-rounded.gif" width="16" height="16" alt="" title="chingju">

</a></span></div>
<a href='http://www.blogger.com/profile/02319823684371410986' rel='nofollow'>chingju</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-7215463307389243509'>
<p>
great article, and the japanese translation from morrita is cool!!!
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1253326784453#c7215463307389243509' title='comment permalink'>
19 September 2009 03:19
</a>
<span class='item-control blog-admin pid-1025686407'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=7215463307389243509' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author ' id='c6607541574444880783'>
<a name='c6607541574444880783'></a>
<div class="avatar-image-container avatar-stock"><span dir="ltr"><img src="http://img1.blogblog.com/img/blank.gif" width="16" height="16" alt="" title="Danny">

</span></div>
Danny
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-6607541574444880783'>
<p>
In response to John Cormie about the collisions:<br /><br />All you need is a list of node as the value paired for the hash, in the circle,<br />and a comparator for the nodes that cannot return 0.<br /><br />When 2 nodes collide to a same hash, put them both in the list, in ascending order. The &quot;smaller&quot; node is first and has precedence. When you remove a node, you make sure to remove the right one from the list and leave the other alone.<br /><br />This is a good time to drop the generics and us an object in the circle values (node vs single-linked-list of nodes), to save some memory.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://www.lexemetech.com/2007/11/consistent-hashing.html?showComment=1267152674943#c6607541574444880783' title='comment permalink'>
26 February 2010 02:51
</a>
<span class='item-control blog-admin pid-229220533'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8898949683610477251&postID=6607541574444880783' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
</dl>
</div>
<p class='comment-footer'>
<a href='https://www.blogger.com/comment.g?blogID=8898949683610477251&postID=8023602409631923584' onclick=''>Post a Comment</a>
</p>
<div id='backlinks-container'>
<div id='Blog1_backlinks-container'>
<a name='links'></a><h4>
</h4>
<p class='comment-footer'>
<a class='comment-link' href='' id='Blog1_backlinks-create-link' target='_blank'>
</a>
</p>
</div>
</div>
</div>
</div>
<div id="latency-8023602409631923584"></div><script type="text/javascript">if (window['tickAboveFold']) {window['tickAboveFold'](document.getElementById("latency-8023602409631923584")); } </script>

        </div></div>
      
<!-- google_ad_section_end -->
</div>
<div class='blog-pager' id='blog-pager'>
<span id='blog-pager-newer-link'>
<a class='blog-pager-newer-link' href='http://www.lexemetech.com/2007/11/eels-in-many-worlds.html' id='Blog1_blog-pager-newer-link' title='Newer Post'>Newer Post</a>
</span>
<span id='blog-pager-older-link'>
<a class='blog-pager-older-link' href='http://www.lexemetech.com/2007/11/back-on-net.html' id='Blog1_blog-pager-older-link' title='Older Post'>Older Post</a>
</span>
<a class='home-link' href='http://www.lexemetech.com/'>Home</a>
</div>
<div class='clear'></div>
<div class='post-feeds'>
<div class='feed-links'>
Subscribe to:
<a class='feed-link' href='http://www.lexemetech.com/feeds/8023602409631923584/comments/default' target='_blank' type='application/atom+xml'>Post Comments (Atom)</a>
</div>
</div>
</div></div>
</div>
</div>
<div class='column-left-outer'>
<div class='column-left-inner'>
<aside>
</aside>
</div>
</div>
<div class='column-right-outer'>
<div class='column-right-inner'>
<aside>
<div class='sidebar section' id='sidebar-right-1'><div class='widget BlogArchive' id='BlogArchive1'>
<h2>Blog Archive</h2>
<div class='widget-content'>
<div id='ArchiveList'>
<div id='BlogArchive1_ArchiveList'>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/search?updated-min=2010-01-01T00%3A00%3A00Z&updated-max=2011-01-01T00%3A00%3A00Z&max-results=1'>2010</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2010_11_01_archive.html'>November</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2010/11/my-favourite-talk-at-devoxx-2010.html'>My favourite talk at Devoxx 2010</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/search?updated-min=2009-01-01T00%3A00%3A00Z&updated-max=2010-01-01T00%3A00%3A00Z&max-results=2'>2009</a>
<span class='post-count' dir='ltr'>(2)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2009_05_01_archive.html'>May</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2009/05/hadoop-definitive-guide-coming-soon.html'>&quot;Hadoop: The Definitive Guide&quot; Coming Soon</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2009_01_01_archive.html'>January</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2009/01/draft-pig-chapter.html'>Draft Pig Chapter</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/search?updated-min=2008-01-01T00%3A00%3A00Z&updated-max=2009-01-01T00%3A00%3A00Z&max-results=24'>2008</a>
<span class='post-count' dir='ltr'>(24)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_11_01_archive.html'>November</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/11/hadoop-developer-zeitgeist.html'>Hadoop Developer Zeitgeist</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_10_01_archive.html'>October</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/10/cloudera.html'>Cloudera</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_09_01_archive.html'>September</a>
<span class='post-count' dir='ltr'>(2)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/09/hadoop-definitive-guide.html'>Hadoop: The Definitive Guide</a></li>
<li><a href='http://www.lexemetech.com/2008/09/hosting-large-public-datasets-on-amazon.html'>Hosting Large Public Datasets on Amazon S3</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_08_01_archive.html'>August</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/08/elastic-hadoop-clusters-with-amazons.html'>Elastic Hadoop Clusters with Amazon&#39;s Elastic Bloc...</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_07_01_archive.html'>July</a>
<span class='post-count' dir='ltr'>(3)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/07/pluggable-hadoop.html'>Pluggable Hadoop</a></li>
<li><a href='http://www.lexemetech.com/2008/07/rpc-and-serialization-with-hadoop.html'>RPC and Serialization with Hadoop, Thrift, and Pro...</a></li>
<li><a href='http://www.lexemetech.com/2008/07/hadoop-beats-terabyte-sort-record.html'>Hadoop beats terabyte sort record</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_06_01_archive.html'>June</a>
<span class='post-count' dir='ltr'>(2)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/06/hadoop-query-languages.html'>Hadoop Query Languages</a></li>
<li><a href='http://www.lexemetech.com/2008/05/next-big-thing.html'>&quot;The Next Big Thing&quot;</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_05_01_archive.html'>May</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/05/bluetooth-castle.html'>Bluetooth Castle</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_04_01_archive.html'>April</a>
<span class='post-count' dir='ltr'>(2)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/04/portable-cloud-computing.html'>Portable Cloud Computing</a></li>
<li><a href='http://www.lexemetech.com/2008/04/hadoop-at-apachecon-europe.html'>Hadoop at ApacheCon Europe</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_03_01_archive.html'>March</a>
<span class='post-count' dir='ltr'>(5)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/03/turn-off-lights-when-youre-not-using.html'>Turn off the lights when you&#39;re not using them, pl...</a></li>
<li><a href='http://www.lexemetech.com/2008/03/visualizing-easter.html'>Visualizing Easter</a></li>
<li><a href='http://www.lexemetech.com/2008/03/learning-mapreduce.html'>Learning MapReduce</a></li>
<li><a href='http://www.lexemetech.com/2008/03/disks-have-become-tapes.html'>&quot;Disks have become tapes&quot;</a></li>
<li><a href='http://www.lexemetech.com/2008/03/mapreduce-without-reduce.html'>MapReduce without the Reduce</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_02_01_archive.html'>February</a>
<span class='post-count' dir='ltr'>(2)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/02/forgotten-ec2-instances.html'>Forgotten EC2 instances</a></li>
<li><a href='http://www.lexemetech.com/2008/02/apache-incubator-proposal-for-thrift.html'>Apache Incubator Proposal for Thrift</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2008_01_01_archive.html'>January</a>
<span class='post-count' dir='ltr'>(4)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2008/01/hadoop-and-log-file-analysis.html'>Hadoop and Log File Analysis</a></li>
<li><a href='http://www.lexemetech.com/2008/01/hadoop-is-now-apache-top-level-project.html'>Hadoop is now an Apache Top Level Project</a></li>
<li><a href='http://www.lexemetech.com/2008/01/mapreduce-map-reduce-mapreduce-or-map.html'>MapReduce, Map Reduce, Map/Reduce or Map-Reduce?</a></li>
<li><a href='http://www.lexemetech.com/2008/01/casual-large-scale-data-processing.html'>Casual Large Scale Data Processing</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate expanded'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy toggle-open'>&#9660;&#160;</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/search?updated-min=2007-01-01T00%3A00%3A00Z&updated-max=2008-01-01T00%3A00%3A00Z&max-results=19'>2007</a>
<span class='post-count' dir='ltr'>(19)</span>
<ul class='hierarchy'>
<li class='archivedate expanded'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy toggle-open'>&#9660;&#160;</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2007_11_01_archive.html'>November</a>
<span class='post-count' dir='ltr'>(3)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2007/11/eels-in-many-worlds.html'>Eels in Many Worlds</a></li>
<li><a href='http://www.lexemetech.com/2007/11/consistent-hashing.html'>Consistent Hashing</a></li>
<li><a href='http://www.lexemetech.com/2007/11/back-on-net.html'>Back on the net</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2007_10_01_archive.html'>October</a>
<span class='post-count' dir='ltr'>(4)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2007/10/mixing-with-md5.html'>Mixing with MD5</a></li>
<li><a href='http://www.lexemetech.com/2007/10/moved-to-wales.html'>Moved to Wales</a></li>
<li><a href='http://www.lexemetech.com/2007/10/moving-to-wales.html'>Moving to Wales</a></li>
<li><a href='http://www.lexemetech.com/2007/10/zero-width-negative-lookbehind.html'>Zero-width Negative Lookbehind</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2007_09_01_archive.html'>September</a>
<span class='post-count' dir='ltr'>(5)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2007/09/java-servlet-for-thrift.html'>A Java Servlet for Thrift</a></li>
<li><a href='http://www.lexemetech.com/2007/09/lucene-layer-cake.html'>Lucene Layer Cake</a></li>
<li><a href='http://www.lexemetech.com/2007/09/debugging-with-xstream.html'>Debugging with XStream</a></li>
<li><a href='http://www.lexemetech.com/2007/09/ohlohs-visualizations.html'>Ohloh&#39;s Visualizations</a></li>
<li><a href='http://www.lexemetech.com/2007/09/restful-web-services.html'>RESTful Web Services</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2007_08_01_archive.html'>August</a>
<span class='post-count' dir='ltr'>(2)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2007/08/two-weeks-off-net.html'>Two weeks off the net</a></li>
<li><a href='http://www.lexemetech.com/2007/08/tim-oreilly-on-hadoop.html'>Tim O&#39;Reilly on Hadoop</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.lexemetech.com/2007_07_01_archive.html'>July</a>
<span class='post-count' dir='ltr'>(5)</span>
<ul class='posts'>
<li><a href='http://www.lexemetech.com/2007/07/hadoop-at-oscon-2007.html'>Hadoop at OSCON 2007</a></li>
<li><a href='http://www.lexemetech.com/2007/07/junit-gets-flexible-and-philisophical.html'>JUnit gets flexible and philisophical</a></li>
<li><a href='http://www.lexemetech.com/2007/07/articles-and-blogs.html'>Articles and blogs</a></li>
<li><a href='http://www.lexemetech.com/2007/07/why-are-there-no-amazon-s3ec2.html'>Why are there no Amazon S3/EC2 competitors?</a></li>
<li><a href='http://www.lexemetech.com/2007/07/hadoop-development-steadily-rising.html'>Hadoop Development Steadily Rising</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='http://www.blogger.com/rearrange?blogID=8898949683610477251&widgetType=BlogArchive&widgetId=BlogArchive1&action=editWidget' onclick='return _WidgetManager._PopupConfig(document.getElementById("BlogArchive1"));' target='configBlogArchive1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div></div>
</aside>
</div>
</div>
</div>
<div style='clear: both'></div>
<!-- columns -->
</div>
<!-- main -->
</div>
</div>
<div class='main-cap-bottom cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
<footer>
<div class='footer-outer'>
<div class='footer-cap-top cap-top'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
<div class='fauxborder-left footer-fauxborder-left'>
<div class='fauxborder-right footer-fauxborder-right'></div>
<div class='region-inner footer-inner'>
<div class='foot section' id='footer-1'><div class='widget HTML' id='HTML1'>
<div class='widget-content'>
<p>
<div style="float:left; font-size:40px">Tom White</div>
<div style="float:right"><a href="http://www.lexemetech.com/p/about.html">About</a>, <a href="http://www.lexemetech.com/p/writing.html">Writing</a>, <a href="#">Archive</a></div>
</p>
<div class="clear"/>
<blockquote>Problems worthy of attack prove their worth by hitting back. &#8212;Piet Hein</blockquote></div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='http://www.blogger.com/rearrange?blogID=8898949683610477251&widgetType=HTML&widgetId=HTML1&action=editWidget' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML1"));' target='configHTML1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div></div>
<table border='0' cellpadding='0' cellspacing='0' class='section-columns columns-2'>
<tbody>
<tr>
<td class='first columns-cell'>
<div class='foot section' id='footer-2-1'></div>
</td>
<td class='columns-cell'>
<div class='foot section' id='footer-2-2'></div>
</td>
</tr>
</tbody>
</table>
<!-- outside of the include in order to lock Attribution widget -->
<div class='foot section' id='footer-3'><div class='widget Attribution' id='Attribution1'>
<div class='widget-content' style='text-align: center;'>
}Simple template. Powered by <a href='http://www.blogger.com' target='_blank'>Blogger</a>.
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='http://www.blogger.com/rearrange?blogID=8898949683610477251&widgetType=Attribution&widgetId=Attribution1&action=editWidget' onclick='return _WidgetManager._PopupConfig(document.getElementById("Attribution1"));' target='configAttribution1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div></div>
</div>
</div>
<div class='footer-cap-bottom cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
</footer>
<!-- content -->
</div>
</div>
<div class='content-cap-bottom cap-bottom'>
<div class='cap-left'></div>
<div class='cap-right'></div>
</div>
</div>
</div>
<script type='text/javascript'>
    window.setTimeout(function() {
        document.body.className = document.body.className.replace('loading', '');
      }, 10);
  </script>
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('widgetJsBefore');
</script><script type="text/javascript" src="http://www.blogger.com/static/v1/widgets/512629240-widgets.js"></script>
<script type='text/javascript'>
if (typeof(BLOG_attachCsiOnload) != 'undefined' && BLOG_attachCsiOnload != null) { window['blogger_templates_experiment_id'] = "templatesV2";window['blogger_blog_id'] = '8898949683610477251';BLOG_attachCsiOnload('item_'); }_WidgetManager._Init('http://www.blogger.com/rearrange?blogID=8898949683610477251','http://www.lexemetech.com/2007/11/consistent-hashing.html','8898949683610477251');
_WidgetManager._SetPageActionUrl('http://www.blogger.com/display?blogID=8898949683610477251','z-lxe8EW7mD_S6RXXhGasjNh3Kw:1292617864623','AOuZoY7dS3MfbSbskpBPfDFElED2k9m70A:1292617864623');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'title': 'Tom White', 'pageType': 'item', 'url': 'http://www.lexemetech.com/2007/11/consistent-hashing.html', 'canonicalUrl': 'http://www.lexemetech.com/2007/11/consistent-hashing.html', 'homepageUrl': 'http://www.lexemetech.com/', 'enabledCommentProfileImages': true, 'searchLabel': '', 'searchQuery': '', 'pageName': 'Consistent Hashing', 'pageTitle': 'Tom White: Consistent Hashing', 'encoding': 'UTF-8', 'locale': 'en-GB', 'isPrivate': false, 'isMobile': false, 'mobileClass': '', 'languageDirection': 'ltr', 'feedLinks': '\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Tom White - Atom\42 href\75\42http://www.lexemetech.com/feeds/posts/default\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/rss+xml\42 title\75\42Tom White - RSS\42 href\75\42http://www.lexemetech.com/feeds/posts/default?alt\75rss\42 /\76\n\74link rel\75\42service.post\42 type\75\42application/atom+xml\42 title\75\42Tom White - Atom\42 href\75\42http://www.blogger.com/feeds/8898949683610477251/posts/default\42 /\76\n\74link rel\75\42EditURI\42 type\75\42application/rsd+xml\42 title\75\42RSD\42 href\75\42http://www.blogger.com/rsd.g?blogID\758898949683610477251\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Tom White - Atom\42 href\75\42http://www.lexemetech.com/feeds/8023602409631923584/comments/default\42 /\76\n', 'meTag': '', 'openIdOpTag': '', 'imageSrcTag': '\74link rel\75\42image_src\42 href\75\42http://2.bp.blogspot.com/_IhqEHw4_Ick/Rz9cjSPnAEI/AAAAAAAAAA4/hc2tot8SWVw/s72-c/consistent_hashing_1.png\42 /\76\n', 'latencyHeadScript': '\74script type\75\42text/javascript\42\76(function() { var a\75window;function c(b){this.t\75{};this.tick\75function(d,i,e){e\75e?e:(new Date).getTime();this.t[d]\75[e,i]};this.tick(\42start\42,null,b)}var f\75new c;a.jstiming\75{Timer:c,load:f};try{var g\75null;if(a.chrome\46\46a.chrome.csi)g\75Math.floor(a.chrome.csi().pageT);if(g\75\75null)if(a.gtbExternal)g\75a.gtbExternal.pageT();if(g\75\75null)if(a.external)g\75a.external.pageT;if(g)a.jstiming.pt\75g}catch(h){};a.tickAboveFold\75function(b){b\75b;var d\0750;if(b.offsetParent){do d+\75b.offsetTop;while(b\75b.offsetParent)}b\75d;b\74\075750\46\46a.jstiming.load.tick(\42aft\42)};var j\75false;function k(){if(!j){j\75true;a.jstiming.load.tick(\42firstScrollTime\42)}}a.addEventListener?a.addEventListener(\42scroll\42,k,false):a.attachEvent(\42onscroll\42,k);\n })();\74/script\076', 'mobileHeadScript': '', 'ieCssRetrofitLinks': '\74!--[if IE]\76\74script type\75\42text/javascript\42 src\75\42http://www.blogger.com/static/v1/jsbin/3168568070-ieretrofit.js\42\76\74/script\76\n\74![endif]--\076'}}]);
_WidgetManager._RegisterWidget('_PageListView', new _WidgetInfo('PageList1', 'crosscol', null, document.getElementById('PageList1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogArchiveView', new _WidgetInfo('BlogArchive1', 'sidebar-right-1', null, document.getElementById('BlogArchive1'), {'languageDirection': 'ltr'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_AttributionView', new _WidgetInfo('Attribution1', 'footer-3', null, document.getElementById('Attribution1'), {'attribution': '}Simple template. Powered by \74a href\75\47http://www.blogger.com\47 target\75\47_blank\47\76Blogger\74/a\76.'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML1', 'footer-1', null, document.getElementById('HTML1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header'));
_WidgetManager._RegisterWidget('_NavbarView', new _WidgetInfo('Navbar1', 'navbar'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false, 'commentInteractionIframeUrl': 'http://www.blogger.com/comment-interaction-iframe.g?blogId\758898949683610477251', 'showBacklinks': true, 'postId': '8023602409631923584', 'mobile': false}, 'displayModeFull'));
</script>
</body>
</html>