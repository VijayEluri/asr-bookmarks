<html>
<head>
  <title>Jay Fields' Thoughts</title>
  <style type="text/css">
  body{margin:0px;padding:0px;font:0.9em "Trebuchet MS",Trebuchet,Verdana,Sans-Serif;}
  a{color:darkgreen;}
  a:hover{color:darkblue;}
  #logo{padding:0px;margin:0px;}
  div#mainClm{float:right;padding:13px 20px 10px 10px;width:80%;}
  div#sideBar{margin:0px 1em 0px 0px;padding:0px 0px 0px 15px;text-align:left;}
  #header{padding:0px 0px 0px 0px;margin:0px 0px 0px 0px;border-bottom:solid 1px #eeeeee;background:#FFFFFF;color:lightblue;}
  h1,h2,h3,h4,h5,h6{padding:0px;margin:0px;}
  h1 a{text-decoration:none;color:#darkgreen;}
  h1{padding:0px 0px 10px 3%;margin:10px 10px 10px 10px;color:#999999;background:#FFFFFF;font:bold 266% Verdana,Sans-Serif;}
  h2{margin:0px 0px 10px 0px;padding:2px 0px 2px 5px;border-bottom:dotted 1px #222222;border-top:dotted 1px #222222;background:#eeeeee;font:bold 110% Verdana,Sans-Serif;}
  h3{margin:10px 0px 0px 0px;padding:0px 0px 0px 2%;color:#777777;font-size:90%;text-align:left;}
  h4{color:#aa0033;}
  h6{color:green;font:bold 125% Verdana,Sans-Serif;}
  h2.sidebar-title{margin:0px;color:#FF4500;font:bold 125% Verdana,Sans-Serif;padding:0px;border:none;background:#ffffff;}
  #sideBar ul{margin:0px 0px 33px 0px;padding:0px 0px 0px 0px;list-style-type:none;font-size:95%;}
  #sideBar li{margin:0px 0px 0px 0px;padding:0px 0px 0px 0px;list-style-type:none;font-size:105%;}
  #description{padding:0px 0px 0px 5%;margin:0px;color:#777777;background:transparent;font:bold 85% Verdana,Sans-Serif;}
  .blogPost{margin:0px 6px 30px 5px;font-size:100%;}
  .blogPost strong{color:#000000;font-weight:bold;}
  #sideBar ul a{padding:2px;margin:1px;width:100%;border:none;color:#777777;text-decoration:none;}
  #sideBar ul a:hover{color:darkgreen;text-decoration:none;}
  pre,code{font-size:14px}
  pre{padding:0 0 0 20px}
  strike{color:#999999;}
  .bug{padding:5px;border:0px;}
  .byline{padding:0px;margin:0px;color:#222222;font-size:80%;}
  .byline a{border:none;color:darkgreen;text-decoration:none;}
  .byline a:hover{text-decoration:underline;}
  .blogComments{padding:2px 0px 2px 5px;color:#555555;font-size:1.2em;font-weight:bold;font-family:Verdana,Sans-Serif;}
  .blogComment{margin-top:10px;font-size:80%;font-weight:normal;color:#333333;}
  .blogComments .byline{padding:0px;margin-bottom:20px;color:#444444;font-size:80%;font-weight:normal;display:inline;margin-right:10px}
  .deleted-comment {font-style:italic;color:gray;}
  #profile-container { }
  .profile-datablock {text-align:justify;}
  .profile-img {}
  .profile-img img {margin-left:5px;float:right;}
  .profile-data strong { }
  #profile-container p { }
  #profile-container .profile-textblock {text-align:justify;}
  .profile-link a:link {color:#999999;text-decoration:none;}
  .profile-link a:active {color:#ff0000;text-decoration:none;}
  .profile-link a:visited {color:#999999;text-decoration:none;}
  .profile-link a:hover{color:#DE7008;text-decoration:none;}
  pre.textmate-source {
    margin: 0;
    padding: 10 0 10 20px;
    font-family: Monaco, monospace;
    font-size: 12px;
    line-height: 1.3em;
    word-wrap: break-word;
    white-space: pre;
    white-space: pre-wrap;
    white-space: -moz-pre-wrap;
    white-space: -o-pre-wrap;
  }

  pre.textmate-source.vibrant_ink {
    color: #FFFFFF;
    background-color: #000000;
  }

  pre.textmate-source .linenum {
    width: 75px;
    padding: 0.1em 1em 0.2em 0;
    color: #888;
    background-color: #eee;
  }
  pre.textmate-source.vibrant_ink span {
    padding-top: 0.2em;
    padding-bottom: 0.1em;
  }
  pre.textmate-source.vibrant_ink ::selection {
    background-color: rgba(53, 73, 60, 0.88);
  }
  /* Text base */
  pre.textmate-source.vibrant_ink .text {
    color: #FFFFFF;
    background-color: #0F0F0F;
  }

  /* Inline Ruby Html */
  pre.textmate-source.vibrant_ink .source_ruby_rails_embedded_html {
    background-color: #000000;
  }

  /* Ruby Html */
  pre.textmate-source.vibrant_ink .text_html_ruby {
    color: #FFFFFF;
    background-color: #101010;
  }

  /* Ruby Number */
  pre.textmate-source.vibrant_ink .constant_numeric_ruby {
    color: #CCFF33;
  }

  /* Ruby source */
  pre.textmate-source.vibrant_ink .source_ruby {
  }

  /* Source base */
  pre.textmate-source.vibrant_ink .source {
    color: #FFFFFF;
    background-color: #000000;
  }

  /* Comment */
  pre.textmate-source.vibrant_ink .comment {
    color: #9933CC;
  }

  /* Constant */
  pre.textmate-source.vibrant_ink .constant {
    color: #339999;
  }

  /* Keyword */
  pre.textmate-source.vibrant_ink .keyword {
    color: #FF6600;
  }

  /* Pre-processor Line */
  pre.textmate-source.vibrant_ink .keyword_preprocessor {
    color: #EDF8F9;
  }

  /* Pre-processor Directive */
  pre.textmate-source.vibrant_ink .keyword_preprocessor .directive {
    color: #FFFFFF;
  }

  /* Function name */
  pre.textmate-source.vibrant_ink .entity_name_function, pre.textmate-source.vibrant_ink .storage_type_function_js {
    color: #FFCC00;
  }

  /* Function argument */
  pre.textmate-source.vibrant_ink .variable_parameter {
    font-style: italic;
  }

  /* Block comment */
  pre.textmate-source.vibrant_ink .source .comment_block {
    color: #772CB7;
    background-color: #070707;
  }

  /* Variable */
  pre.textmate-source.vibrant_ink .variable_other {
    color: #FFFFFF;
  }

  /* ActiveRecord Function */
  pre.textmate-source.vibrant_ink .support_function_activerecord_rails {
    color: #999966;
  }

  /* String */
  pre.textmate-source.vibrant_ink .string {
    color: #66FF00;
  }

  /* String escapes */
  pre.textmate-source.vibrant_ink .string .constant_character_escape {
    color: #AAAAAA;
  }

  /* String (executed) */
  pre.textmate-source.vibrant_ink .string_interpolated {
    color: #000000;
    background-color: #CCCC33;
  }

  /* Regular expression */
  pre.textmate-source.vibrant_ink .string_regexp {
    color: #44B4CC;
  }

  /* String (literal) */
  pre.textmate-source.vibrant_ink .string_literal {
    color: #CCCC33;
  }

  /* String escapes (executed) */
  pre.textmate-source.vibrant_ink .string_interpolated .constant_character_escape {
    color: #555555;
  }

  /* Class name */
  pre.textmate-source.vibrant_ink .entity_name_class, pre.textmate-source.vibrant_ink .support_class_js {
    text-decoration: underline;
  }

  /* Class inheritance */
  pre.textmate-source.vibrant_ink .entity_other_inherited-class {
    font-style: italic;
    text-decoration: underline;
  }

  /* Tag name */
  pre.textmate-source.vibrant_ink .entity_name_tag {
  }

  /* Html Meta */
  pre.textmate-source.vibrant_ink .meta_tag_inline_any_html, pre.textmate-source.vibrant_ink . .meta_tag_block_any_html {
    color: #FF6600;
  }

  /* Tag attribute */
  pre.textmate-source.vibrant_ink .entity_other_attribute-name {
    color: #99CC99;
    font-style: italic;
  }

  /* Other Keywords */
  pre.textmate-source.vibrant_ink .keyword_other {
    color: #DDE93D;
  }

  /* CSS Selector */
  pre.textmate-source.vibrant_ink .meta_selector_css, pre.textmate-source.vibrant_ink .entity_other_attribute-name_pseudo-class_css, pre.textmate-source.vibrant_ink .entity_name_tag_wildcard_css, pre.textmate-source.vibrant_ink .entity_other_attribute-name_id_css, pre.textmate-source.vibrant_ink .entity_other_attribute-name_class_css {
    color: #FF6600;
  }

  /* CSS Property */
  pre.textmate-source.vibrant_ink .support_type_property-name_css {
    color: #999966;
  }

  /* CSS Other */
  pre.textmate-source.vibrant_ink .keyword_other_unit_css, pre.textmate-source.vibrant_ink .constant_other_rgb-value_css, pre.textmate-source.vibrant_ink .constant_numeric_css {
    color: #FFFFFF;
  }

  /* Javascript Events */
  pre.textmate-source.vibrant_ink .support_function_event-handler_js {
    color: #FFFFFF;
  }

  /* Javascript Operators */
  pre.textmate-source.vibrant_ink .keyword_operator_js {
    color: #FFFFFF;
  }

  /* Javascript Keywords */
  pre.textmate-source.vibrant_ink .keyword_control_js {
    color: #CCCC66;
  }

  /* Prototype Objects */
  pre.textmate-source.vibrant_ink .support_class_prototype_js {
    color: #FFFFFF;
  }

  /* Prototype Methods */
  pre.textmate-source.vibrant_ink .object_property_function_prototype_js {
    color: #FF6600;
  }
  </style>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <meta name="MSSmartTagsPreventParsing" content="true" />
  <link rel="alternate" type="application/atom+xml" title="Jay Fields Thoughts - Atom" href="http://blog.jayfields.com/feeds/posts/default" />
  <link rel="alternate" type="application/rss+xml" title="Jay Fields Thoughts - RSS" href="http://blog.jayfields.com/feeds/posts/default?alt=rss" />
  <link rel="service.post" type="application/atom+xml" title="Jay Fields Thoughts - Atom" href="http://www.blogger.com/feeds/12467669/posts/default" />

  <link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www2.blogger.com/rsd.g?blogID=12467669" />
  <meta name="ROBOTS" content="INDEX,FOLLOW" />
  <meta name="verify-v1" content="oibfktdgSSDVompmRY8Q0Uq27ZqVRMb/up5HWKVvUlA=" />
  <link rel="alternate" type="application/atom+xml" title="Jay Fields Thoughts - Atom" href="http://blog.jayfields.com/feeds/116144370723105401/comments/default" />
  <style type="text/css">
  @import url("http://www2.blogger.com/css/blog_controls.css");
  @import url("http://www2.blogger.com/dyn-css/authorization.css?blogID=12467669");
  </style>

<link rel="me" href="http://www.blogger.com/profile/17462694742069971053" />
<link rel="openid.server" href="http://www.blogger.com/openid-server.g" />
<!-- --><style type="text/css">@import url(http://www.blogger.com/static/v1/v-css/navbar/697174003-classic.css);
div.b-mobile {display:none;}
</style>

</head>

<body><script type="text/javascript">
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener("load",
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent('onload', function(){ object[attribute] = val; });
      }
    }
  </script>
<iframe src="http://www.blogger.com/navbar.g?targetBlogID=12467669&amp;blogName=Jay+Fields%27+Thoughts&amp;publishMode=PUBLISH_MODE_HOSTED&amp;navbarType=BLACK&amp;layoutType=CLASSIC&amp;searchRoot=http%3A%2F%2Fblog.jayfields.com%2Fsearch&amp;blogLocale=en_US&amp;homepageUrl=http%3A%2F%2Fblog.jayfields.com%2F" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" height="30px" width="100%" id="navbar-iframe" allowtransparency="true" title="Blogger Navigation and Search"></iframe>
<div></div>

<!-- Heading -->
<div id="header">
  <h1>
    
      Jay Fields' Thoughts
      
    </h1>
    <p id="description">experiences in software development</p>
  </div>


  <!-- Main Column -->
  <div id="mainClm">


    <!-- Blog Posts -->


      
        <h3>Tuesday, April 10, 2007</h3>
      
      <a name="6983160129561153371"></a>
      
        <h2>
          
            <a href="http://blog.jayfields.com/2007/04/rails-use-ruby-schema-syntax-without.html" title="permanent link" style="color:555555;text-decoration:none">Rails: Use Ruby Schema syntax without using Migrations</a>
            
        </h2>
      
      <div class="blogPost">
I've touched on this topic a few times.  I previously listed <a href="http://blog.jayfields.com/2006/12/rails-migrations-with-large-team-part.html">the pains</a> of using Migrations.  And, in my last post I gave <a href="http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html">an example</a> of our solution.  But, I never went further into why we made the choice.<br /><br />For my current team, the choice was a fairly easy one.  It's a large team and we were churning out migrations very quickly. Of course, the numbering became an issue, but keeping a consistent view of the database became a larger issue.  There was no one place to get a clear view of what the table looked like (in code).<br /><br />Another issue with Migrations is that the self.down methods are never really tested.  Sure, you might go down then up with each build, but do you test the application at every step down and up?  Without running all the tests at each down, it's impossible to know that the self.down did exactly what you expected.<br /><br />Also, how often do you need to step up or down? We found that we wanted to drop the entire db with each build to ensure that we didn't have any data dependencies.  Therefore, going back a version or 2 never seemed valuable.<br /><br />Most importantly, we were eventually going to need to generate SQL and send it to the database group.  This meant that migrations were only ever going to be run by our team.  And, if we needed a view of the database at any given date, we could just look in Subversion for that copy of our schema.<br /><br />Given the above thoughts, we decided to create one schema file per release.  The schema file uses the same syntax as migrations and even allows us to specify the schema version (very much like the idea of using one migration per release).<pre>ActiveRecord::Schema.define(:version => 1) do<br /><br />  create_table :accounts, :force => true do |t|<br />    t.column :first_name, :string<br />    t.column :last_name, :string<br />    t.column :username, :string<br />    t.column :password, :string<br />    t.column :email, :string<br />    t.column :company, :string<br />  end<br /><br />  ...<br />end</pre>And, in case you missed it in the previous post, the task to run it is very simple.<pre>task :migrate => :environment do<br />  ActiveRecord::Base.establish_connection(environment)<br />  require File.dirname(__FILE__) + '/../../db/schema/release_1.rb'<br />end</pre>Migrations are fantastic, but if you don't need them you shouldn't live with the overhead.<p class="blogger-labels">Labels: <a rel='tag' href="http://blog.jayfields.com/search/label/migration">migration</a>, <a rel='tag' href="http://blog.jayfields.com/search/label/rails">rails</a>, <a rel='tag' href="http://blog.jayfields.com/search/label/ruby">ruby</a>, <a rel='tag' href="http://blog.jayfields.com/search/label/schema">schema</a></p>
<br/><br/>
        <div class="byline">Share:&nbsp;&nbsp;<a title="Rails: Use Ruby Schema syntax without using Migrations" href = "mailto:?body=Check%20it: http://blog.jayfields.com/2007/04/rails-use-ruby-schema-syntax-without.html&amp;subject=Rails: Use Ruby Schema syntax without using Migrations">Email</a>&nbsp;&nbsp;|
          <a href = "http://del.icio.us/post?url=http://blog.jayfields.com/2007/04/rails-use-ruby-schema-syntax-without.html&amp;title=Rails: Use Ruby Schema syntax without using Migrations" title="Rails: Use Ruby Schema syntax without using Migrations" >Del.icio.us</a>&nbsp;&nbsp;|
          <a href = "http://www.digg.com/submit?url=http://blog.jayfields.com/2007/04/rails-use-ruby-schema-syntax-without.html&amp;phase=2" title="Rails: Use Ruby Schema syntax without using Migrations" >Digg</a>&nbsp;&nbsp;|
          <a href = "http://reddit.com/submit?url=http://blog.jayfields.com/2007/04/rails-use-ruby-schema-syntax-without.html&amp;title=Rails: Use Ruby Schema syntax without using Migrations" title="Rails: Use Ruby Schema syntax without using Migrations">Reddit</a>&nbsp;&nbsp;|
          <a href = "http://www.shadows.com/bookmark/saveLink.rails?page=http://blog.jayfields.com/2007/04/rails-use-ruby-schema-syntax-without.html&amp;title=Rails: Use Ruby Schema syntax without using Migrations">Shadow</a>&nbsp;&nbsp;|
          <a href = "http://www.rojo.com/submit/?url=http://blog.jayfields.com/2007/04/rails-use-ruby-schema-syntax-without.html&amp;title=Rails: Use Ruby Schema syntax without using Migrations&amp;summary=Rails: Use Ruby Schema syntax without using Migrations;ready=true">Rojo</a>
        </div>
        <br />
        <div class="byline"><a href="http://blog.jayfields.com/2007/04/rails-use-ruby-schema-syntax-without.html" title="permanent link">#</a> posted by Jay Fields : 1:06 PM

          
            &nbsp;<a href="https://www.blogger.com/comment.g?blogID=12467669&postID=6983160129561153371"location.href=https://www.blogger.com/comment.g?blogID=12467669&postID=6983160129561153371;>2 comments</a> <span class="item-action"><a href="http://www.blogger.com/email-post.g?blogID=12467669&postID=6983160129561153371" title="Email Post"><img class="icon-action" alt="" src="http://img2.blogblog.com/img/icon18_email.gif" height="13" width="18"/></a></span><span class="item-control blog-admin pid-42433669"><a style="border:none;" href="http://www.blogger.com/post-edit.g?blogID=12467669&postID=6983160129561153371" title="Edit Post"><img class="icon-action" alt="" src="http://img2.blogblog.com/img/icon18_edit_allbkg.gif" height="18" width="18"></a></span></div>
            <div class="byline">[ (<a href="http://www.jayfields.com">www</a>) (<a href="mailto:contact+at+jayfields.com">email</a>) (<a href="http://www.drwtrading.com">work</a>) ]</div>
            </div>
            
          
      
      <a name="2882629229987116564"></a>
      
        <h2>
          
            <a href="http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html" title="permanent link" style="color:555555;text-decoration:none">Rails: Generating an Oracle DDL without Oracle installed</a>
            
        </h2>
      
      <div class="blogPost">
At my current project we are developing on <a href="http://www.apple.com/macmini/">Mac Minis</a> and deploying to linux boxes. A fairly large problem with developing on Mac Minis is that there's no driver for Oracle that runs on the Intel Mac Minis.<br /><br />We (painfully at times) address this problem by running Postgres locally and Oracle on our CI boxes. This works for us, but recently we ran into some pain.  We needed to create SQL scripts from our schema definitions.  <br /><br />We store our schema definitions in the same format as a migration, but we put them all in one block, similar to the code below.<pre>ActiveRecord::Schema.define(:version => 1) do<br /><br />  create_table :accounts, :force => true do |t|<br />    t.column :first_name, :string<br />    t.column :last_name, :string<br />    t.column :username, :string<br />    t.column :password, :string<br />    t.column :email, :string<br />    t.column :company, :string<br />  end<br /><br />  ...<br />end</pre>And, we define our db:migrate to simply require this file.<pre>task :migrate => :environment do<br />  ActiveRecord::Base.establish_connection(environment)<br />  require File.dirname(__FILE__) + '/../../db/schema/release_1.rb'<br />end</pre>Since we run against Oracle on our CI boxes we could generate the DDL as a build artifact, but each time we make a change to the DDL we would need to check-in to see the changes for Oracle.  This wasn't the most efficient use of our time, so we decided to get the OracleAdapter working on our MacMinis, despite not having the OCI8 drivers or oracle installed.<br /><br />The code isn't the cleanest I've written, but it's also not as bad as I expected.  It works for generating DDLs; however, it won't work if you have any code that requires a trip to the database to get table information (SomeActiveRecordSubClass.create is a good example of code that requires a trip).<pre>namespace :db do<br />  namespace :generate do<br />    namespace :oracle do<br />      desc "generate sql ddl"<br />      task :ddl do<br />      $:.unshift File.dirname(__FILE__) + "../../../tools/fake_oci8"<br />      Rake::Task[:environment].execute<br />      file = File.open(RAILS_ROOT + "/db/oracle_ddl.sql", 'w')<br /><br />      ActiveRecord::Base.instance_eval do<br />        def connection <br />          ActiveRecord::ConnectionAdapters::OracleAdapter.new nil<br />        end<br />      end<br /><br />      class ActiveRecord::Schema < ActiveRecord::Migration<br />        def self.define (info={}, &block)<br />          instance_eval(&block)<br />        end<br />      end<br /><br />      ActiveRecord::Base.connection.class.class_eval do<br />        define_method :execute do |*args| <br />          file << "#{args.first};\n"<br />        end<br />      end<br /><br />      Rake::Task[:"db:migrate"].execute<br />      file.close<br />    end<br />  end<br />end</pre>Much like a <a href="http://blog.jayfields.com/2006/11/rails-generate-sql-from-migrations.html">previous entry</a>, I'm stealing the execute method to get the generated SQL. This time, I've also stolen the AR::Base.connection method and put an OracleAdapter in there.  The change to AR::Schema is required because the original method updates the schema_info table at the end.  Since I'm not using migrations, the update is unnecessary.<br /><br />The result: An Oracle specific DDL generated without actually connecting to an Oracle database.<p class="blogger-labels">Labels: <a rel='tag' href="http://blog.jayfields.com/search/label/ddl">ddl</a>, <a rel='tag' href="http://blog.jayfields.com/search/label/migration">migration</a>, <a rel='tag' href="http://blog.jayfields.com/search/label/oracle">oracle</a>, <a rel='tag' href="http://blog.jayfields.com/search/label/rails">rails</a>, <a rel='tag' href="http://blog.jayfields.com/search/label/ruby">ruby</a></p>
<br/><br/>
        <div class="byline">Share:&nbsp;&nbsp;<a title="Rails: Generating an Oracle DDL without Oracle installed" href = "mailto:?body=Check%20it: http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html&amp;subject=Rails: Generating an Oracle DDL without Oracle installed">Email</a>&nbsp;&nbsp;|
          <a href = "http://del.icio.us/post?url=http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html&amp;title=Rails: Generating an Oracle DDL without Oracle installed" title="Rails: Generating an Oracle DDL without Oracle installed" >Del.icio.us</a>&nbsp;&nbsp;|
          <a href = "http://www.digg.com/submit?url=http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html&amp;phase=2" title="Rails: Generating an Oracle DDL without Oracle installed" >Digg</a>&nbsp;&nbsp;|
          <a href = "http://reddit.com/submit?url=http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html&amp;title=Rails: Generating an Oracle DDL without Oracle installed" title="Rails: Generating an Oracle DDL without Oracle installed">Reddit</a>&nbsp;&nbsp;|
          <a href = "http://www.shadows.com/bookmark/saveLink.rails?page=http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html&amp;title=Rails: Generating an Oracle DDL without Oracle installed">Shadow</a>&nbsp;&nbsp;|
          <a href = "http://www.rojo.com/submit/?url=http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html&amp;title=Rails: Generating an Oracle DDL without Oracle installed&amp;summary=Rails: Generating an Oracle DDL without Oracle installed;ready=true">Rojo</a>
        </div>
        <br />
        <div class="byline"><a href="http://blog.jayfields.com/2007/04/rails-generating-oracle-ddl-without.html" title="permanent link">#</a> posted by Jay Fields : 12:38 PM

          
            &nbsp;<a href="https://www.blogger.com/comment.g?blogID=12467669&postID=2882629229987116564"location.href=https://www.blogger.com/comment.g?blogID=12467669&postID=2882629229987116564;>0 comments</a> <span class="item-action"><a href="http://www.blogger.com/email-post.g?blogID=12467669&postID=2882629229987116564" title="Email Post"><img class="icon-action" alt="" src="http://img2.blogblog.com/img/icon18_email.gif" height="13" width="18"/></a></span><span class="item-control blog-admin pid-42433669"><a style="border:none;" href="http://www.blogger.com/post-edit.g?blogID=12467669&postID=2882629229987116564" title="Edit Post"><img class="icon-action" alt="" src="http://img2.blogblog.com/img/icon18_edit_allbkg.gif" height="18" width="18"></a></span></div>
            <div class="byline">[ (<a href="http://www.jayfields.com">www</a>) (<a href="mailto:contact+at+jayfields.com">email</a>) (<a href="http://www.drwtrading.com">work</a>) ]</div>
            </div>
            
          

          <!-- 	In accordance to the Blogger terms of service, please leave this button somewhere on your blogger-powered page. Thanks! -->
          <p><a href="http://www.blogger.com"><img width="88" height="31" src="http://buttons.blogger.com/bloggerbutton1.gif" border="0" alt="This page is powered by Blogger. Isn't yours?" /></a></p>
        </div>

        <!-- Sidebar -->
        <div id="sideBar">

          <br>
          <br>


          <!-- 

            +++++++++++++++++++++++++++++++++++++++++++++++++

            Add things to your sidebar here.
            Use the format:

            <li><a href="URL">Link Text</a></li>

            +++++++++++++++++++++++++++++++++++++++++++++++++

          -->

          <h6>Syndicate</h6><br>
<a href="http://feeds.feedburner.com/jayfields/mjKQ" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" style="border:0"/></a><a href="http://feeds.feedburner.com/jayfields/mjKQ" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"> Subscribe </a>
<br>
          <p><a href="http://feeds.feedburner.com/jayfields/mjKQ"><img src="http://feeds.feedburner.com/~fc/jayfields/mjKQ?bg=eeeeee&amp;fg=008000&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
          <a href="http://www.bloglines.com/sub/http://jayfields.blogspot.com/atom.xml"><img src="http://www.bloglines.com/images/sub_modern5.gif" border="0" alt="Subscribe with Bloglines" /></a>
          <br><br>
          <a href="http://add.my.yahoo.com/rss?url=http://blog.jayfields.com/atom.xml" title="Jay Fields"><img src="http://us.i1.yimg.com/us.yimg.com/i/us/my/addtomyyahoo4.gif" alt="" style="border:0"/></a>
          <br/><br/>
          <a href="http://fusion.google.com/add?feedurl=http://blog.jayfields.com/atom.xml"><img src="http://buttons.googlesyndication.com/fusion/add.gif" width="104" height="17" style="border:0" alt="Add to Google"/></a>
          <br/><br/><br/>
          <h6>Archives</h6>
          <ul>
            <li><a href='http://blog.jayfields.com/2005_03_01_archive.html'>March 2005</a></li><li><a href='http://blog.jayfields.com/2005_04_01_archive.html'>April 2005</a></li><li><a href='http://blog.jayfields.com/2005_05_01_archive.html'>May 2005</a></li><li><a href='http://blog.jayfields.com/2005_06_01_archive.html'>June 2005</a></li><li><a href='http://blog.jayfields.com/2005_07_01_archive.html'>July 2005</a></li><li><a href='http://blog.jayfields.com/2005_08_01_archive.html'>August 2005</a></li><li><a href='http://blog.jayfields.com/2005_09_01_archive.html'>September 2005</a></li><li><a href='http://blog.jayfields.com/2005_11_01_archive.html'>November 2005</a></li><li><a href='http://blog.jayfields.com/2005_12_01_archive.html'>December 2005</a></li><li><a href='http://blog.jayfields.com/2006_01_01_archive.html'>January 2006</a></li><li><a href='http://blog.jayfields.com/2006_02_01_archive.html'>February 2006</a></li><li><a href='http://blog.jayfields.com/2006_03_01_archive.html'>March 2006</a></li><li><a href='http://blog.jayfields.com/2006_04_01_archive.html'>April 2006</a></li><li><a href='http://blog.jayfields.com/2006_05_01_archive.html'>May 2006</a></li><li><a href='http://blog.jayfields.com/2006_06_01_archive.html'>June 2006</a></li><li><a href='http://blog.jayfields.com/2006_07_01_archive.html'>July 2006</a></li><li><a href='http://blog.jayfields.com/2006_08_01_archive.html'>August 2006</a></li><li><a href='http://blog.jayfields.com/2006_09_01_archive.html'>September 2006</a></li><li><a href='http://blog.jayfields.com/2006_10_01_archive.html'>October 2006</a></li><li><a href='http://blog.jayfields.com/2006_11_01_archive.html'>November 2006</a></li><li><a href='http://blog.jayfields.com/2006_12_01_archive.html'>December 2006</a></li><li><a href='http://blog.jayfields.com/2007_01_01_archive.html'>January 2007</a></li><li><a href='http://blog.jayfields.com/2007_02_01_archive.html'>February 2007</a></li><li><a href='http://blog.jayfields.com/2007_03_01_archive.html'>March 2007</a></li><li><a href='http://blog.jayfields.com/2007_04_01_archive.html'>April 2007</a></li><li><a href='http://blog.jayfields.com/2007_05_01_archive.html'>May 2007</a></li><li><a href='http://blog.jayfields.com/2007_06_01_archive.html'>June 2007</a></li><li><a href='http://blog.jayfields.com/2007_07_01_archive.html'>July 2007</a></li><li><a href='http://blog.jayfields.com/2007_08_01_archive.html'>August 2007</a></li><li><a href='http://blog.jayfields.com/2007_09_01_archive.html'>September 2007</a></li><li><a href='http://blog.jayfields.com/2007_10_01_archive.html'>October 2007</a></li><li><a href='http://blog.jayfields.com/2007_11_01_archive.html'>November 2007</a></li><li><a href='http://blog.jayfields.com/2007_12_01_archive.html'>December 2007</a></li><li><a href='http://blog.jayfields.com/2008_01_01_archive.html'>January 2008</a></li><li><a href='http://blog.jayfields.com/2008_02_01_archive.html'>February 2008</a></li><li><a href='http://blog.jayfields.com/2008_03_01_archive.html'>March 2008</a></li><li><a href='http://blog.jayfields.com/2008_04_01_archive.html'>April 2008</a></li><li><a href='http://blog.jayfields.com/2008_05_01_archive.html'>May 2008</a></li><li><a href='http://blog.jayfields.com/2008_06_01_archive.html'>June 2008</a></li><li><a href='http://blog.jayfields.com/2008_07_01_archive.html'>July 2008</a></li><li><a href='http://blog.jayfields.com/2008_08_01_archive.html'>August 2008</a></li><li><a href='http://blog.jayfields.com/2008_09_01_archive.html'>September 2008</a></li><li><a href='http://blog.jayfields.com/2008_10_01_archive.html'>October 2008</a></li><li><a href='http://blog.jayfields.com/2008_11_01_archive.html'>November 2008</a></li><li><a href='http://blog.jayfields.com/2008_12_01_archive.html'>December 2008</a></li><li><a href='http://blog.jayfields.com/2009_01_01_archive.html'>January 2009</a></li><li><a href='http://blog.jayfields.com/2009_02_01_archive.html'>February 2009</a></li><li><a href='http://blog.jayfields.com/2009_03_01_archive.html'>March 2009</a></li><li><a href='http://blog.jayfields.com/2009_05_01_archive.html'>May 2009</a></li><li><a href='http://blog.jayfields.com/2009_06_01_archive.html'>June 2009</a></li><li><a href='http://blog.jayfields.com/2009_07_01_archive.html'>July 2009</a></li><li><a href='http://blog.jayfields.com/2009_08_01_archive.html'>August 2009</a></li><li><a href='http://blog.jayfields.com/2009_09_01_archive.html'>September 2009</a></li><li><a href='http://blog.jayfields.com/2009_10_01_archive.html'>October 2009</a></li><li><a href='http://blog.jayfields.com/2009_11_01_archive.html'>November 2009</a></li><li><a href='http://blog.jayfields.com/2009_12_01_archive.html'>December 2009</a></li><li><a href='http://blog.jayfields.com/2010_02_01_archive.html'>February 2010</a></li><li><a href='http://blog.jayfields.com/2010_03_01_archive.html'>March 2010</a></li><li><a href='http://blog.jayfields.com/2010_04_01_archive.html'>April 2010</a></li><li><a href='http://blog.jayfields.com/2010_07_01_archive.html'>July 2010</a></li><li><a href='http://blog.jayfields.com/2010_08_01_archive.html'>August 2010</a></li><li><a href='http://blog.jayfields.com/2010_09_01_archive.html'>September 2010</a></li><li><a href='http://blog.jayfields.com/2010_10_01_archive.html'>October 2010</a></li><li><a href='http://blog.jayfields.com/2010_11_01_archive.html'>November 2010</a></li><li><a href='http://blog.jayfields.com/2010_12_01_archive.html'>December 2010</a></li> 
            <script type="text/javascript" language="Javascript">if (location.href.indexOf("archive")!=-1) document.write("<li><strong><a href=\"http://blog.jayfields.com/\">Current Posts</a></strong></li>");</script>
          </ul>

        </div>

        <script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
        </script>
        <script type="text/javascript">
        _uacct = "UA-1151928-1";
        urchinTracker();
        </script>


      <script type="text/javascript" src="http://www.blogger.com/static/v1/common/js/755007736-csitail.js"></script>
<script type="text/javascript">BLOG_initCsi('classic_blogspot');</script></body>
      </html>