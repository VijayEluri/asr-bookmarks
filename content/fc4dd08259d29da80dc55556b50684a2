<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><title>What Does Monad Mean?</title><link rel="stylesheet" href="style.css" type="text/css"><meta name="generator" content="DocBook XSL Stylesheets V1.75.2"><meta name="description" content="This presentation is intended for the November 2009 meeting of the Brisbane Functional Programming Group . The monad concept will be presented to an audience with the assumption of knowledge of the generics concept of either the Java or C# programming languages or some other form of parametric polymorphism. The concept will be presented in a way with the objective of supplying enough understanding to apply the practical implications and will not address the underlying mathematics or category theory. The monad concept has attracted much mysticism, misunderstanding and mythology, which will also be addressed. Questions and comments should be forwarded to Tony Morris . This work is licensed under a Creative Commons Attribution-Share Alike 3.0 Unported License ."><link rel="home" href="index.html" title="What Does Monad Mean?"><link rel="next" href="ar01s02.html" title="Mythology"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">What Does Monad Mean?</th></tr><tr><td width="20%" align="left"> </td><th width="60%" align="center"> </th><td width="20%" align="right"> <a accesskey="n" href="ar01s02.html">Next</a></td></tr></table><hr></div><div class="article" title="What Does Monad Mean?"><div class="titlepage"><div><div><h2 class="title"><a name="id217845"></a>What Does Monad Mean?</h2></div><div><div class="author"><h3 class="author"><span class="firstname">Tony</span> <span class="surname">Morris</span></h3></div></div><div><p class="copyright">Copyright © 2009 
      Tony Morris
    </p></div><div><div class="abstract" title="Abstract"><a name="Abstract"></a><p class="title"><b>Abstract</b></p><p>
      This presentation is intended for the November 2009 meeting of the Brisbane Functional Programming Group
      <a class="ulink" href="http://www.meetup.com/Brisbane-Functional-Programming-Group-BFG/" target="_top">http://www.meetup.com/Brisbane-Functional-Programming-Group-BFG/</a>.
    </p><p>
      The <span class="emphasis"><em>monad</em></span> concept will be presented to an audience with the assumption of knowledge of the
      generics concept of either the Java or C# programming languages or some other form of parametric polymorphism. The
      concept will be presented in a way with the objective of supplying enough understanding to apply the practical
      implications and will not address the underlying mathematics or category theory.
    </p><p>
      The monad concept has attracted much mysticism, misunderstanding and mythology, which will also be addressed.
    </p><p>
      Questions and comments should be forwarded to <a class="ulink" href="mailto:code@tmorris.net" target="_top">Tony Morris</a>
      <a class="xref" href="apb.html" title="B. Tony Morris - PGP Key">Appendix B, <i>Tony Morris - PGP Key</i></a>.
    </p><p>
      This work is licensed under a Creative Commons Attribution-Share Alike 3.0 Unported License
      <a class="xref" href="apc.html" title="C. Licence">Appendix C, <i>Licence</i></a>.
    </p></div></div></div><hr></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="sect1"><a href="index.html#Introduction">Introducton</a></span></dt><dt><span class="sect1"><a href="ar01s02.html">Mythology</a></span></dt><dd><dl><dt><span class="sect2"><a href="ar01s02.html#id278091">Debunking</a></span></dt><dt><span class="sect2"><a href="ar01s02s02.html">Monads are a hack for working with I/O in the real world</a></span></dt><dt><span class="sect2"><a href="ar01s02s03.html">Monads are only for functional or esoteric programming languages</a></span></dt><dt><span class="sect2"><a href="ar01s02s04.html">Monads make my program impure</a></span></dt></dl></dd><dt><span class="sect1"><a href="ar01s03.html">Terminology</a></span></dt><dd><dl><dt><span class="sect2"><a href="ar01s03.html#id277684">A quick note on terminology</a></span></dt><dt><span class="sect2"><a href="ar01s03s02.html">Monad laws</a></span></dt><dt><span class="sect2"><a href="ar01s03s03.html">Type constructors and kinds</a></span></dt><dt><span class="sect2"><a href="ar01s03s04.html">Higher-order Polymorphism</a></span></dt></dl></dd><dt><span class="sect1"><a href="ar01s04.html">So what is a Monad then?</a></span></dt><dd><dl><dt><span class="sect2"><a href="ar01s04.html#id277626">It's a fluffy cloud</a></span></dt><dt><span class="sect2"><a href="ar01s04s02.html">Produced by a sonic boom</a></span></dt><dt><span class="sect2"><a href="ar01s04s03.html">Monad metaphors are stupid</a></span></dt><dt><span class="sect2"><a href="ar01s04s04.html">First let's pretend that Java/C# are practical</a></span></dt><dt><span class="sect2"><a href="ar01s04s05.html">Finished staring?</a></span></dt><dt><span class="sect2"><a href="ar01s04s06.html">Monads and more monads</a></span></dt><dt><span class="sect2"><a href="ar01s04s07.html">More examples</a></span></dt><dt><span class="sect2"><a href="ar01s04s08.html">Other examples include</a></span></dt></dl></dd><dt><span class="sect1"><a href="ar01s05.html">So what, why do I care?</a></span></dt><dd><dl><dt><span class="sect2"><a href="ar01s05.html#id277638">Repetition is for solving non-problems using clumsy languages</a></span></dt><dt><span class="sect2"><a href="ar01s05s02.html">And it's not just monads</a></span></dt></dl></dd><dt><span class="sect1"><a href="ar01s06.html">C#, LINQ Query Comprehensions and Monads</a></span></dt><dd><dl><dt><span class="sect2"><a href="ar01s06.html#id277645">C# 3.0</a></span></dt><dt><span class="sect2"><a href="ar01s06s02.html">Syntax sugar</a></span></dt><dt><span class="sect2"><a href="ar01s06s03.html">LINQ</a></span></dt></dl></dd><dt><span class="sect1"><a href="ar01s07.html">Scala for-comprehensions and Monads</a></span></dt><dd><dl><dt><span class="sect2"><a href="ar01s07.html#id278585">Scala</a></span></dt><dt><span class="sect2"><a href="ar01s07s02.html">For-comprehensions</a></span></dt></dl></dd><dt><span class="sect1"><a href="ar01s08.html">Transforming side-effects using monads</a></span></dt><dd><dl><dt><span class="sect2"><a href="ar01s08.html#id278602">Suppose a program in a typical language</a></span></dt><dt><span class="sect2"><a href="ar01s08s02.html">Change the syntax</a></span></dt><dt><span class="sect2"><a href="ar01s08s03.html">More changes</a></span></dt></dl></dd><dt><span class="sect1"><a href="ar01s09.html">More fun</a></span></dt><dt><span class="sect1"><a href="ar01s10.html">Special Thanks</a></span></dt><dt><span class="bibliography"><a href="bi01.html">Bibliography</a></span></dt><dt><span class="appendix"><a href="apa.html">A. Code Examples</a></span></dt><dd><dl><dt><span class="sect1"><a href="apa.html#id279402">Scala</a></span></dt><dt><span class="sect1"><a href="apas02.html">C#</a></span></dt><dt><span class="sect1"><a href="apas03.html">Haskell</a></span></dt></dl></dd><dt><span class="appendix"><a href="apb.html">B. Tony Morris - PGP Key</a></span></dt><dt><span class="appendix"><a href="apc.html">C. Licence</a></span></dt></dl></div><div class="sect1" title="Introducton"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="Introduction"></a>Introducton</h2></div></div></div><p>
    Moggi first described monads for use in structuring programs [<a href="bi01.html#MoggiMonads" class="biblioref" title="[MoggiMonads1988]"><abbr class="abbrev">MoggiMonads1988</abbr></a>]. Philip Wadler and
    Simon Peyton-Jones have worked further with the concept on introducing them to purely functional programming
    languages.
  </p><p>
    It is often said that monads are specific to functional programming. This is not true. Indeed, the term
    <span class="quote">&#8220;<span class="quote">functional programming</span>&#8221;</span> is itself quite a misnomer. It's simply practical programming and the thesis
    is composition and abstraction (see [<a href="bi01.html#WhyFP" class="biblioref" title="[WhyFP]"><abbr class="abbrev">WhyFP</abbr></a>]). Monads are used in every single programming
    language. The only distinction is whether  or not the user is aware of the fact.
  </p><p>
    This presentation will set aside the myths and present you with a concrete understanding of a rather simple concept
    that is easy to understand, but with far reaching implications. If the objectives of this presentation are met, you
    will be equipped to take advantage of this concept in your every-day programming and explore those implications
    further.
  </p></div></div><div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"> </td><td width="20%" align="center"> </td><td width="40%" align="right"> <a accesskey="n" href="ar01s02.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top"> </td><td width="20%" align="center"> </td><td width="40%" align="right" valign="top"> Mythology</td></tr></table></div></body></html>
